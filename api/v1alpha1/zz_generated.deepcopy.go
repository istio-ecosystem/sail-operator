//go:build !ignore_autogenerated

// Copyright Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"
	"k8s.io/api/autoscaling/v2"
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchConfig) DeepCopyInto(out *ArchConfig) {
	*out = *in
	if in.Amd64 != nil {
		in, out := &in.Amd64, &out.Amd64
		*out = new(uint32)
		**out = **in
	}
	if in.Ppc64Le != nil {
		in, out := &in.Ppc64Le, &out.Ppc64Le
		*out = new(uint32)
		**out = **in
	}
	if in.S390X != nil {
		in, out := &in.S390X, &out.S390X
		*out = new(uint32)
		**out = **in
	}
	if in.Arm64 != nil {
		in, out := &in.Arm64, &out.Arm64
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchConfig.
func (in *ArchConfig) DeepCopy() *ArchConfig {
	if in == nil {
		return nil
	}
	out := new(ArchConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseConfig) DeepCopyInto(out *BaseConfig) {
	*out = *in
	if in.ExcludedCRDs != nil {
		in, out := &in.ExcludedCRDs, &out.ExcludedCRDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ValidationURL != nil {
		in, out := &in.ValidationURL, &out.ValidationURL
		*out = new(string)
		**out = **in
	}
	if in.ValidationCABundle != nil {
		in, out := &in.ValidationCABundle, &out.ValidationCABundle
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseConfig.
func (in *BaseConfig) DeepCopy() *BaseConfig {
	if in == nil {
		return nil
	}
	out := new(BaseConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CNIAmbientConfig) DeepCopyInto(out *CNIAmbientConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigDir != nil {
		in, out := &in.ConfigDir, &out.ConfigDir
		*out = new(string)
		**out = **in
	}
	if in.DnsCapture != nil {
		in, out := &in.DnsCapture, &out.DnsCapture
		*out = new(bool)
		**out = **in
	}
	if in.Ipv6 != nil {
		in, out := &in.Ipv6, &out.Ipv6
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CNIAmbientConfig.
func (in *CNIAmbientConfig) DeepCopy() *CNIAmbientConfig {
	if in == nil {
		return nil
	}
	out := new(CNIAmbientConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CNIConfig) DeepCopyInto(out *CNIConfig) {
	*out = *in
	if in.Hub != nil {
		in, out := &in.Hub, &out.Hub
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Variant != nil {
		in, out := &in.Variant, &out.Variant
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.PullPolicy != nil {
		in, out := &in.PullPolicy, &out.PullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	if in.CniBinDir != nil {
		in, out := &in.CniBinDir, &out.CniBinDir
		*out = new(string)
		**out = **in
	}
	if in.CniConfDir != nil {
		in, out := &in.CniConfDir, &out.CniConfDir
		*out = new(string)
		**out = **in
	}
	if in.CniConfFileName != nil {
		in, out := &in.CniConfFileName, &out.CniConfFileName
		*out = new(string)
		**out = **in
	}
	if in.CniNetnsDir != nil {
		in, out := &in.CniNetnsDir, &out.CniNetnsDir
		*out = new(string)
		**out = **in
	}
	if in.ExcludeNamespaces != nil {
		in, out := &in.ExcludeNamespaces, &out.ExcludeNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PodAnnotations != nil {
		in, out := &in.PodAnnotations, &out.PodAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PspClusterRole != nil {
		in, out := &in.PspClusterRole, &out.PspClusterRole
		*out = new(string)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(GlobalLoggingConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Repair != nil {
		in, out := &in.Repair, &out.Repair
		*out = new(CNIRepairConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Chained != nil {
		in, out := &in.Chained, &out.Chained
		*out = new(bool)
		**out = **in
	}
	if in.ResourceQuotas != nil {
		in, out := &in.ResourceQuotas, &out.ResourceQuotas
		*out = new(ResourceQuotas)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.Privileged != nil {
		in, out := &in.Privileged, &out.Privileged
		*out = new(bool)
		**out = **in
	}
	if in.SeccompProfile != nil {
		in, out := &in.SeccompProfile, &out.SeccompProfile
		*out = new(v1.SeccompProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.RollingMaxUnavailable != nil {
		in, out := &in.RollingMaxUnavailable, &out.RollingMaxUnavailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CNIConfig.
func (in *CNIConfig) DeepCopy() *CNIConfig {
	if in == nil {
		return nil
	}
	out := new(CNIConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CNIGlobalConfig) DeepCopyInto(out *CNIGlobalConfig) {
	*out = *in
	if in.DefaultResources != nil {
		in, out := &in.DefaultResources, &out.DefaultResources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.Hub != nil {
		in, out := &in.Hub, &out.Hub
		*out = new(string)
		**out = **in
	}
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LogAsJson != nil {
		in, out := &in.LogAsJson, &out.LogAsJson
		*out = new(bool)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(GlobalLoggingConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Variant != nil {
		in, out := &in.Variant, &out.Variant
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CNIGlobalConfig.
func (in *CNIGlobalConfig) DeepCopy() *CNIGlobalConfig {
	if in == nil {
		return nil
	}
	out := new(CNIGlobalConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CNIRepairConfig) DeepCopyInto(out *CNIRepairConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Hub != nil {
		in, out := &in.Hub, &out.Hub
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.LabelPods != nil {
		in, out := &in.LabelPods, &out.LabelPods
		*out = new(bool)
		**out = **in
	}
	if in.RepairPods != nil {
		in, out := &in.RepairPods, &out.RepairPods
		*out = new(bool)
		**out = **in
	}
	if in.CreateEvents != nil {
		in, out := &in.CreateEvents, &out.CreateEvents
		*out = new(string)
		**out = **in
	}
	if in.DeletePods != nil {
		in, out := &in.DeletePods, &out.DeletePods
		*out = new(bool)
		**out = **in
	}
	if in.BrokenPodLabelKey != nil {
		in, out := &in.BrokenPodLabelKey, &out.BrokenPodLabelKey
		*out = new(string)
		**out = **in
	}
	if in.BrokenPodLabelValue != nil {
		in, out := &in.BrokenPodLabelValue, &out.BrokenPodLabelValue
		*out = new(string)
		**out = **in
	}
	if in.InitContainerName != nil {
		in, out := &in.InitContainerName, &out.InitContainerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CNIRepairConfig.
func (in *CNIRepairConfig) DeepCopy() *CNIRepairConfig {
	if in == nil {
		return nil
	}
	out := new(CNIRepairConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CNIUsageConfig) DeepCopyInto(out *CNIUsageConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CNIUsageConfig.
func (in *CNIUsageConfig) DeepCopy() *CNIUsageConfig {
	if in == nil {
		return nil
	}
	out := new(CNIUsageConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CNIValues) DeepCopyInto(out *CNIValues) {
	*out = *in
	if in.Cni != nil {
		in, out := &in.Cni, &out.Cni
		*out = new(CNIConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = new(CNIGlobalConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CNIValues.
func (in *CNIValues) DeepCopy() *CNIValues {
	if in == nil {
		return nil
	}
	out := new(CNIValues)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Certificate) DeepCopyInto(out *Certificate) {
	*out = *in
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.DnsNames != nil {
		in, out := &in.DnsNames, &out.DnsNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Certificate.
func (in *Certificate) DeepCopy() *Certificate {
	if in == nil {
		return nil
	}
	out := new(Certificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientTLSSettings) DeepCopyInto(out *ClientTLSSettings) {
	*out = *in
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(string)
		**out = **in
	}
	if in.CaCertificates != nil {
		in, out := &in.CaCertificates, &out.CaCertificates
		*out = new(string)
		**out = **in
	}
	if in.CredentialName != nil {
		in, out := &in.CredentialName, &out.CredentialName
		*out = new(string)
		**out = **in
	}
	if in.SubjectAltNames != nil {
		in, out := &in.SubjectAltNames, &out.SubjectAltNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Sni != nil {
		in, out := &in.Sni, &out.Sni
		*out = new(string)
		**out = **in
	}
	if in.InsecureSkipVerify != nil {
		in, out := &in.InsecureSkipVerify, &out.InsecureSkipVerify
		*out = new(bool)
		**out = **in
	}
	if in.CaCrl != nil {
		in, out := &in.CaCrl, &out.CaCrl
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientTLSSettings.
func (in *ClientTLSSettings) DeepCopy() *ClientTLSSettings {
	if in == nil {
		return nil
	}
	out := new(ClientTLSSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSource) DeepCopyInto(out *ConfigSource) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.TlsSettings != nil {
		in, out := &in.TlsSettings, &out.TlsSettings
		*out = new(ClientTLSSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.SubscribedResources != nil {
		in, out := &in.SubscribedResources, &out.SubscribedResources
		*out = make([]Resource, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSource.
func (in *ConfigSource) DeepCopy() *ConfigSource {
	if in == nil {
		return nil
	}
	out := new(ConfigSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionPoolSettingsTCPSettingsTcpKeepalive) DeepCopyInto(out *ConnectionPoolSettingsTCPSettingsTcpKeepalive) {
	*out = *in
	if in.Probes != nil {
		in, out := &in.Probes, &out.Probes
		*out = new(uint32)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(metav1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionPoolSettingsTCPSettingsTcpKeepalive.
func (in *ConnectionPoolSettingsTCPSettingsTcpKeepalive) DeepCopy() *ConnectionPoolSettingsTCPSettingsTcpKeepalive {
	if in == nil {
		return nil
	}
	out := new(ConnectionPoolSettingsTCPSettingsTcpKeepalive)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultPodDisruptionBudgetConfig) DeepCopyInto(out *DefaultPodDisruptionBudgetConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultPodDisruptionBudgetConfig.
func (in *DefaultPodDisruptionBudgetConfig) DeepCopy() *DefaultPodDisruptionBudgetConfig {
	if in == nil {
		return nil
	}
	out := new(DefaultPodDisruptionBudgetConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExperimentalConfig) DeepCopyInto(out *ExperimentalConfig) {
	*out = *in
	if in.StableValidationPolicy != nil {
		in, out := &in.StableValidationPolicy, &out.StableValidationPolicy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExperimentalConfig.
func (in *ExperimentalConfig) DeepCopy() *ExperimentalConfig {
	if in == nil {
		return nil
	}
	out := new(ExperimentalConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalConfig) DeepCopyInto(out *GlobalConfig) {
	*out = *in
	if in.Arch != nil {
		in, out := &in.Arch, &out.Arch
		*out = new(ArchConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.CertSigners != nil {
		in, out := &in.CertSigners, &out.CertSigners
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConfigValidation != nil {
		in, out := &in.ConfigValidation, &out.ConfigValidation
		*out = new(bool)
		**out = **in
	}
	if in.DefaultNodeSelector != nil {
		in, out := &in.DefaultNodeSelector, &out.DefaultNodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DefaultPodDisruptionBudget != nil {
		in, out := &in.DefaultPodDisruptionBudget, &out.DefaultPodDisruptionBudget
		*out = new(DefaultPodDisruptionBudgetConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultResources != nil {
		in, out := &in.DefaultResources, &out.DefaultResources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultTolerations != nil {
		in, out := &in.DefaultTolerations, &out.DefaultTolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hub != nil {
		in, out := &in.Hub, &out.Hub
		*out = new(string)
		**out = **in
	}
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IstioNamespace != nil {
		in, out := &in.IstioNamespace, &out.IstioNamespace
		*out = new(string)
		**out = **in
	}
	if in.LogAsJson != nil {
		in, out := &in.LogAsJson, &out.LogAsJson
		*out = new(bool)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(GlobalLoggingConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MeshID != nil {
		in, out := &in.MeshID, &out.MeshID
		*out = new(string)
		**out = **in
	}
	if in.MeshNetworks != nil {
		in, out := &in.MeshNetworks, &out.MeshNetworks
		*out = make(map[string]Network, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.MultiCluster != nil {
		in, out := &in.MultiCluster, &out.MultiCluster
		*out = new(MultiClusterConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PodDNSSearchNamespaces != nil {
		in, out := &in.PodDNSSearchNamespaces, &out.PodDNSSearchNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OmitSidecarInjectorConfigMap != nil {
		in, out := &in.OmitSidecarInjectorConfigMap, &out.OmitSidecarInjectorConfigMap
		*out = new(bool)
		**out = **in
	}
	if in.OperatorManageWebhooks != nil {
		in, out := &in.OperatorManageWebhooks, &out.OperatorManageWebhooks
		*out = new(bool)
		**out = **in
	}
	if in.PriorityClassName != nil {
		in, out := &in.PriorityClassName, &out.PriorityClassName
		*out = new(string)
		**out = **in
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(ProxyConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ProxyInit != nil {
		in, out := &in.ProxyInit, &out.ProxyInit
		*out = new(ProxyInitConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Sds != nil {
		in, out := &in.Sds, &out.Sds
		*out = new(SDSConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Variant != nil {
		in, out := &in.Variant, &out.Variant
		*out = new(string)
		**out = **in
	}
	if in.Tracer != nil {
		in, out := &in.Tracer, &out.Tracer
		*out = new(TracerConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RemotePilotAddress != nil {
		in, out := &in.RemotePilotAddress, &out.RemotePilotAddress
		*out = new(string)
		**out = **in
	}
	if in.Istiod != nil {
		in, out := &in.Istiod, &out.Istiod
		*out = new(IstiodConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PilotCertProvider != nil {
		in, out := &in.PilotCertProvider, &out.PilotCertProvider
		*out = new(string)
		**out = **in
	}
	if in.JwtPolicy != nil {
		in, out := &in.JwtPolicy, &out.JwtPolicy
		*out = new(string)
		**out = **in
	}
	if in.Sts != nil {
		in, out := &in.Sts, &out.Sts
		*out = new(STSConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.MountMtlsCerts != nil {
		in, out := &in.MountMtlsCerts, &out.MountMtlsCerts
		*out = new(bool)
		**out = **in
	}
	if in.CaAddress != nil {
		in, out := &in.CaAddress, &out.CaAddress
		*out = new(string)
		**out = **in
	}
	if in.ExternalIstiod != nil {
		in, out := &in.ExternalIstiod, &out.ExternalIstiod
		*out = new(bool)
		**out = **in
	}
	if in.ConfigCluster != nil {
		in, out := &in.ConfigCluster, &out.ConfigCluster
		*out = new(bool)
		**out = **in
	}
	if in.CaName != nil {
		in, out := &in.CaName, &out.CaName
		*out = new(string)
		**out = **in
	}
	if in.Platform != nil {
		in, out := &in.Platform, &out.Platform
		*out = new(string)
		**out = **in
	}
	if in.IpFamilies != nil {
		in, out := &in.IpFamilies, &out.IpFamilies
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpFamilyPolicy != nil {
		in, out := &in.IpFamilyPolicy, &out.IpFamilyPolicy
		*out = new(string)
		**out = **in
	}
	if in.Waypoint != nil {
		in, out := &in.Waypoint, &out.Waypoint
		*out = new(WaypointConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalConfig.
func (in *GlobalConfig) DeepCopy() *GlobalConfig {
	if in == nil {
		return nil
	}
	out := new(GlobalConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalLoggingConfig) DeepCopyInto(out *GlobalLoggingConfig) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalLoggingConfig.
func (in *GlobalLoggingConfig) DeepCopy() *GlobalLoggingConfig {
	if in == nil {
		return nil
	}
	out := new(GlobalLoggingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRetry) DeepCopyInto(out *HTTPRetry) {
	*out = *in
	if in.Attempts != nil {
		in, out := &in.Attempts, &out.Attempts
		*out = new(int32)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.RetryOn != nil {
		in, out := &in.RetryOn, &out.RetryOn
		*out = new(string)
		**out = **in
	}
	if in.RetryRemoteLocalities != nil {
		in, out := &in.RetryRemoteLocalities, &out.RetryRemoteLocalities
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRetry.
func (in *HTTPRetry) DeepCopy() *HTTPRetry {
	if in == nil {
		return nil
	}
	out := new(HTTPRetry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Istio) DeepCopyInto(out *Istio) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Istio.
func (in *Istio) DeepCopy() *Istio {
	if in == nil {
		return nil
	}
	out := new(Istio)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Istio) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioCNI) DeepCopyInto(out *IstioCNI) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioCNI.
func (in *IstioCNI) DeepCopy() *IstioCNI {
	if in == nil {
		return nil
	}
	out := new(IstioCNI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IstioCNI) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioCNICondition) DeepCopyInto(out *IstioCNICondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioCNICondition.
func (in *IstioCNICondition) DeepCopy() *IstioCNICondition {
	if in == nil {
		return nil
	}
	out := new(IstioCNICondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioCNIList) DeepCopyInto(out *IstioCNIList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IstioCNI, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioCNIList.
func (in *IstioCNIList) DeepCopy() *IstioCNIList {
	if in == nil {
		return nil
	}
	out := new(IstioCNIList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IstioCNIList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioCNISpec) DeepCopyInto(out *IstioCNISpec) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(CNIValues)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioCNISpec.
func (in *IstioCNISpec) DeepCopy() *IstioCNISpec {
	if in == nil {
		return nil
	}
	out := new(IstioCNISpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioCNIStatus) DeepCopyInto(out *IstioCNIStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]IstioCNICondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioCNIStatus.
func (in *IstioCNIStatus) DeepCopy() *IstioCNIStatus {
	if in == nil {
		return nil
	}
	out := new(IstioCNIStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioCondition) DeepCopyInto(out *IstioCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioCondition.
func (in *IstioCondition) DeepCopy() *IstioCondition {
	if in == nil {
		return nil
	}
	out := new(IstioCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioList) DeepCopyInto(out *IstioList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Istio, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioList.
func (in *IstioList) DeepCopy() *IstioList {
	if in == nil {
		return nil
	}
	out := new(IstioList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IstioList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioRevision) DeepCopyInto(out *IstioRevision) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioRevision.
func (in *IstioRevision) DeepCopy() *IstioRevision {
	if in == nil {
		return nil
	}
	out := new(IstioRevision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IstioRevision) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioRevisionCondition) DeepCopyInto(out *IstioRevisionCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioRevisionCondition.
func (in *IstioRevisionCondition) DeepCopy() *IstioRevisionCondition {
	if in == nil {
		return nil
	}
	out := new(IstioRevisionCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioRevisionList) DeepCopyInto(out *IstioRevisionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IstioRevision, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioRevisionList.
func (in *IstioRevisionList) DeepCopy() *IstioRevisionList {
	if in == nil {
		return nil
	}
	out := new(IstioRevisionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IstioRevisionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioRevisionSpec) DeepCopyInto(out *IstioRevisionSpec) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(Values)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioRevisionSpec.
func (in *IstioRevisionSpec) DeepCopy() *IstioRevisionSpec {
	if in == nil {
		return nil
	}
	out := new(IstioRevisionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioRevisionStatus) DeepCopyInto(out *IstioRevisionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]IstioRevisionCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioRevisionStatus.
func (in *IstioRevisionStatus) DeepCopy() *IstioRevisionStatus {
	if in == nil {
		return nil
	}
	out := new(IstioRevisionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioSpec) DeepCopyInto(out *IstioSpec) {
	*out = *in
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(IstioUpdateStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(Values)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioSpec.
func (in *IstioSpec) DeepCopy() *IstioSpec {
	if in == nil {
		return nil
	}
	out := new(IstioSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioStatus) DeepCopyInto(out *IstioStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]IstioCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.Revisions = in.Revisions
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioStatus.
func (in *IstioStatus) DeepCopy() *IstioStatus {
	if in == nil {
		return nil
	}
	out := new(IstioStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioUpdateStrategy) DeepCopyInto(out *IstioUpdateStrategy) {
	*out = *in
	if in.InactiveRevisionDeletionGracePeriodSeconds != nil {
		in, out := &in.InactiveRevisionDeletionGracePeriodSeconds, &out.InactiveRevisionDeletionGracePeriodSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioUpdateStrategy.
func (in *IstioUpdateStrategy) DeepCopy() *IstioUpdateStrategy {
	if in == nil {
		return nil
	}
	out := new(IstioUpdateStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstiodConfig) DeepCopyInto(out *IstiodConfig) {
	*out = *in
	if in.EnableAnalysis != nil {
		in, out := &in.EnableAnalysis, &out.EnableAnalysis
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstiodConfig.
func (in *IstiodConfig) DeepCopy() *IstiodConfig {
	if in == nil {
		return nil
	}
	out := new(IstiodConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstiodRemoteConfig) DeepCopyInto(out *IstiodRemoteConfig) {
	*out = *in
	if in.InjectionURL != nil {
		in, out := &in.InjectionURL, &out.InjectionURL
		*out = new(string)
		**out = **in
	}
	if in.InjectionPath != nil {
		in, out := &in.InjectionPath, &out.InjectionPath
		*out = new(string)
		**out = **in
	}
	if in.InjectionCABundle != nil {
		in, out := &in.InjectionCABundle, &out.InjectionCABundle
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstiodRemoteConfig.
func (in *IstiodRemoteConfig) DeepCopy() *IstiodRemoteConfig {
	if in == nil {
		return nil
	}
	out := new(IstiodRemoteConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalityLoadBalancerSetting) DeepCopyInto(out *LocalityLoadBalancerSetting) {
	*out = *in
	if in.Distribute != nil {
		in, out := &in.Distribute, &out.Distribute
		*out = make([]*LocalityLoadBalancerSettingDistribute, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(LocalityLoadBalancerSettingDistribute)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = make([]*LocalityLoadBalancerSettingFailover, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(LocalityLoadBalancerSettingFailover)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.FailoverPriority != nil {
		in, out := &in.FailoverPriority, &out.FailoverPriority
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalityLoadBalancerSetting.
func (in *LocalityLoadBalancerSetting) DeepCopy() *LocalityLoadBalancerSetting {
	if in == nil {
		return nil
	}
	out := new(LocalityLoadBalancerSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalityLoadBalancerSettingDistribute) DeepCopyInto(out *LocalityLoadBalancerSettingDistribute) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(string)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = make(map[string]uint32, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalityLoadBalancerSettingDistribute.
func (in *LocalityLoadBalancerSettingDistribute) DeepCopy() *LocalityLoadBalancerSettingDistribute {
	if in == nil {
		return nil
	}
	out := new(LocalityLoadBalancerSettingDistribute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalityLoadBalancerSettingFailover) DeepCopyInto(out *LocalityLoadBalancerSettingFailover) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(string)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalityLoadBalancerSettingFailover.
func (in *LocalityLoadBalancerSettingFailover) DeepCopy() *LocalityLoadBalancerSettingFailover {
	if in == nil {
		return nil
	}
	out := new(LocalityLoadBalancerSettingFailover)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfig) DeepCopyInto(out *MeshConfig) {
	*out = *in
	if in.ProxyListenPort != nil {
		in, out := &in.ProxyListenPort, &out.ProxyListenPort
		*out = new(int32)
		**out = **in
	}
	if in.ProxyInboundListenPort != nil {
		in, out := &in.ProxyInboundListenPort, &out.ProxyInboundListenPort
		*out = new(int32)
		**out = **in
	}
	if in.ProxyHttpPort != nil {
		in, out := &in.ProxyHttpPort, &out.ProxyHttpPort
		*out = new(int32)
		**out = **in
	}
	if in.ConnectTimeout != nil {
		in, out := &in.ConnectTimeout, &out.ConnectTimeout
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.ProtocolDetectionTimeout != nil {
		in, out := &in.ProtocolDetectionTimeout, &out.ProtocolDetectionTimeout
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.TcpKeepalive != nil {
		in, out := &in.TcpKeepalive, &out.TcpKeepalive
		*out = new(ConnectionPoolSettingsTCPSettingsTcpKeepalive)
		(*in).DeepCopyInto(*out)
	}
	if in.IngressClass != nil {
		in, out := &in.IngressClass, &out.IngressClass
		*out = new(string)
		**out = **in
	}
	if in.IngressService != nil {
		in, out := &in.IngressService, &out.IngressService
		*out = new(string)
		**out = **in
	}
	if in.IngressSelector != nil {
		in, out := &in.IngressSelector, &out.IngressSelector
		*out = new(string)
		**out = **in
	}
	if in.EnableTracing != nil {
		in, out := &in.EnableTracing, &out.EnableTracing
		*out = new(bool)
		**out = **in
	}
	if in.AccessLogFile != nil {
		in, out := &in.AccessLogFile, &out.AccessLogFile
		*out = new(string)
		**out = **in
	}
	if in.AccessLogFormat != nil {
		in, out := &in.AccessLogFormat, &out.AccessLogFormat
		*out = new(string)
		**out = **in
	}
	if in.EnableEnvoyAccessLogService != nil {
		in, out := &in.EnableEnvoyAccessLogService, &out.EnableEnvoyAccessLogService
		*out = new(bool)
		**out = **in
	}
	if in.DisableEnvoyListenerLog != nil {
		in, out := &in.DisableEnvoyListenerLog, &out.DisableEnvoyListenerLog
		*out = new(bool)
		**out = **in
	}
	if in.DefaultConfig != nil {
		in, out := &in.DefaultConfig, &out.DefaultConfig
		*out = new(MeshConfigProxyConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.OutboundTrafficPolicy != nil {
		in, out := &in.OutboundTrafficPolicy, &out.OutboundTrafficPolicy
		*out = new(MeshConfigOutboundTrafficPolicy)
		**out = **in
	}
	if in.InboundTrafficPolicy != nil {
		in, out := &in.InboundTrafficPolicy, &out.InboundTrafficPolicy
		*out = new(MeshConfigInboundTrafficPolicy)
		**out = **in
	}
	if in.ConfigSources != nil {
		in, out := &in.ConfigSources, &out.ConfigSources
		*out = make([]*ConfigSource, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ConfigSource)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EnableAutoMtls != nil {
		in, out := &in.EnableAutoMtls, &out.EnableAutoMtls
		*out = new(bool)
		**out = **in
	}
	if in.TrustDomain != nil {
		in, out := &in.TrustDomain, &out.TrustDomain
		*out = new(string)
		**out = **in
	}
	if in.TrustDomainAliases != nil {
		in, out := &in.TrustDomainAliases, &out.TrustDomainAliases
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CaCertificates != nil {
		in, out := &in.CaCertificates, &out.CaCertificates
		*out = make([]*MeshConfigCertificateData, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MeshConfigCertificateData)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DefaultServiceExportTo != nil {
		in, out := &in.DefaultServiceExportTo, &out.DefaultServiceExportTo
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultVirtualServiceExportTo != nil {
		in, out := &in.DefaultVirtualServiceExportTo, &out.DefaultVirtualServiceExportTo
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultDestinationRuleExportTo != nil {
		in, out := &in.DefaultDestinationRuleExportTo, &out.DefaultDestinationRuleExportTo
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RootNamespace != nil {
		in, out := &in.RootNamespace, &out.RootNamespace
		*out = new(string)
		**out = **in
	}
	if in.LocalityLbSetting != nil {
		in, out := &in.LocalityLbSetting, &out.LocalityLbSetting
		*out = new(LocalityLoadBalancerSetting)
		(*in).DeepCopyInto(*out)
	}
	if in.DnsRefreshRate != nil {
		in, out := &in.DnsRefreshRate, &out.DnsRefreshRate
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.InboundClusterStatName != nil {
		in, out := &in.InboundClusterStatName, &out.InboundClusterStatName
		*out = new(string)
		**out = **in
	}
	if in.OutboundClusterStatName != nil {
		in, out := &in.OutboundClusterStatName, &out.OutboundClusterStatName
		*out = new(string)
		**out = **in
	}
	if in.Certificates != nil {
		in, out := &in.Certificates, &out.Certificates
		*out = make([]*Certificate, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Certificate)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ServiceSettings != nil {
		in, out := &in.ServiceSettings, &out.ServiceSettings
		*out = make([]*MeshConfigServiceSettings, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MeshConfigServiceSettings)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EnablePrometheusMerge != nil {
		in, out := &in.EnablePrometheusMerge, &out.EnablePrometheusMerge
		*out = new(bool)
		**out = **in
	}
	if in.VerifyCertificateAtClient != nil {
		in, out := &in.VerifyCertificateAtClient, &out.VerifyCertificateAtClient
		*out = new(bool)
		**out = **in
	}
	if in.Ca != nil {
		in, out := &in.Ca, &out.Ca
		*out = new(MeshConfigCA)
		(*in).DeepCopyInto(*out)
	}
	if in.ExtensionProviders != nil {
		in, out := &in.ExtensionProviders, &out.ExtensionProviders
		*out = make([]*MeshConfigExtensionProvider, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MeshConfigExtensionProvider)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DefaultProviders != nil {
		in, out := &in.DefaultProviders, &out.DefaultProviders
		*out = new(MeshConfigDefaultProviders)
		(*in).DeepCopyInto(*out)
	}
	if in.DiscoverySelectors != nil {
		in, out := &in.DiscoverySelectors, &out.DiscoverySelectors
		*out = make([]*metav1.LabelSelector, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(metav1.LabelSelector)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PathNormalization != nil {
		in, out := &in.PathNormalization, &out.PathNormalization
		*out = new(MeshConfigProxyPathNormalization)
		**out = **in
	}
	if in.DefaultHttpRetryPolicy != nil {
		in, out := &in.DefaultHttpRetryPolicy, &out.DefaultHttpRetryPolicy
		*out = new(HTTPRetry)
		(*in).DeepCopyInto(*out)
	}
	if in.MeshMTLS != nil {
		in, out := &in.MeshMTLS, &out.MeshMTLS
		*out = new(MeshConfigTLSConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.TlsDefaults != nil {
		in, out := &in.TlsDefaults, &out.TlsDefaults
		*out = new(MeshConfigTLSConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfig.
func (in *MeshConfig) DeepCopy() *MeshConfig {
	if in == nil {
		return nil
	}
	out := new(MeshConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigCA) DeepCopyInto(out *MeshConfigCA) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.TlsSettings != nil {
		in, out := &in.TlsSettings, &out.TlsSettings
		*out = new(ClientTLSSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.RequestTimeout != nil {
		in, out := &in.RequestTimeout, &out.RequestTimeout
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.IstiodSide != nil {
		in, out := &in.IstiodSide, &out.IstiodSide
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigCA.
func (in *MeshConfigCA) DeepCopy() *MeshConfigCA {
	if in == nil {
		return nil
	}
	out := new(MeshConfigCA)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigCertificateData) DeepCopyInto(out *MeshConfigCertificateData) {
	*out = *in
	if in.Pem != nil {
		in, out := &in.Pem, &out.Pem
		*out = new(string)
		**out = **in
	}
	if in.SpiffeBundleUrl != nil {
		in, out := &in.SpiffeBundleUrl, &out.SpiffeBundleUrl
		*out = new(string)
		**out = **in
	}
	if in.CertSigners != nil {
		in, out := &in.CertSigners, &out.CertSigners
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TrustDomains != nil {
		in, out := &in.TrustDomains, &out.TrustDomains
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigCertificateData.
func (in *MeshConfigCertificateData) DeepCopy() *MeshConfigCertificateData {
	if in == nil {
		return nil
	}
	out := new(MeshConfigCertificateData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigDefaultProviders) DeepCopyInto(out *MeshConfigDefaultProviders) {
	*out = *in
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AccessLogging != nil {
		in, out := &in.AccessLogging, &out.AccessLogging
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigDefaultProviders.
func (in *MeshConfigDefaultProviders) DeepCopy() *MeshConfigDefaultProviders {
	if in == nil {
		return nil
	}
	out := new(MeshConfigDefaultProviders)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProvider) DeepCopyInto(out *MeshConfigExtensionProvider) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.EnvoyExtAuthzHttp != nil {
		in, out := &in.EnvoyExtAuthzHttp, &out.EnvoyExtAuthzHttp
		*out = new(MeshConfigExtensionProviderEnvoyExternalAuthorizationHttpProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvoyExtAuthzGrpc != nil {
		in, out := &in.EnvoyExtAuthzGrpc, &out.EnvoyExtAuthzGrpc
		*out = new(MeshConfigExtensionProviderEnvoyExternalAuthorizationGrpcProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.Zipkin != nil {
		in, out := &in.Zipkin, &out.Zipkin
		*out = new(MeshConfigExtensionProviderZipkinTracingProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.Lightstep != nil {
		in, out := &in.Lightstep, &out.Lightstep
		*out = new(MeshConfigExtensionProviderLightstepTracingProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.Datadog != nil {
		in, out := &in.Datadog, &out.Datadog
		*out = new(MeshConfigExtensionProviderDatadogTracingProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.Stackdriver != nil {
		in, out := &in.Stackdriver, &out.Stackdriver
		*out = new(MeshConfigExtensionProviderStackdriverProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.Opencensus != nil {
		in, out := &in.Opencensus, &out.Opencensus
		*out = new(MeshConfigExtensionProviderOpenCensusAgentTracingProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.Skywalking != nil {
		in, out := &in.Skywalking, &out.Skywalking
		*out = new(MeshConfigExtensionProviderSkyWalkingTracingProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.Opentelemetry != nil {
		in, out := &in.Opentelemetry, &out.Opentelemetry
		*out = new(MeshConfigExtensionProviderOpenTelemetryTracingProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.Prometheus != nil {
		in, out := &in.Prometheus, &out.Prometheus
		*out = new(MeshConfigExtensionProviderPrometheusMetricsProvider)
		**out = **in
	}
	if in.EnvoyFileAccessLog != nil {
		in, out := &in.EnvoyFileAccessLog, &out.EnvoyFileAccessLog
		*out = new(MeshConfigExtensionProviderEnvoyFileAccessLogProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvoyHttpAls != nil {
		in, out := &in.EnvoyHttpAls, &out.EnvoyHttpAls
		*out = new(MeshConfigExtensionProviderEnvoyHttpGrpcV3LogProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvoyTcpAls != nil {
		in, out := &in.EnvoyTcpAls, &out.EnvoyTcpAls
		*out = new(MeshConfigExtensionProviderEnvoyTcpGrpcV3LogProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvoyOtelAls != nil {
		in, out := &in.EnvoyOtelAls, &out.EnvoyOtelAls
		*out = new(MeshConfigExtensionProviderEnvoyOpenTelemetryLogProvider)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProvider.
func (in *MeshConfigExtensionProvider) DeepCopy() *MeshConfigExtensionProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderDatadogTracingProvider) DeepCopyInto(out *MeshConfigExtensionProviderDatadogTracingProvider) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.MaxTagLength != nil {
		in, out := &in.MaxTagLength, &out.MaxTagLength
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderDatadogTracingProvider.
func (in *MeshConfigExtensionProviderDatadogTracingProvider) DeepCopy() *MeshConfigExtensionProviderDatadogTracingProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderDatadogTracingProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderEnvoyExternalAuthorizationGrpcProvider) DeepCopyInto(out *MeshConfigExtensionProviderEnvoyExternalAuthorizationGrpcProvider) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.FailOpen != nil {
		in, out := &in.FailOpen, &out.FailOpen
		*out = new(bool)
		**out = **in
	}
	if in.StatusOnError != nil {
		in, out := &in.StatusOnError, &out.StatusOnError
		*out = new(string)
		**out = **in
	}
	if in.IncludeRequestBodyInCheck != nil {
		in, out := &in.IncludeRequestBodyInCheck, &out.IncludeRequestBodyInCheck
		*out = new(MeshConfigExtensionProviderEnvoyExternalAuthorizationRequestBody)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderEnvoyExternalAuthorizationGrpcProvider.
func (in *MeshConfigExtensionProviderEnvoyExternalAuthorizationGrpcProvider) DeepCopy() *MeshConfigExtensionProviderEnvoyExternalAuthorizationGrpcProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderEnvoyExternalAuthorizationGrpcProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderEnvoyExternalAuthorizationHttpProvider) DeepCopyInto(out *MeshConfigExtensionProviderEnvoyExternalAuthorizationHttpProvider) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.PathPrefix != nil {
		in, out := &in.PathPrefix, &out.PathPrefix
		*out = new(string)
		**out = **in
	}
	if in.FailOpen != nil {
		in, out := &in.FailOpen, &out.FailOpen
		*out = new(bool)
		**out = **in
	}
	if in.StatusOnError != nil {
		in, out := &in.StatusOnError, &out.StatusOnError
		*out = new(string)
		**out = **in
	}
	if in.IncludeHeadersInCheck != nil {
		in, out := &in.IncludeHeadersInCheck, &out.IncludeHeadersInCheck
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IncludeRequestHeadersInCheck != nil {
		in, out := &in.IncludeRequestHeadersInCheck, &out.IncludeRequestHeadersInCheck
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IncludeAdditionalHeadersInCheck != nil {
		in, out := &in.IncludeAdditionalHeadersInCheck, &out.IncludeAdditionalHeadersInCheck
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IncludeRequestBodyInCheck != nil {
		in, out := &in.IncludeRequestBodyInCheck, &out.IncludeRequestBodyInCheck
		*out = new(MeshConfigExtensionProviderEnvoyExternalAuthorizationRequestBody)
		(*in).DeepCopyInto(*out)
	}
	if in.HeadersToUpstreamOnAllow != nil {
		in, out := &in.HeadersToUpstreamOnAllow, &out.HeadersToUpstreamOnAllow
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.HeadersToDownstreamOnDeny != nil {
		in, out := &in.HeadersToDownstreamOnDeny, &out.HeadersToDownstreamOnDeny
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.HeadersToDownstreamOnAllow != nil {
		in, out := &in.HeadersToDownstreamOnAllow, &out.HeadersToDownstreamOnAllow
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderEnvoyExternalAuthorizationHttpProvider.
func (in *MeshConfigExtensionProviderEnvoyExternalAuthorizationHttpProvider) DeepCopy() *MeshConfigExtensionProviderEnvoyExternalAuthorizationHttpProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderEnvoyExternalAuthorizationHttpProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderEnvoyExternalAuthorizationRequestBody) DeepCopyInto(out *MeshConfigExtensionProviderEnvoyExternalAuthorizationRequestBody) {
	*out = *in
	if in.MaxRequestBytes != nil {
		in, out := &in.MaxRequestBytes, &out.MaxRequestBytes
		*out = new(uint32)
		**out = **in
	}
	if in.AllowPartialMessage != nil {
		in, out := &in.AllowPartialMessage, &out.AllowPartialMessage
		*out = new(bool)
		**out = **in
	}
	if in.PackAsBytes != nil {
		in, out := &in.PackAsBytes, &out.PackAsBytes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderEnvoyExternalAuthorizationRequestBody.
func (in *MeshConfigExtensionProviderEnvoyExternalAuthorizationRequestBody) DeepCopy() *MeshConfigExtensionProviderEnvoyExternalAuthorizationRequestBody {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderEnvoyExternalAuthorizationRequestBody)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderEnvoyFileAccessLogProvider) DeepCopyInto(out *MeshConfigExtensionProviderEnvoyFileAccessLogProvider) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(MeshConfigExtensionProviderEnvoyFileAccessLogProviderLogFormat)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderEnvoyFileAccessLogProvider.
func (in *MeshConfigExtensionProviderEnvoyFileAccessLogProvider) DeepCopy() *MeshConfigExtensionProviderEnvoyFileAccessLogProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderEnvoyFileAccessLogProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderEnvoyFileAccessLogProviderLogFormat) DeepCopyInto(out *MeshConfigExtensionProviderEnvoyFileAccessLogProviderLogFormat) {
	*out = *in
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderEnvoyFileAccessLogProviderLogFormat.
func (in *MeshConfigExtensionProviderEnvoyFileAccessLogProviderLogFormat) DeepCopy() *MeshConfigExtensionProviderEnvoyFileAccessLogProviderLogFormat {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderEnvoyFileAccessLogProviderLogFormat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderEnvoyHttpGrpcV3LogProvider) DeepCopyInto(out *MeshConfigExtensionProviderEnvoyHttpGrpcV3LogProvider) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.LogName != nil {
		in, out := &in.LogName, &out.LogName
		*out = new(string)
		**out = **in
	}
	if in.FilterStateObjectsToLog != nil {
		in, out := &in.FilterStateObjectsToLog, &out.FilterStateObjectsToLog
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AdditionalRequestHeadersToLog != nil {
		in, out := &in.AdditionalRequestHeadersToLog, &out.AdditionalRequestHeadersToLog
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AdditionalResponseHeadersToLog != nil {
		in, out := &in.AdditionalResponseHeadersToLog, &out.AdditionalResponseHeadersToLog
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AdditionalResponseTrailersToLog != nil {
		in, out := &in.AdditionalResponseTrailersToLog, &out.AdditionalResponseTrailersToLog
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderEnvoyHttpGrpcV3LogProvider.
func (in *MeshConfigExtensionProviderEnvoyHttpGrpcV3LogProvider) DeepCopy() *MeshConfigExtensionProviderEnvoyHttpGrpcV3LogProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderEnvoyHttpGrpcV3LogProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderEnvoyOpenTelemetryLogProvider) DeepCopyInto(out *MeshConfigExtensionProviderEnvoyOpenTelemetryLogProvider) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.LogName != nil {
		in, out := &in.LogName, &out.LogName
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(MeshConfigExtensionProviderEnvoyOpenTelemetryLogProviderLogFormat)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderEnvoyOpenTelemetryLogProvider.
func (in *MeshConfigExtensionProviderEnvoyOpenTelemetryLogProvider) DeepCopy() *MeshConfigExtensionProviderEnvoyOpenTelemetryLogProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderEnvoyOpenTelemetryLogProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderEnvoyOpenTelemetryLogProviderLogFormat) DeepCopyInto(out *MeshConfigExtensionProviderEnvoyOpenTelemetryLogProviderLogFormat) {
	*out = *in
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderEnvoyOpenTelemetryLogProviderLogFormat.
func (in *MeshConfigExtensionProviderEnvoyOpenTelemetryLogProviderLogFormat) DeepCopy() *MeshConfigExtensionProviderEnvoyOpenTelemetryLogProviderLogFormat {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderEnvoyOpenTelemetryLogProviderLogFormat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderEnvoyTcpGrpcV3LogProvider) DeepCopyInto(out *MeshConfigExtensionProviderEnvoyTcpGrpcV3LogProvider) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.LogName != nil {
		in, out := &in.LogName, &out.LogName
		*out = new(string)
		**out = **in
	}
	if in.FilterStateObjectsToLog != nil {
		in, out := &in.FilterStateObjectsToLog, &out.FilterStateObjectsToLog
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderEnvoyTcpGrpcV3LogProvider.
func (in *MeshConfigExtensionProviderEnvoyTcpGrpcV3LogProvider) DeepCopy() *MeshConfigExtensionProviderEnvoyTcpGrpcV3LogProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderEnvoyTcpGrpcV3LogProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderGrpcService) DeepCopyInto(out *MeshConfigExtensionProviderGrpcService) {
	*out = *in
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.InitialMetadata != nil {
		in, out := &in.InitialMetadata, &out.InitialMetadata
		*out = make([]*MeshConfigExtensionProviderHttpHeader, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MeshConfigExtensionProviderHttpHeader)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderGrpcService.
func (in *MeshConfigExtensionProviderGrpcService) DeepCopy() *MeshConfigExtensionProviderGrpcService {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderGrpcService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderHttpHeader) DeepCopyInto(out *MeshConfigExtensionProviderHttpHeader) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderHttpHeader.
func (in *MeshConfigExtensionProviderHttpHeader) DeepCopy() *MeshConfigExtensionProviderHttpHeader {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderHttpHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderHttpService) DeepCopyInto(out *MeshConfigExtensionProviderHttpService) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]*MeshConfigExtensionProviderHttpHeader, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MeshConfigExtensionProviderHttpHeader)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderHttpService.
func (in *MeshConfigExtensionProviderHttpService) DeepCopy() *MeshConfigExtensionProviderHttpService {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderHttpService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderLightstepTracingProvider) DeepCopyInto(out *MeshConfigExtensionProviderLightstepTracingProvider) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = new(string)
		**out = **in
	}
	if in.MaxTagLength != nil {
		in, out := &in.MaxTagLength, &out.MaxTagLength
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderLightstepTracingProvider.
func (in *MeshConfigExtensionProviderLightstepTracingProvider) DeepCopy() *MeshConfigExtensionProviderLightstepTracingProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderLightstepTracingProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderOpenCensusAgentTracingProvider) DeepCopyInto(out *MeshConfigExtensionProviderOpenCensusAgentTracingProvider) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = make([]MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContext, len(*in))
		copy(*out, *in)
	}
	if in.MaxTagLength != nil {
		in, out := &in.MaxTagLength, &out.MaxTagLength
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderOpenCensusAgentTracingProvider.
func (in *MeshConfigExtensionProviderOpenCensusAgentTracingProvider) DeepCopy() *MeshConfigExtensionProviderOpenCensusAgentTracingProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderOpenCensusAgentTracingProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderOpenTelemetryTracingProvider) DeepCopyInto(out *MeshConfigExtensionProviderOpenTelemetryTracingProvider) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.MaxTagLength != nil {
		in, out := &in.MaxTagLength, &out.MaxTagLength
		*out = new(uint32)
		**out = **in
	}
	if in.Http != nil {
		in, out := &in.Http, &out.Http
		*out = new(MeshConfigExtensionProviderHttpService)
		(*in).DeepCopyInto(*out)
	}
	if in.Grpc != nil {
		in, out := &in.Grpc, &out.Grpc
		*out = new(MeshConfigExtensionProviderGrpcService)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceDetectors != nil {
		in, out := &in.ResourceDetectors, &out.ResourceDetectors
		*out = new(MeshConfigExtensionProviderResourceDetectors)
		(*in).DeepCopyInto(*out)
	}
	if in.DynatraceSampler != nil {
		in, out := &in.DynatraceSampler, &out.DynatraceSampler
		*out = new(MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSampler)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderOpenTelemetryTracingProvider.
func (in *MeshConfigExtensionProviderOpenTelemetryTracingProvider) DeepCopy() *MeshConfigExtensionProviderOpenTelemetryTracingProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderOpenTelemetryTracingProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSampler) DeepCopyInto(out *MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSampler) {
	*out = *in
	if in.Tenant != nil {
		in, out := &in.Tenant, &out.Tenant
		*out = new(string)
		**out = **in
	}
	if in.ClusterId != nil {
		in, out := &in.ClusterId, &out.ClusterId
		*out = new(int32)
		**out = **in
	}
	if in.RootSpansPerMinute != nil {
		in, out := &in.RootSpansPerMinute, &out.RootSpansPerMinute
		*out = new(uint32)
		**out = **in
	}
	if in.HttpService != nil {
		in, out := &in.HttpService, &out.HttpService
		*out = new(MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSamplerDynatraceApi)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSampler.
func (in *MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSampler) DeepCopy() *MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSampler {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSampler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSamplerDynatraceApi) DeepCopyInto(out *MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSamplerDynatraceApi) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.Http != nil {
		in, out := &in.Http, &out.Http
		*out = new(MeshConfigExtensionProviderHttpService)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSamplerDynatraceApi.
func (in *MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSamplerDynatraceApi) DeepCopy() *MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSamplerDynatraceApi {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSamplerDynatraceApi)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderPrometheusMetricsProvider) DeepCopyInto(out *MeshConfigExtensionProviderPrometheusMetricsProvider) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderPrometheusMetricsProvider.
func (in *MeshConfigExtensionProviderPrometheusMetricsProvider) DeepCopy() *MeshConfigExtensionProviderPrometheusMetricsProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderPrometheusMetricsProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderResourceDetectors) DeepCopyInto(out *MeshConfigExtensionProviderResourceDetectors) {
	*out = *in
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(MeshConfigExtensionProviderResourceDetectorsEnvironmentResourceDetector)
		**out = **in
	}
	if in.Dynatrace != nil {
		in, out := &in.Dynatrace, &out.Dynatrace
		*out = new(MeshConfigExtensionProviderResourceDetectorsDynatraceResourceDetector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderResourceDetectors.
func (in *MeshConfigExtensionProviderResourceDetectors) DeepCopy() *MeshConfigExtensionProviderResourceDetectors {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderResourceDetectors)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderResourceDetectorsDynatraceResourceDetector) DeepCopyInto(out *MeshConfigExtensionProviderResourceDetectorsDynatraceResourceDetector) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderResourceDetectorsDynatraceResourceDetector.
func (in *MeshConfigExtensionProviderResourceDetectorsDynatraceResourceDetector) DeepCopy() *MeshConfigExtensionProviderResourceDetectorsDynatraceResourceDetector {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderResourceDetectorsDynatraceResourceDetector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderResourceDetectorsEnvironmentResourceDetector) DeepCopyInto(out *MeshConfigExtensionProviderResourceDetectorsEnvironmentResourceDetector) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderResourceDetectorsEnvironmentResourceDetector.
func (in *MeshConfigExtensionProviderResourceDetectorsEnvironmentResourceDetector) DeepCopy() *MeshConfigExtensionProviderResourceDetectorsEnvironmentResourceDetector {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderResourceDetectorsEnvironmentResourceDetector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderSkyWalkingTracingProvider) DeepCopyInto(out *MeshConfigExtensionProviderSkyWalkingTracingProvider) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderSkyWalkingTracingProvider.
func (in *MeshConfigExtensionProviderSkyWalkingTracingProvider) DeepCopy() *MeshConfigExtensionProviderSkyWalkingTracingProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderSkyWalkingTracingProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderStackdriverProvider) DeepCopyInto(out *MeshConfigExtensionProviderStackdriverProvider) {
	*out = *in
	if in.Debug != nil {
		in, out := &in.Debug, &out.Debug
		*out = new(bool)
		**out = **in
	}
	if in.MaxNumberOfAttributes != nil {
		in, out := &in.MaxNumberOfAttributes, &out.MaxNumberOfAttributes
		*out = new(int64)
		**out = **in
	}
	if in.MaxNumberOfAnnotations != nil {
		in, out := &in.MaxNumberOfAnnotations, &out.MaxNumberOfAnnotations
		*out = new(int64)
		**out = **in
	}
	if in.MaxNumberOfMessageEvents != nil {
		in, out := &in.MaxNumberOfMessageEvents, &out.MaxNumberOfMessageEvents
		*out = new(int64)
		**out = **in
	}
	if in.MaxTagLength != nil {
		in, out := &in.MaxTagLength, &out.MaxTagLength
		*out = new(uint32)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(MeshConfigExtensionProviderStackdriverProviderLogging)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderStackdriverProvider.
func (in *MeshConfigExtensionProviderStackdriverProvider) DeepCopy() *MeshConfigExtensionProviderStackdriverProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderStackdriverProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderStackdriverProviderLogging) DeepCopyInto(out *MeshConfigExtensionProviderStackdriverProviderLogging) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderStackdriverProviderLogging.
func (in *MeshConfigExtensionProviderStackdriverProviderLogging) DeepCopy() *MeshConfigExtensionProviderStackdriverProviderLogging {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderStackdriverProviderLogging)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigExtensionProviderZipkinTracingProvider) DeepCopyInto(out *MeshConfigExtensionProviderZipkinTracingProvider) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.MaxTagLength != nil {
		in, out := &in.MaxTagLength, &out.MaxTagLength
		*out = new(uint32)
		**out = **in
	}
	if in.Enable64BitTraceId != nil {
		in, out := &in.Enable64BitTraceId, &out.Enable64BitTraceId
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigExtensionProviderZipkinTracingProvider.
func (in *MeshConfigExtensionProviderZipkinTracingProvider) DeepCopy() *MeshConfigExtensionProviderZipkinTracingProvider {
	if in == nil {
		return nil
	}
	out := new(MeshConfigExtensionProviderZipkinTracingProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigInboundTrafficPolicy) DeepCopyInto(out *MeshConfigInboundTrafficPolicy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigInboundTrafficPolicy.
func (in *MeshConfigInboundTrafficPolicy) DeepCopy() *MeshConfigInboundTrafficPolicy {
	if in == nil {
		return nil
	}
	out := new(MeshConfigInboundTrafficPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigOutboundTrafficPolicy) DeepCopyInto(out *MeshConfigOutboundTrafficPolicy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigOutboundTrafficPolicy.
func (in *MeshConfigOutboundTrafficPolicy) DeepCopy() *MeshConfigOutboundTrafficPolicy {
	if in == nil {
		return nil
	}
	out := new(MeshConfigOutboundTrafficPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigProxyConfig) DeepCopyInto(out *MeshConfigProxyConfig) {
	*out = *in
	if in.ConfigPath != nil {
		in, out := &in.ConfigPath, &out.ConfigPath
		*out = new(string)
		**out = **in
	}
	if in.BinaryPath != nil {
		in, out := &in.BinaryPath, &out.BinaryPath
		*out = new(string)
		**out = **in
	}
	if in.ServiceCluster != nil {
		in, out := &in.ServiceCluster, &out.ServiceCluster
		*out = new(string)
		**out = **in
	}
	if in.DrainDuration != nil {
		in, out := &in.DrainDuration, &out.DrainDuration
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.DiscoveryAddress != nil {
		in, out := &in.DiscoveryAddress, &out.DiscoveryAddress
		*out = new(string)
		**out = **in
	}
	if in.DiscoveryRefreshDelay != nil {
		in, out := &in.DiscoveryRefreshDelay, &out.DiscoveryRefreshDelay
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.ZipkinAddress != nil {
		in, out := &in.ZipkinAddress, &out.ZipkinAddress
		*out = new(string)
		**out = **in
	}
	if in.StatsdUdpAddress != nil {
		in, out := &in.StatsdUdpAddress, &out.StatsdUdpAddress
		*out = new(string)
		**out = **in
	}
	if in.EnvoyMetricsServiceAddress != nil {
		in, out := &in.EnvoyMetricsServiceAddress, &out.EnvoyMetricsServiceAddress
		*out = new(string)
		**out = **in
	}
	if in.ProxyAdminPort != nil {
		in, out := &in.ProxyAdminPort, &out.ProxyAdminPort
		*out = new(int32)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CustomConfigFile != nil {
		in, out := &in.CustomConfigFile, &out.CustomConfigFile
		*out = new(string)
		**out = **in
	}
	if in.StatNameLength != nil {
		in, out := &in.StatNameLength, &out.StatNameLength
		*out = new(int32)
		**out = **in
	}
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(int32)
		**out = **in
	}
	if in.ProxyBootstrapTemplatePath != nil {
		in, out := &in.ProxyBootstrapTemplatePath, &out.ProxyBootstrapTemplatePath
		*out = new(string)
		**out = **in
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = new(Tracing)
		(*in).DeepCopyInto(*out)
	}
	if in.Sds != nil {
		in, out := &in.Sds, &out.Sds
		*out = new(SDS)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvoyAccessLogService != nil {
		in, out := &in.EnvoyAccessLogService, &out.EnvoyAccessLogService
		*out = new(RemoteService)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvoyMetricsService != nil {
		in, out := &in.EnvoyMetricsService, &out.EnvoyMetricsService
		*out = new(RemoteService)
		(*in).DeepCopyInto(*out)
	}
	if in.ProxyMetadata != nil {
		in, out := &in.ProxyMetadata, &out.ProxyMetadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RuntimeValues != nil {
		in, out := &in.RuntimeValues, &out.RuntimeValues
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.StatusPort != nil {
		in, out := &in.StatusPort, &out.StatusPort
		*out = new(int32)
		**out = **in
	}
	if in.ExtraStatTags != nil {
		in, out := &in.ExtraStatTags, &out.ExtraStatTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.GatewayTopology != nil {
		in, out := &in.GatewayTopology, &out.GatewayTopology
		*out = new(Topology)
		(*in).DeepCopyInto(*out)
	}
	if in.TerminationDrainDuration != nil {
		in, out := &in.TerminationDrainDuration, &out.TerminationDrainDuration
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.MeshId != nil {
		in, out := &in.MeshId, &out.MeshId
		*out = new(string)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(v1.Probe)
		(*in).DeepCopyInto(*out)
	}
	if in.ProxyStatsMatcher != nil {
		in, out := &in.ProxyStatsMatcher, &out.ProxyStatsMatcher
		*out = new(ProxyConfigProxyStatsMatcher)
		(*in).DeepCopyInto(*out)
	}
	if in.HoldApplicationUntilProxyStarts != nil {
		in, out := &in.HoldApplicationUntilProxyStarts, &out.HoldApplicationUntilProxyStarts
		*out = new(bool)
		**out = **in
	}
	if in.CaCertificatesPem != nil {
		in, out := &in.CaCertificatesPem, &out.CaCertificatesPem
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(ProxyImage)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateKeyProvider != nil {
		in, out := &in.PrivateKeyProvider, &out.PrivateKeyProvider
		*out = new(PrivateKeyProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.ProxyHeaders != nil {
		in, out := &in.ProxyHeaders, &out.ProxyHeaders
		*out = new(ProxyConfigProxyHeaders)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigProxyConfig.
func (in *MeshConfigProxyConfig) DeepCopy() *MeshConfigProxyConfig {
	if in == nil {
		return nil
	}
	out := new(MeshConfigProxyConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigProxyPathNormalization) DeepCopyInto(out *MeshConfigProxyPathNormalization) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigProxyPathNormalization.
func (in *MeshConfigProxyPathNormalization) DeepCopy() *MeshConfigProxyPathNormalization {
	if in == nil {
		return nil
	}
	out := new(MeshConfigProxyPathNormalization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigServiceSettings) DeepCopyInto(out *MeshConfigServiceSettings) {
	*out = *in
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(MeshConfigServiceSettingsSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigServiceSettings.
func (in *MeshConfigServiceSettings) DeepCopy() *MeshConfigServiceSettings {
	if in == nil {
		return nil
	}
	out := new(MeshConfigServiceSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigServiceSettingsSettings) DeepCopyInto(out *MeshConfigServiceSettingsSettings) {
	*out = *in
	if in.ClusterLocal != nil {
		in, out := &in.ClusterLocal, &out.ClusterLocal
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigServiceSettingsSettings.
func (in *MeshConfigServiceSettingsSettings) DeepCopy() *MeshConfigServiceSettingsSettings {
	if in == nil {
		return nil
	}
	out := new(MeshConfigServiceSettingsSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigTLSConfig) DeepCopyInto(out *MeshConfigTLSConfig) {
	*out = *in
	if in.EcdhCurves != nil {
		in, out := &in.EcdhCurves, &out.EcdhCurves
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CipherSuites != nil {
		in, out := &in.CipherSuites, &out.CipherSuites
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigTLSConfig.
func (in *MeshConfigTLSConfig) DeepCopy() *MeshConfigTLSConfig {
	if in == nil {
		return nil
	}
	out := new(MeshConfigTLSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshNetworks) DeepCopyInto(out *MeshNetworks) {
	*out = *in
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make(map[string]*Network, len(*in))
		for key, val := range *in {
			var outVal *Network
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(Network)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshNetworks.
func (in *MeshNetworks) DeepCopy() *MeshNetworks {
	if in == nil {
		return nil
	}
	out := new(MeshNetworks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiClusterConfig) DeepCopyInto(out *MultiClusterConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.GlobalDomainSuffix != nil {
		in, out := &in.GlobalDomainSuffix, &out.GlobalDomainSuffix
		*out = new(string)
		**out = **in
	}
	if in.IncludeEnvoyFilter != nil {
		in, out := &in.IncludeEnvoyFilter, &out.IncludeEnvoyFilter
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiClusterConfig.
func (in *MultiClusterConfig) DeepCopy() *MultiClusterConfig {
	if in == nil {
		return nil
	}
	out := new(MultiClusterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network) DeepCopyInto(out *Network) {
	*out = *in
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]*NetworkNetworkEndpoints, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NetworkNetworkEndpoints)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Gateways != nil {
		in, out := &in.Gateways, &out.Gateways
		*out = make([]*NetworkIstioNetworkGateway, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NetworkIstioNetworkGateway)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network.
func (in *Network) DeepCopy() *Network {
	if in == nil {
		return nil
	}
	out := new(Network)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkIstioNetworkGateway) DeepCopyInto(out *NetworkIstioNetworkGateway) {
	*out = *in
	if in.RegistryServiceName != nil {
		in, out := &in.RegistryServiceName, &out.RegistryServiceName
		*out = new(string)
		**out = **in
	}
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.Locality != nil {
		in, out := &in.Locality, &out.Locality
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkIstioNetworkGateway.
func (in *NetworkIstioNetworkGateway) DeepCopy() *NetworkIstioNetworkGateway {
	if in == nil {
		return nil
	}
	out := new(NetworkIstioNetworkGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkNetworkEndpoints) DeepCopyInto(out *NetworkNetworkEndpoints) {
	*out = *in
	if in.FromCidr != nil {
		in, out := &in.FromCidr, &out.FromCidr
		*out = new(string)
		**out = **in
	}
	if in.FromRegistry != nil {
		in, out := &in.FromRegistry, &out.FromRegistry
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkNetworkEndpoints.
func (in *NetworkNetworkEndpoints) DeepCopy() *NetworkNetworkEndpoints {
	if in == nil {
		return nil
	}
	out := new(NetworkNetworkEndpoints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundTrafficPolicyConfig) DeepCopyInto(out *OutboundTrafficPolicyConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundTrafficPolicyConfig.
func (in *OutboundTrafficPolicyConfig) DeepCopy() *OutboundTrafficPolicyConfig {
	if in == nil {
		return nil
	}
	out := new(OutboundTrafficPolicyConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PilotConfig) DeepCopyInto(out *PilotConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoscaleEnabled != nil {
		in, out := &in.AutoscaleEnabled, &out.AutoscaleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoscaleMin != nil {
		in, out := &in.AutoscaleMin, &out.AutoscaleMin
		*out = new(uint32)
		**out = **in
	}
	if in.AutoscaleMax != nil {
		in, out := &in.AutoscaleMax, &out.AutoscaleMax
		*out = new(uint32)
		**out = **in
	}
	if in.AutoscaleBehavior != nil {
		in, out := &in.AutoscaleBehavior, &out.AutoscaleBehavior
		*out = new(v2.HorizontalPodAutoscalerBehavior)
		(*in).DeepCopyInto(*out)
	}
	if in.ReplicaCount != nil {
		in, out := &in.ReplicaCount, &out.ReplicaCount
		*out = new(uint32)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.TraceSampling != nil {
		in, out := &in.TraceSampling, &out.TraceSampling
		*out = new(float64)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.Cpu != nil {
		in, out := &in.Cpu, &out.Cpu
		*out = new(TargetUtilizationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.KeepaliveMaxServerConnectionAge != nil {
		in, out := &in.KeepaliveMaxServerConnectionAge, &out.KeepaliveMaxServerConnectionAge
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.DeploymentLabels != nil {
		in, out := &in.DeploymentLabels, &out.DeploymentLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PodLabels != nil {
		in, out := &in.PodLabels, &out.PodLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(bool)
		**out = **in
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.RollingMaxSurge != nil {
		in, out := &in.RollingMaxSurge, &out.RollingMaxSurge
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.RollingMaxUnavailable != nil {
		in, out := &in.RollingMaxUnavailable, &out.RollingMaxUnavailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodAnnotations != nil {
		in, out := &in.PodAnnotations, &out.PodAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ServiceAnnotations != nil {
		in, out := &in.ServiceAnnotations, &out.ServiceAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ServiceAccountAnnotations != nil {
		in, out := &in.ServiceAccountAnnotations, &out.ServiceAccountAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.JwksResolverExtraRootCA != nil {
		in, out := &in.JwksResolverExtraRootCA, &out.JwksResolverExtraRootCA
		*out = new(string)
		**out = **in
	}
	if in.Hub != nil {
		in, out := &in.Hub, &out.Hub
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Variant != nil {
		in, out := &in.Variant, &out.Variant
		*out = new(string)
		**out = **in
	}
	if in.SeccompProfile != nil {
		in, out := &in.SeccompProfile, &out.SeccompProfile
		*out = new(v1.SeccompProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.TopologySpreadConstraints != nil {
		in, out := &in.TopologySpreadConstraints, &out.TopologySpreadConstraints
		*out = make([]v1.TopologySpreadConstraint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraContainerArgs != nil {
		in, out := &in.ExtraContainerArgs, &out.ExtraContainerArgs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpFamilies != nil {
		in, out := &in.IpFamilies, &out.IpFamilies
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpFamilyPolicy != nil {
		in, out := &in.IpFamilyPolicy, &out.IpFamilyPolicy
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(TargetUtilizationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Cni != nil {
		in, out := &in.Cni, &out.Cni
		*out = new(CNIUsageConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Taint != nil {
		in, out := &in.Taint, &out.Taint
		*out = new(PilotTaintControllerConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.TrustedZtunnelNamespace != nil {
		in, out := &in.TrustedZtunnelNamespace, &out.TrustedZtunnelNamespace
		*out = new(string)
		**out = **in
	}
	if in.IstiodRemote != nil {
		in, out := &in.IstiodRemote, &out.IstiodRemote
		*out = new(IstiodRemoteConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PilotConfig.
func (in *PilotConfig) DeepCopy() *PilotConfig {
	if in == nil {
		return nil
	}
	out := new(PilotConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PilotPolicyConfig) DeepCopyInto(out *PilotPolicyConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PilotPolicyConfig.
func (in *PilotPolicyConfig) DeepCopy() *PilotPolicyConfig {
	if in == nil {
		return nil
	}
	out := new(PilotPolicyConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PilotTaintControllerConfig) DeepCopyInto(out *PilotTaintControllerConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PilotTaintControllerConfig.
func (in *PilotTaintControllerConfig) DeepCopy() *PilotTaintControllerConfig {
	if in == nil {
		return nil
	}
	out := new(PilotTaintControllerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyTargetReference) DeepCopyInto(out *PolicyTargetReference) {
	*out = *in
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyTargetReference.
func (in *PolicyTargetReference) DeepCopy() *PolicyTargetReference {
	if in == nil {
		return nil
	}
	out := new(PolicyTargetReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortSelector) DeepCopyInto(out *PortSelector) {
	*out = *in
	if in.Number != nil {
		in, out := &in.Number, &out.Number
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortSelector.
func (in *PortSelector) DeepCopy() *PortSelector {
	if in == nil {
		return nil
	}
	out := new(PortSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortsConfig) DeepCopyInto(out *PortsConfig) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.NodePort != nil {
		in, out := &in.NodePort, &out.NodePort
		*out = new(int32)
		**out = **in
	}
	if in.TargetPort != nil {
		in, out := &in.TargetPort, &out.TargetPort
		*out = new(int32)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortsConfig.
func (in *PortsConfig) DeepCopy() *PortsConfig {
	if in == nil {
		return nil
	}
	out := new(PortsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateKeyProvider) DeepCopyInto(out *PrivateKeyProvider) {
	*out = *in
	if in.Cryptomb != nil {
		in, out := &in.Cryptomb, &out.Cryptomb
		*out = new(PrivateKeyProviderCryptoMb)
		(*in).DeepCopyInto(*out)
	}
	if in.Qat != nil {
		in, out := &in.Qat, &out.Qat
		*out = new(PrivateKeyProviderQAT)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateKeyProvider.
func (in *PrivateKeyProvider) DeepCopy() *PrivateKeyProvider {
	if in == nil {
		return nil
	}
	out := new(PrivateKeyProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateKeyProviderCryptoMb) DeepCopyInto(out *PrivateKeyProviderCryptoMb) {
	*out = *in
	if in.PollDelay != nil {
		in, out := &in.PollDelay, &out.PollDelay
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.Fallback != nil {
		in, out := &in.Fallback, &out.Fallback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateKeyProviderCryptoMb.
func (in *PrivateKeyProviderCryptoMb) DeepCopy() *PrivateKeyProviderCryptoMb {
	if in == nil {
		return nil
	}
	out := new(PrivateKeyProviderCryptoMb)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateKeyProviderQAT) DeepCopyInto(out *PrivateKeyProviderQAT) {
	*out = *in
	if in.PollDelay != nil {
		in, out := &in.PollDelay, &out.PollDelay
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.Fallback != nil {
		in, out := &in.Fallback, &out.Fallback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateKeyProviderQAT.
func (in *PrivateKeyProviderQAT) DeepCopy() *PrivateKeyProviderQAT {
	if in == nil {
		return nil
	}
	out := new(PrivateKeyProviderQAT)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfig) DeepCopyInto(out *ProxyConfig) {
	*out = *in
	if in.AutoInject != nil {
		in, out := &in.AutoInject, &out.AutoInject
		*out = new(string)
		**out = **in
	}
	if in.ClusterDomain != nil {
		in, out := &in.ClusterDomain, &out.ClusterDomain
		*out = new(string)
		**out = **in
	}
	if in.ComponentLogLevel != nil {
		in, out := &in.ComponentLogLevel, &out.ComponentLogLevel
		*out = new(string)
		**out = **in
	}
	if in.EnableCoreDump != nil {
		in, out := &in.EnableCoreDump, &out.EnableCoreDump
		*out = new(bool)
		**out = **in
	}
	if in.ExcludeInboundPorts != nil {
		in, out := &in.ExcludeInboundPorts, &out.ExcludeInboundPorts
		*out = new(string)
		**out = **in
	}
	if in.ExcludeIPRanges != nil {
		in, out := &in.ExcludeIPRanges, &out.ExcludeIPRanges
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.IncludeIPRanges != nil {
		in, out := &in.IncludeIPRanges, &out.IncludeIPRanges
		*out = new(string)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
	if in.OutlierLogPath != nil {
		in, out := &in.OutlierLogPath, &out.OutlierLogPath
		*out = new(string)
		**out = **in
	}
	if in.Privileged != nil {
		in, out := &in.Privileged, &out.Privileged
		*out = new(bool)
		**out = **in
	}
	if in.ReadinessInitialDelaySeconds != nil {
		in, out := &in.ReadinessInitialDelaySeconds, &out.ReadinessInitialDelaySeconds
		*out = new(uint32)
		**out = **in
	}
	if in.ReadinessPeriodSeconds != nil {
		in, out := &in.ReadinessPeriodSeconds, &out.ReadinessPeriodSeconds
		*out = new(uint32)
		**out = **in
	}
	if in.ReadinessFailureThreshold != nil {
		in, out := &in.ReadinessFailureThreshold, &out.ReadinessFailureThreshold
		*out = new(uint32)
		**out = **in
	}
	if in.StartupProbe != nil {
		in, out := &in.StartupProbe, &out.StartupProbe
		*out = new(StartupProbe)
		(*in).DeepCopyInto(*out)
	}
	if in.StatusPort != nil {
		in, out := &in.StatusPort, &out.StatusPort
		*out = new(uint32)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeOutboundPorts != nil {
		in, out := &in.ExcludeOutboundPorts, &out.ExcludeOutboundPorts
		*out = new(string)
		**out = **in
	}
	if in.Lifecycle != nil {
		in, out := &in.Lifecycle, &out.Lifecycle
		*out = new(v1.Lifecycle)
		(*in).DeepCopyInto(*out)
	}
	if in.HoldApplicationUntilProxyStarts != nil {
		in, out := &in.HoldApplicationUntilProxyStarts, &out.HoldApplicationUntilProxyStarts
		*out = new(bool)
		**out = **in
	}
	if in.IncludeInboundPorts != nil {
		in, out := &in.IncludeInboundPorts, &out.IncludeInboundPorts
		*out = new(string)
		**out = **in
	}
	if in.IncludeOutboundPorts != nil {
		in, out := &in.IncludeOutboundPorts, &out.IncludeOutboundPorts
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfig.
func (in *ProxyConfig) DeepCopy() *ProxyConfig {
	if in == nil {
		return nil
	}
	out := new(ProxyConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfigProxyHeaders) DeepCopyInto(out *ProxyConfigProxyHeaders) {
	*out = *in
	if in.SetCurrentClientCertDetails != nil {
		in, out := &in.SetCurrentClientCertDetails, &out.SetCurrentClientCertDetails
		*out = new(ProxyConfigProxyHeadersSetCurrentClientCertDetails)
		(*in).DeepCopyInto(*out)
	}
	if in.RequestId != nil {
		in, out := &in.RequestId, &out.RequestId
		*out = new(ProxyConfigProxyHeadersRequestId)
		(*in).DeepCopyInto(*out)
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(ProxyConfigProxyHeadersServer)
		(*in).DeepCopyInto(*out)
	}
	if in.AttemptCount != nil {
		in, out := &in.AttemptCount, &out.AttemptCount
		*out = new(ProxyConfigProxyHeadersAttemptCount)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvoyDebugHeaders != nil {
		in, out := &in.EnvoyDebugHeaders, &out.EnvoyDebugHeaders
		*out = new(ProxyConfigProxyHeadersEnvoyDebugHeaders)
		(*in).DeepCopyInto(*out)
	}
	if in.MetadataExchangeHeaders != nil {
		in, out := &in.MetadataExchangeHeaders, &out.MetadataExchangeHeaders
		*out = new(ProxyConfigProxyHeadersMetadataExchangeHeaders)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfigProxyHeaders.
func (in *ProxyConfigProxyHeaders) DeepCopy() *ProxyConfigProxyHeaders {
	if in == nil {
		return nil
	}
	out := new(ProxyConfigProxyHeaders)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfigProxyHeadersAttemptCount) DeepCopyInto(out *ProxyConfigProxyHeadersAttemptCount) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfigProxyHeadersAttemptCount.
func (in *ProxyConfigProxyHeadersAttemptCount) DeepCopy() *ProxyConfigProxyHeadersAttemptCount {
	if in == nil {
		return nil
	}
	out := new(ProxyConfigProxyHeadersAttemptCount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfigProxyHeadersEnvoyDebugHeaders) DeepCopyInto(out *ProxyConfigProxyHeadersEnvoyDebugHeaders) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfigProxyHeadersEnvoyDebugHeaders.
func (in *ProxyConfigProxyHeadersEnvoyDebugHeaders) DeepCopy() *ProxyConfigProxyHeadersEnvoyDebugHeaders {
	if in == nil {
		return nil
	}
	out := new(ProxyConfigProxyHeadersEnvoyDebugHeaders)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfigProxyHeadersMetadataExchangeHeaders) DeepCopyInto(out *ProxyConfigProxyHeadersMetadataExchangeHeaders) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfigProxyHeadersMetadataExchangeHeaders.
func (in *ProxyConfigProxyHeadersMetadataExchangeHeaders) DeepCopy() *ProxyConfigProxyHeadersMetadataExchangeHeaders {
	if in == nil {
		return nil
	}
	out := new(ProxyConfigProxyHeadersMetadataExchangeHeaders)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfigProxyHeadersRequestId) DeepCopyInto(out *ProxyConfigProxyHeadersRequestId) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfigProxyHeadersRequestId.
func (in *ProxyConfigProxyHeadersRequestId) DeepCopy() *ProxyConfigProxyHeadersRequestId {
	if in == nil {
		return nil
	}
	out := new(ProxyConfigProxyHeadersRequestId)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfigProxyHeadersServer) DeepCopyInto(out *ProxyConfigProxyHeadersServer) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfigProxyHeadersServer.
func (in *ProxyConfigProxyHeadersServer) DeepCopy() *ProxyConfigProxyHeadersServer {
	if in == nil {
		return nil
	}
	out := new(ProxyConfigProxyHeadersServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfigProxyHeadersSetCurrentClientCertDetails) DeepCopyInto(out *ProxyConfigProxyHeadersSetCurrentClientCertDetails) {
	*out = *in
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(bool)
		**out = **in
	}
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(bool)
		**out = **in
	}
	if in.Chain != nil {
		in, out := &in.Chain, &out.Chain
		*out = new(bool)
		**out = **in
	}
	if in.Dns != nil {
		in, out := &in.Dns, &out.Dns
		*out = new(bool)
		**out = **in
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfigProxyHeadersSetCurrentClientCertDetails.
func (in *ProxyConfigProxyHeadersSetCurrentClientCertDetails) DeepCopy() *ProxyConfigProxyHeadersSetCurrentClientCertDetails {
	if in == nil {
		return nil
	}
	out := new(ProxyConfigProxyHeadersSetCurrentClientCertDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfigProxyStatsMatcher) DeepCopyInto(out *ProxyConfigProxyStatsMatcher) {
	*out = *in
	if in.InclusionPrefixes != nil {
		in, out := &in.InclusionPrefixes, &out.InclusionPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InclusionSuffixes != nil {
		in, out := &in.InclusionSuffixes, &out.InclusionSuffixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InclusionRegexps != nil {
		in, out := &in.InclusionRegexps, &out.InclusionRegexps
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfigProxyStatsMatcher.
func (in *ProxyConfigProxyStatsMatcher) DeepCopy() *ProxyConfigProxyStatsMatcher {
	if in == nil {
		return nil
	}
	out := new(ProxyConfigProxyStatsMatcher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyImage) DeepCopyInto(out *ProxyImage) {
	*out = *in
	if in.ImageType != nil {
		in, out := &in.ImageType, &out.ImageType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyImage.
func (in *ProxyImage) DeepCopy() *ProxyImage {
	if in == nil {
		return nil
	}
	out := new(ProxyImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyInitConfig) DeepCopyInto(out *ProxyInitConfig) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyInitConfig.
func (in *ProxyInitConfig) DeepCopy() *ProxyInitConfig {
	if in == nil {
		return nil
	}
	out := new(ProxyInitConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteIstio) DeepCopyInto(out *RemoteIstio) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteIstio.
func (in *RemoteIstio) DeepCopy() *RemoteIstio {
	if in == nil {
		return nil
	}
	out := new(RemoteIstio)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RemoteIstio) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteIstioCondition) DeepCopyInto(out *RemoteIstioCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteIstioCondition.
func (in *RemoteIstioCondition) DeepCopy() *RemoteIstioCondition {
	if in == nil {
		return nil
	}
	out := new(RemoteIstioCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteIstioList) DeepCopyInto(out *RemoteIstioList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RemoteIstio, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteIstioList.
func (in *RemoteIstioList) DeepCopy() *RemoteIstioList {
	if in == nil {
		return nil
	}
	out := new(RemoteIstioList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RemoteIstioList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteIstioSpec) DeepCopyInto(out *RemoteIstioSpec) {
	*out = *in
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(IstioUpdateStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(Values)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteIstioSpec.
func (in *RemoteIstioSpec) DeepCopy() *RemoteIstioSpec {
	if in == nil {
		return nil
	}
	out := new(RemoteIstioSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteIstioStatus) DeepCopyInto(out *RemoteIstioStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]RemoteIstioCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.Revisions = in.Revisions
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteIstioStatus.
func (in *RemoteIstioStatus) DeepCopy() *RemoteIstioStatus {
	if in == nil {
		return nil
	}
	out := new(RemoteIstioStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteService) DeepCopyInto(out *RemoteService) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.TlsSettings != nil {
		in, out := &in.TlsSettings, &out.TlsSettings
		*out = new(ClientTLSSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.TcpKeepalive != nil {
		in, out := &in.TcpKeepalive, &out.TcpKeepalive
		*out = new(ConnectionPoolSettingsTCPSettingsTcpKeepalive)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteService.
func (in *RemoteService) DeepCopy() *RemoteService {
	if in == nil {
		return nil
	}
	out := new(RemoteService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceQuotas) DeepCopyInto(out *ResourceQuotas) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceQuotas.
func (in *ResourceQuotas) DeepCopy() *ResourceQuotas {
	if in == nil {
		return nil
	}
	out := new(ResourceQuotas)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcesRequestsConfig) DeepCopyInto(out *ResourcesRequestsConfig) {
	*out = *in
	if in.Cpu != nil {
		in, out := &in.Cpu, &out.Cpu
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcesRequestsConfig.
func (in *ResourcesRequestsConfig) DeepCopy() *ResourcesRequestsConfig {
	if in == nil {
		return nil
	}
	out := new(ResourcesRequestsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RevisionSummary) DeepCopyInto(out *RevisionSummary) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RevisionSummary.
func (in *RevisionSummary) DeepCopy() *RevisionSummary {
	if in == nil {
		return nil
	}
	out := new(RevisionSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SDS) DeepCopyInto(out *SDS) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.K8SSaJwtPath != nil {
		in, out := &in.K8SSaJwtPath, &out.K8SSaJwtPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SDS.
func (in *SDS) DeepCopy() *SDS {
	if in == nil {
		return nil
	}
	out := new(SDS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SDSConfig) DeepCopyInto(out *SDSConfig) {
	*out = *in
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(SDSConfigToken)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SDSConfig.
func (in *SDSConfig) DeepCopy() *SDSConfig {
	if in == nil {
		return nil
	}
	out := new(SDSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SDSConfigToken) DeepCopyInto(out *SDSConfigToken) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SDSConfigToken.
func (in *SDSConfigToken) DeepCopy() *SDSConfigToken {
	if in == nil {
		return nil
	}
	out := new(SDSConfigToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *STSConfig) DeepCopyInto(out *STSConfig) {
	*out = *in
	if in.ServicePort != nil {
		in, out := &in.ServicePort, &out.ServicePort
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new STSConfig.
func (in *STSConfig) DeepCopy() *STSConfig {
	if in == nil {
		return nil
	}
	out := new(STSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretVolume) DeepCopyInto(out *SecretVolume) {
	*out = *in
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretVolume.
func (in *SecretVolume) DeepCopy() *SecretVolume {
	if in == nil {
		return nil
	}
	out := new(SecretVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidecarInjectorConfig) DeepCopyInto(out *SidecarInjectorConfig) {
	*out = *in
	if in.EnableNamespacesByDefault != nil {
		in, out := &in.EnableNamespacesByDefault, &out.EnableNamespacesByDefault
		*out = new(bool)
		**out = **in
	}
	if in.ReinvocationPolicy != nil {
		in, out := &in.ReinvocationPolicy, &out.ReinvocationPolicy
		*out = new(string)
		**out = **in
	}
	if in.NeverInjectSelector != nil {
		in, out := &in.NeverInjectSelector, &out.NeverInjectSelector
		*out = make([]metav1.LabelSelector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlwaysInjectSelector != nil {
		in, out := &in.AlwaysInjectSelector, &out.AlwaysInjectSelector
		*out = make([]metav1.LabelSelector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RewriteAppHTTPProbe != nil {
		in, out := &in.RewriteAppHTTPProbe, &out.RewriteAppHTTPProbe
		*out = new(bool)
		**out = **in
	}
	if in.InjectedAnnotations != nil {
		in, out := &in.InjectedAnnotations, &out.InjectedAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.InjectionURL != nil {
		in, out := &in.InjectionURL, &out.InjectionURL
		*out = new(string)
		**out = **in
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DefaultTemplates != nil {
		in, out := &in.DefaultTemplates, &out.DefaultTemplates
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidecarInjectorConfig.
func (in *SidecarInjectorConfig) DeepCopy() *SidecarInjectorConfig {
	if in == nil {
		return nil
	}
	out := new(SidecarInjectorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StartupProbe) DeepCopyInto(out *StartupProbe) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FailureThreshold != nil {
		in, out := &in.FailureThreshold, &out.FailureThreshold
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StartupProbe.
func (in *StartupProbe) DeepCopy() *StartupProbe {
	if in == nil {
		return nil
	}
	out := new(StartupProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetUtilizationConfig) DeepCopyInto(out *TargetUtilizationConfig) {
	*out = *in
	if in.TargetAverageUtilization != nil {
		in, out := &in.TargetAverageUtilization, &out.TargetAverageUtilization
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetUtilizationConfig.
func (in *TargetUtilizationConfig) DeepCopy() *TargetUtilizationConfig {
	if in == nil {
		return nil
	}
	out := new(TargetUtilizationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TelemetryConfig) DeepCopyInto(out *TelemetryConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.V2 != nil {
		in, out := &in.V2, &out.V2
		*out = new(TelemetryV2Config)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TelemetryConfig.
func (in *TelemetryConfig) DeepCopy() *TelemetryConfig {
	if in == nil {
		return nil
	}
	out := new(TelemetryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TelemetryV2Config) DeepCopyInto(out *TelemetryV2Config) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Prometheus != nil {
		in, out := &in.Prometheus, &out.Prometheus
		*out = new(TelemetryV2PrometheusConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Stackdriver != nil {
		in, out := &in.Stackdriver, &out.Stackdriver
		*out = new(TelemetryV2StackDriverConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TelemetryV2Config.
func (in *TelemetryV2Config) DeepCopy() *TelemetryV2Config {
	if in == nil {
		return nil
	}
	out := new(TelemetryV2Config)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TelemetryV2PrometheusConfig) DeepCopyInto(out *TelemetryV2PrometheusConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TelemetryV2PrometheusConfig.
func (in *TelemetryV2PrometheusConfig) DeepCopy() *TelemetryV2PrometheusConfig {
	if in == nil {
		return nil
	}
	out := new(TelemetryV2PrometheusConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TelemetryV2StackDriverConfig) DeepCopyInto(out *TelemetryV2StackDriverConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TelemetryV2StackDriverConfig.
func (in *TelemetryV2StackDriverConfig) DeepCopy() *TelemetryV2StackDriverConfig {
	if in == nil {
		return nil
	}
	out := new(TelemetryV2StackDriverConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Topology) DeepCopyInto(out *Topology) {
	*out = *in
	if in.NumTrustedProxies != nil {
		in, out := &in.NumTrustedProxies, &out.NumTrustedProxies
		*out = new(uint32)
		**out = **in
	}
	if in.ProxyProtocol != nil {
		in, out := &in.ProxyProtocol, &out.ProxyProtocol
		*out = new(TopologyProxyProtocolConfiguration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Topology.
func (in *Topology) DeepCopy() *Topology {
	if in == nil {
		return nil
	}
	out := new(Topology)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyProxyProtocolConfiguration) DeepCopyInto(out *TopologyProxyProtocolConfiguration) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyProxyProtocolConfiguration.
func (in *TopologyProxyProtocolConfiguration) DeepCopy() *TopologyProxyProtocolConfiguration {
	if in == nil {
		return nil
	}
	out := new(TopologyProxyProtocolConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracerConfig) DeepCopyInto(out *TracerConfig) {
	*out = *in
	if in.Datadog != nil {
		in, out := &in.Datadog, &out.Datadog
		*out = new(TracerDatadogConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Lightstep != nil {
		in, out := &in.Lightstep, &out.Lightstep
		*out = new(TracerLightStepConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Zipkin != nil {
		in, out := &in.Zipkin, &out.Zipkin
		*out = new(TracerZipkinConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Stackdriver != nil {
		in, out := &in.Stackdriver, &out.Stackdriver
		*out = new(TracerStackdriverConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracerConfig.
func (in *TracerConfig) DeepCopy() *TracerConfig {
	if in == nil {
		return nil
	}
	out := new(TracerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracerDatadogConfig) DeepCopyInto(out *TracerDatadogConfig) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracerDatadogConfig.
func (in *TracerDatadogConfig) DeepCopy() *TracerDatadogConfig {
	if in == nil {
		return nil
	}
	out := new(TracerDatadogConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracerLightStepConfig) DeepCopyInto(out *TracerLightStepConfig) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracerLightStepConfig.
func (in *TracerLightStepConfig) DeepCopy() *TracerLightStepConfig {
	if in == nil {
		return nil
	}
	out := new(TracerLightStepConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracerStackdriverConfig) DeepCopyInto(out *TracerStackdriverConfig) {
	*out = *in
	if in.Debug != nil {
		in, out := &in.Debug, &out.Debug
		*out = new(bool)
		**out = **in
	}
	if in.MaxNumberOfAttributes != nil {
		in, out := &in.MaxNumberOfAttributes, &out.MaxNumberOfAttributes
		*out = new(uint32)
		**out = **in
	}
	if in.MaxNumberOfAnnotations != nil {
		in, out := &in.MaxNumberOfAnnotations, &out.MaxNumberOfAnnotations
		*out = new(uint32)
		**out = **in
	}
	if in.MaxNumberOfMessageEvents != nil {
		in, out := &in.MaxNumberOfMessageEvents, &out.MaxNumberOfMessageEvents
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracerStackdriverConfig.
func (in *TracerStackdriverConfig) DeepCopy() *TracerStackdriverConfig {
	if in == nil {
		return nil
	}
	out := new(TracerStackdriverConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracerZipkinConfig) DeepCopyInto(out *TracerZipkinConfig) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracerZipkinConfig.
func (in *TracerZipkinConfig) DeepCopy() *TracerZipkinConfig {
	if in == nil {
		return nil
	}
	out := new(TracerZipkinConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tracing) DeepCopyInto(out *Tracing) {
	*out = *in
	if in.Zipkin != nil {
		in, out := &in.Zipkin, &out.Zipkin
		*out = new(TracingZipkin)
		(*in).DeepCopyInto(*out)
	}
	if in.Lightstep != nil {
		in, out := &in.Lightstep, &out.Lightstep
		*out = new(TracingLightstep)
		(*in).DeepCopyInto(*out)
	}
	if in.Datadog != nil {
		in, out := &in.Datadog, &out.Datadog
		*out = new(TracingDatadog)
		(*in).DeepCopyInto(*out)
	}
	if in.Stackdriver != nil {
		in, out := &in.Stackdriver, &out.Stackdriver
		*out = new(TracingStackdriver)
		(*in).DeepCopyInto(*out)
	}
	if in.OpenCensusAgent != nil {
		in, out := &in.OpenCensusAgent, &out.OpenCensusAgent
		*out = new(TracingOpenCensusAgent)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomTags != nil {
		in, out := &in.CustomTags, &out.CustomTags
		*out = make(map[string]*TracingCustomTag, len(*in))
		for key, val := range *in {
			var outVal *TracingCustomTag
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(TracingCustomTag)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.MaxPathTagLength != nil {
		in, out := &in.MaxPathTagLength, &out.MaxPathTagLength
		*out = new(uint32)
		**out = **in
	}
	if in.Sampling != nil {
		in, out := &in.Sampling, &out.Sampling
		*out = new(float64)
		**out = **in
	}
	if in.TlsSettings != nil {
		in, out := &in.TlsSettings, &out.TlsSettings
		*out = new(ClientTLSSettings)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tracing.
func (in *Tracing) DeepCopy() *Tracing {
	if in == nil {
		return nil
	}
	out := new(Tracing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingCustomTag) DeepCopyInto(out *TracingCustomTag) {
	*out = *in
	if in.Literal != nil {
		in, out := &in.Literal, &out.Literal
		*out = new(TracingLiteral)
		(*in).DeepCopyInto(*out)
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(TracingEnvironment)
		(*in).DeepCopyInto(*out)
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = new(TracingRequestHeader)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingCustomTag.
func (in *TracingCustomTag) DeepCopy() *TracingCustomTag {
	if in == nil {
		return nil
	}
	out := new(TracingCustomTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingDatadog) DeepCopyInto(out *TracingDatadog) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingDatadog.
func (in *TracingDatadog) DeepCopy() *TracingDatadog {
	if in == nil {
		return nil
	}
	out := new(TracingDatadog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingEnvironment) DeepCopyInto(out *TracingEnvironment) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingEnvironment.
func (in *TracingEnvironment) DeepCopy() *TracingEnvironment {
	if in == nil {
		return nil
	}
	out := new(TracingEnvironment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingLightstep) DeepCopyInto(out *TracingLightstep) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingLightstep.
func (in *TracingLightstep) DeepCopy() *TracingLightstep {
	if in == nil {
		return nil
	}
	out := new(TracingLightstep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingLiteral) DeepCopyInto(out *TracingLiteral) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingLiteral.
func (in *TracingLiteral) DeepCopy() *TracingLiteral {
	if in == nil {
		return nil
	}
	out := new(TracingLiteral)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingOpenCensusAgent) DeepCopyInto(out *TracingOpenCensusAgent) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = make([]TracingOpenCensusAgentTraceContext, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingOpenCensusAgent.
func (in *TracingOpenCensusAgent) DeepCopy() *TracingOpenCensusAgent {
	if in == nil {
		return nil
	}
	out := new(TracingOpenCensusAgent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingRequestHeader) DeepCopyInto(out *TracingRequestHeader) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingRequestHeader.
func (in *TracingRequestHeader) DeepCopy() *TracingRequestHeader {
	if in == nil {
		return nil
	}
	out := new(TracingRequestHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingStackdriver) DeepCopyInto(out *TracingStackdriver) {
	*out = *in
	if in.Debug != nil {
		in, out := &in.Debug, &out.Debug
		*out = new(bool)
		**out = **in
	}
	if in.MaxNumberOfAttributes != nil {
		in, out := &in.MaxNumberOfAttributes, &out.MaxNumberOfAttributes
		*out = new(int64)
		**out = **in
	}
	if in.MaxNumberOfAnnotations != nil {
		in, out := &in.MaxNumberOfAnnotations, &out.MaxNumberOfAnnotations
		*out = new(int64)
		**out = **in
	}
	if in.MaxNumberOfMessageEvents != nil {
		in, out := &in.MaxNumberOfMessageEvents, &out.MaxNumberOfMessageEvents
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingStackdriver.
func (in *TracingStackdriver) DeepCopy() *TracingStackdriver {
	if in == nil {
		return nil
	}
	out := new(TracingStackdriver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingZipkin) DeepCopyInto(out *TracingZipkin) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingZipkin.
func (in *TracingZipkin) DeepCopy() *TracingZipkin {
	if in == nil {
		return nil
	}
	out := new(TracingZipkin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Values) DeepCopyInto(out *Values) {
	*out = *in
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = new(GlobalConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Pilot != nil {
		in, out := &in.Pilot, &out.Pilot
		*out = new(PilotConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Telemetry != nil {
		in, out := &in.Telemetry, &out.Telemetry
		*out = new(TelemetryConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.SidecarInjectorWebhook != nil {
		in, out := &in.SidecarInjectorWebhook, &out.SidecarInjectorWebhook
		*out = new(SidecarInjectorConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.MeshConfig != nil {
		in, out := &in.MeshConfig, &out.MeshConfig
		*out = new(MeshConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(BaseConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.IstiodRemote != nil {
		in, out := &in.IstiodRemote, &out.IstiodRemote
		*out = new(IstiodRemoteConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RevisionTags != nil {
		in, out := &in.RevisionTags, &out.RevisionTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultRevision != nil {
		in, out := &in.DefaultRevision, &out.DefaultRevision
		*out = new(string)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.CompatibilityVersion != nil {
		in, out := &in.CompatibilityVersion, &out.CompatibilityVersion
		*out = new(string)
		**out = **in
	}
	if in.Experimental != nil {
		in, out := &in.Experimental, &out.Experimental
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Values.
func (in *Values) DeepCopy() *Values {
	if in == nil {
		return nil
	}
	out := new(Values)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WaypointConfig) DeepCopyInto(out *WaypointConfig) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.TopologySpreadConstraints != nil {
		in, out := &in.TopologySpreadConstraints, &out.TopologySpreadConstraints
		*out = make([]*v1.TopologySpreadConstraint, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(v1.TopologySpreadConstraint)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = new(v1.NodeSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.Toleration != nil {
		in, out := &in.Toleration, &out.Toleration
		*out = make([]*v1.Toleration, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(v1.Toleration)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WaypointConfig.
func (in *WaypointConfig) DeepCopy() *WaypointConfig {
	if in == nil {
		return nil
	}
	out := new(WaypointConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadSelector) DeepCopyInto(out *WorkloadSelector) {
	*out = *in
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadSelector.
func (in *WorkloadSelector) DeepCopy() *WorkloadSelector {
	if in == nil {
		return nil
	}
	out := new(WorkloadSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZeroVPNConfig) DeepCopyInto(out *ZeroVPNConfig) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Suffix != nil {
		in, out := &in.Suffix, &out.Suffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZeroVPNConfig.
func (in *ZeroVPNConfig) DeepCopy() *ZeroVPNConfig {
	if in == nil {
		return nil
	}
	out := new(ZeroVPNConfig)
	in.DeepCopyInto(out)
	return out
}

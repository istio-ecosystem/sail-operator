// Copyright Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by hack/api_transformer/main.go. DO NOT EDIT.

package v1

import (
	json "encoding/json"
	autoscalingv2 "k8s.io/api/autoscaling/v2"
	k8sv1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

// Mode for the ingress controller.
// +kubebuilder:validation:Enum=UNSPECIFIED;DEFAULT;STRICT;OFF
type IngressControllerMode string

const (
	// Unspecified Istio ingress controller.
	IngressControllerModeUnspecified IngressControllerMode = "UNSPECIFIED"
	// Selects all Ingress resources, with or without Istio annotation.
	IngressControllerModeDefault IngressControllerMode = "DEFAULT"
	// Selects only resources with istio annotation.
	IngressControllerModeStrict IngressControllerMode = "STRICT"
	// No ingress or sync.
	IngressControllerModeOff IngressControllerMode = "OFF"
)

// Specifies which tracer to use.
// +kubebuilder:validation:Enum=zipkin;lightstep;datadog;stackdriver;openCensusAgent;none
type Tracer string

const (
	TracerZipkin          Tracer = "zipkin"
	TracerLightstep       Tracer = "lightstep"
	TracerDatadog         Tracer = "datadog"
	TracerStackdriver     Tracer = "stackdriver"
	TracerOpencensusagent Tracer = "openCensusAgent"
	TracerNone            Tracer = "none"
)

// Specifies the sidecar's default behavior when handling outbound traffic from the application.
// +kubebuilder:validation:Enum=ALLOW_ANY;REGISTRY_ONLY
type OutboundTrafficPolicyConfigMode string

const (
	// Outbound traffic to unknown destinations will be allowed, in case there are no services or ServiceEntries for the destination port
	OutboundTrafficPolicyConfigModeAllowAny OutboundTrafficPolicyConfigMode = "ALLOW_ANY"
	// Restrict outbound traffic to services defined in the service registry as well as those defined through ServiceEntries
	OutboundTrafficPolicyConfigModeRegistryOnly OutboundTrafficPolicyConfigMode = "REGISTRY_ONLY"
)

// ArchConfig specifies the pod scheduling target architecture(amd64, ppc64le, s390x, arm64)
// for all the Istio control plane components.
type ArchConfig struct {
	// Sets pod scheduling weight for amd64 arch
	Amd64 *uint32 `json:"amd64,omitempty"`
	// Sets pod scheduling weight for ppc64le arch.
	Ppc64Le *uint32 `json:"ppc64le,omitempty"`
	// Sets pod scheduling weight for s390x arch.
	S390X *uint32 `json:"s390x,omitempty"`
	// Sets pod scheduling weight for arm64 arch.
	Arm64 *uint32 `json:"arm64,omitempty"`
}

// Configuration for CNI.
type CNIConfig struct {
	// Hub to pull the container image from. Image will be `Hub/Image:Tag-Variant`.
	Hub *string `json:"hub,omitempty"`
	// The container image tag to pull. Image will be `Hub/Image:Tag-Variant`.
	Tag *string `json:"tag,omitempty"`
	// The container image variant to pull. Options are "debug" or "distroless". Unset will use the default for the given version.
	Variant *string `json:"variant,omitempty"`
	// Image name to pull from. Image will be `Hub/Image:Tag-Variant`.
	// If Image contains a "/", it will replace the entire `image` in the pod.
	Image *string `json:"image,omitempty"`
	// Specifies the image pull policy. one of Always, Never, IfNotPresent.
	// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.
	//
	// More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
	// +kubebuilder:validation:Enum=Always;Never;IfNotPresent
	PullPolicy *k8sv1.PullPolicy `json:"pullPolicy,omitempty"`
	// The directory path within the cluster node's filesystem where the CNI binaries are to be installed. Typically /var/lib/cni/bin.
	CniBinDir *string `json:"cniBinDir,omitempty"`
	// The directory path within the cluster node's filesystem where the CNI configuration files are to be installed. Typically /etc/cni/net.d.
	CniConfDir *string `json:"cniConfDir,omitempty"`
	// The name of the CNI plugin configuration file. Defaults to istio-cni.conf.
	CniConfFileName *string `json:"cniConfFileName,omitempty"`
	// The directory path within the cluster node's filesystem where network namespaces are located.
	// Defaults to '/var/run/netns', in minikube/docker/others can be '/var/run/docker/netns'.
	CniNetnsDir *string `json:"cniNetnsDir,omitempty"`
	// List of namespaces that should be ignored by the CNI plugin.
	ExcludeNamespaces []string `json:"excludeNamespaces,omitempty"`
	// K8s affinity to set on the istio-cni Pods. Can be used to exclude istio-cni from being scheduled on specified nodes.
	Affinity *k8sv1.Affinity `json:"affinity,omitempty"`
	// Additional annotations to apply to the istio-cni Pods.
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	PodAnnotations map[string]string `json:"podAnnotations,omitempty"`
	// PodSecurityPolicy cluster role. No longer used anywhere.
	PspClusterRole *string `json:"psp_cluster_role,omitempty"`

	// Same as `global.logging.level`, but will override it if set
	Logging *GlobalLoggingConfig `json:"logging,omitempty"`
	// Configuration for the CNI Repair controller.
	Repair *CNIRepairConfig `json:"repair,omitempty"`
	// Configure the plugin as a chained CNI plugin. When true, the configuration is added to the CNI chain; when false,
	// the configuration is added as a standalone file in the CNI configuration directory.
	Chained *bool `json:"chained,omitempty"`
	// The resource quotas configration for the CNI DaemonSet.
	ResourceQuotas *ResourceQuotas `json:"resource_quotas,omitempty"`
	// The k8s resource requests and limits for the istio-cni Pods.
	Resources *k8sv1.ResourceRequirements `json:"resources,omitempty"`
	// No longer used for CNI. See: https://github.com/istio/istio/issues/49004
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	Privileged *bool `json:"privileged,omitempty"`
	// The Container seccompProfile
	//
	// See: https://kubernetes.io/docs/tutorials/security/seccomp/
	SeccompProfile *k8sv1.SeccompProfile `json:"seccompProfile,omitempty"`
	// Configuration for Istio Ambient.
	Ambient *CNIAmbientConfig `json:"ambient,omitempty"`
	// Specifies the CNI provider. Can be either "default" or "multus". When set to "multus", an additional
	// NetworkAttachmentDefinition resource is deployed to the cluster to allow the istio-cni plugin to be
	// invoked in a cluster using the Multus CNI plugin.
	Provider *string `json:"provider,omitempty"`
	// The number of pods that can be unavailable during a rolling update of the CNI DaemonSet (see
	// `updateStrategy.rollingUpdate.maxUnavailable` here:
	// https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/daemon-set-v1/#DaemonSetSpec).
	// May be specified as a number of pods or as a percent of the total number
	// of pods at the start of the update.
	// +kubebuilder:validation:XIntOrString
	RollingMaxUnavailable *intstr.IntOrString `json:"rollingMaxUnavailable,omitempty"`
}

type CNIUsageConfig struct {
	// Controls whether CNI should be used.
	Enabled *bool `json:"enabled,omitempty"`

	// Specifies the CNI provider. Can be either "default" or "multus". When set to "multus", an annotation
	// `k8s.v1.cni.cncf.io/networks` is set on injected pods to point to a NetworkAttachmentDefinition
	Provider *string `json:"provider,omitempty"`
}

type CNIAmbientConfig struct {
	// Controls whether ambient redirection is enabled
	Enabled *bool `json:"enabled,omitempty"`
	// The directory path containing the configuration files for Ambient. Defaults to /etc/ambient-config.
	ConfigDir *string `json:"configDir,omitempty"`
	// If enabled, and ambient is enabled, DNS redirection will be enabled.
	DnsCapture *bool `json:"dnsCapture,omitempty"`
	// UNSTABLE: If enabled, and ambient is enabled, enables ipv6 support
	Ipv6 *bool `json:"ipv6,omitempty"`
	// If enabled, and ambient is enabled, iptables reconciliation will be enabled.
	ReconcileIptablesOnStartup *bool `json:"reconcileIptablesOnStartup,omitempty"`
}

type CNIRepairConfig struct {
	// Controls whether repair behavior is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Hub to pull the container image from. Image will be `Hub/Image:Tag-Variant`.
	Hub *string `json:"hub,omitempty"`
	// The container image tag to pull. Image will be `Hub/Image:Tag-Variant`.
	Tag *string `json:"tag,omitempty"`
	// Image name to pull from. Image will be `Hub/Image:Tag-Variant`.
	// If Image contains a "/", it will replace the entire `image` in the pod.
	Image *string `json:"image,omitempty"`
	// The Repair controller has 3 modes (labelPods, deletePods, and repairPods). Pick which one meets your use cases. Note only one may be used.
	// The mode defines the action the controller will take when a pod is detected as broken.
	// If labelPods is true, the controller will label all broken pods with <brokenPodLabelKey>=<brokenPodLabelValue>.
	// This is only capable of identifying broken pods; the user is responsible for fixing them (generally, by deleting them).
	// Note this gives the DaemonSet a relatively high privilege, as modifying pod metadata/status can have wider impacts.
	LabelPods *bool `json:"labelPods,omitempty"`
	// The Repair controller has 3 modes (labelPods, deletePods, and repairPods). Pick which one meets your use cases. Note only one may be used.
	// The mode defines the action the controller will take when a pod is detected as broken.
	// If repairPods is true, the controller will dynamically repair any broken pod by setting up the pod networking configuration even after it has started.
	// Note the pod will be crashlooping, so this may take a few minutes to become fully functional based on when the retry occurs.
	// This requires no RBAC privilege, but will require the CNI agent to run as a privileged pod.
	RepairPods *bool `json:"repairPods,omitempty"`
	// No longer used.
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	CreateEvents *string `json:"createEvents,omitempty"`
	// The Repair controller has 3 modes (labelPods, deletePods, and repairPods). Pick which one meets your use cases. Note only one may be used.
	// The mode defines the action the controller will take when a pod is detected as broken.
	// If deletePods is true, the controller will delete the broken pod. The pod will then be rescheduled, hopefully onto a node that is fully ready.
	// Note this gives the DaemonSet a relatively high privilege, as it can delete any Pod.
	DeletePods *bool `json:"deletePods,omitempty"`
	// The label key to apply to a broken pod when the controller is in labelPods mode.
	BrokenPodLabelKey *string `json:"brokenPodLabelKey,omitempty"`
	// The label value to apply to a broken pod when the controller is in labelPods mode.
	BrokenPodLabelValue *string `json:"brokenPodLabelValue,omitempty"`
	// The name of the init container to use for the repairPods mode.
	InitContainerName *string `json:"initContainerName,omitempty"`
}

// Configuration for the resource quotas for the CNI DaemonSet.
type ResourceQuotas struct {
	// Controls whether to create resource quotas or not for the CNI DaemonSet.
	Enabled *bool `json:"enabled,omitempty"`
	// The hard limit on the number of pods in the namespace where the CNI DaemonSet is deployed.
	Pods *int64 `json:"pods,omitempty"`
}

// Configuration for CPU or memory target utilization for HorizontalPodAutoscaler target.
type TargetUtilizationConfig struct {
	// K8s utilization setting for HorizontalPodAutoscaler target.
	//
	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
	TargetAverageUtilization *int32 `json:"targetAverageUtilization,omitempty"`
}

// DefaultPodDisruptionBudgetConfig specifies the default pod disruption budget configuration.
//
// See https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
type DefaultPodDisruptionBudgetConfig struct {
	// Controls whether a PodDisruptionBudget with a default minAvailable value of 1 is created for each deployment.
	Enabled *bool `json:"enabled,omitempty"`
}

// Global Configuration for Istio components.
type GlobalConfig struct {
	// Specifies pod scheduling arch(amd64, ppc64le, s390x, arm64) and weight as follows:
	//
	//	0 - Never scheduled
	//	1 - Least preferred
	//	2 - No preference
	//	3 - Most preferred
	//
	// Deprecated: replaced by the affinity k8s settings which allows architecture nodeAffinity configuration of this behavior.
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	Arch *ArchConfig `json:"arch,omitempty"`
	// List of certSigners to allow "approve" action in the ClusterRole
	CertSigners []string `json:"certSigners,omitempty"`
	// Controls whether the server-side validation is enabled.
	ConfigValidation *bool `json:"configValidation,omitempty"`
	// Default k8s node selector for all the Istio control plane components
	//
	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	DefaultNodeSelector map[string]string `json:"defaultNodeSelector,omitempty"`
	// Specifies the default pod disruption budget configuration.
	DefaultPodDisruptionBudget *DefaultPodDisruptionBudgetConfig `json:"defaultPodDisruptionBudget,omitempty"`
	// Default k8s resources settings for all Istio control plane components.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	DefaultResources *k8sv1.ResourceRequirements `json:"defaultResources,omitempty"`
	// Default node tolerations to be applied to all deployments so that all pods can be
	// scheduled to nodes with matching taints. Each component can overwrite
	// these default values by adding its tolerations block in the relevant section below
	// and setting the desired values.
	// Configure this field in case that all pods of Istio control plane are expected to
	// be scheduled to particular nodes with specified taints.
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	DefaultTolerations []k8sv1.Toleration `json:"defaultTolerations,omitempty"`
	// Specifies the docker hub for Istio images.
	Hub *string `json:"hub,omitempty"`
	// Specifies the image pull policy for the Istio images. one of Always, Never, IfNotPresent.
	// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.
	//
	// More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
	// +kubebuilder:validation:Enum=Always;Never;IfNotPresent
	ImagePullPolicy *k8sv1.PullPolicy `json:"imagePullPolicy,omitempty"`
	// ImagePullSecrets for the control plane ServiceAccount, list of secrets in the same namespace
	// to use for pulling any images in pods that reference this ServiceAccount.
	// Must be set for any cluster configured with private docker registry.
	ImagePullSecrets []string `json:"imagePullSecrets,omitempty"`
	// Specifies the default namespace for the Istio control plane components.
	IstioNamespace *string `json:"istioNamespace,omitempty"`
	// Specifies whether istio components should output logs in json format by adding --log_as_json argument to each container.
	LogAsJson *bool `json:"logAsJson,omitempty"`
	// Specifies the global logging level settings for the Istio control plane components.
	Logging *GlobalLoggingConfig `json:"logging,omitempty"`
	// The Mesh Identifier. It should be unique within the scope where
	// meshes will interact with each other, but it is not required to be
	// globally/universally unique. For example, if any of the following are true,
	// then two meshes must have different Mesh IDs:
	// - Meshes will have their telemetry aggregated in one place
	// - Meshes will be federated together
	// - Policy will be written referencing one mesh from the other
	//
	// If an administrator expects that any of these conditions may become true in
	// the future, they should ensure their meshes have different Mesh IDs
	// assigned.
	//
	// Within a multicluster mesh, each cluster must be (manually or auto)
	// configured to have the same Mesh ID value. If an existing cluster 'joins' a
	// multicluster mesh, it will need to be migrated to the new mesh ID. Details
	// of migration TBD, and it may be a disruptive operation to change the Mesh
	// ID post-install.
	//
	// If the mesh admin does not specify a value, Istio will use the value of the
	// mesh's Trust Domain. The best practice is to select a proper Trust Domain
	// value.
	MeshID *string `json:"meshID,omitempty"`
	// Configure the mesh networks to be used by the Split Horizon EDS.
	//
	// The following example defines two networks with different endpoints association methods.
	// For `network1` all endpoints that their IP belongs to the provided CIDR range will be
	// mapped to network1. The gateway for this network example is specified by its public IP
	// address and port.
	// The second network, `network2`, in this example is defined differently with all endpoints
	// retrieved through the specified Multi-Cluster registry being mapped to network2. The
	// gateway is also defined differently with the name of the gateway service on the remote
	// cluster. The public IP for the gateway will be determined from that remote service (only
	// LoadBalancer gateway service type is currently supported, for a NodePort type gateway service,
	// it still need to be configured manually).
	//
	// meshNetworks:
	//
	//	network1:
	//	  endpoints:
	//	  - fromCidr: "192.168.0.1/24"
	//	  gateways:
	//	  - address: 1.1.1.1
	//	    port: 80
	//	network2:
	//	  endpoints:
	//	  - fromRegistry: reg1
	//	  gateways:
	//	  - registryServiceName: istio-ingressgateway.istio-system.svc.cluster.local
	//	    port: 443
	MeshNetworks map[string]Network `json:"meshNetworks,omitempty"`
	// Specifies the Configuration for Istio mesh across multiple clusters through Istio gateways.
	MultiCluster *MultiClusterConfig `json:"multiCluster,omitempty"`
	// Network defines the network this cluster belong to. This name
	// corresponds to the networks in the map of mesh networks.
	Network *string `json:"network,omitempty"`
	// Custom DNS config for the pod to resolve names of services in other
	// clusters. Use this to add additional search domains, and other settings.
	// see https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#dns-config
	// This does not apply to gateway pods as they typically need a different
	// set of DNS settings than the normal application pods (e.g. in multicluster scenarios).
	PodDNSSearchNamespaces []string `json:"podDNSSearchNamespaces,omitempty"`
	// Controls whether the creation of the sidecar injector ConfigMap should be skipped.
	// Defaults to false. When set to true, the sidecar injector ConfigMap will not be created.
	OmitSidecarInjectorConfigMap *bool `json:"omitSidecarInjectorConfigMap,omitempty"`
	// Controls whether the WebhookConfiguration resource(s) should be created. The current behavior
	// of Istiod is to manage its own webhook configurations.
	// When this option is set to true, Istio Operator, instead of webhooks, manages the
	// webhook configurations. When this option is set as false, webhooks manage their
	// own webhook configurations.
	OperatorManageWebhooks *bool `json:"operatorManageWebhooks,omitempty"`
	// Specifies the k8s priorityClassName for the istio control plane components.
	//
	// See https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	PriorityClassName *string `json:"priorityClassName,omitempty"`
	// Specifies how proxies are configured within Istio.
	Proxy *ProxyConfig `json:"proxy,omitempty"`
	// Specifies the Configuration for proxy_init container which sets the pods' networking to intercept the inbound/outbound traffic.
	ProxyInit *ProxyInitConfig `json:"proxy_init,omitempty"`
	// Specifies the Configuration for the SecretDiscoveryService instead of using K8S secrets to mount the certificates.
	Sds *SDSConfig `json:"sds,omitempty"`
	// Specifies the tag for the Istio docker images.
	Tag *string `json:"tag,omitempty"`
	// The variant of the Istio container images to use. Options are "debug" or "distroless". Unset will use the default for the given version.
	Variant *string `json:"variant,omitempty"`
	// Specifies the Configuration for each of the supported tracers.
	Tracer *TracerConfig `json:"tracer,omitempty"`
	// Specifies the Istio control plane’s pilot Pod IP address or remote cluster DNS resolvable hostname.
	RemotePilotAddress *string `json:"remotePilotAddress,omitempty"`
	// Specifies the configution of istiod
	Istiod *IstiodConfig `json:"istiod,omitempty"`
	// Configure the Pilot certificate provider.
	// Currently, four providers are supported: "kubernetes", "istiod", "custom" and "none".
	PilotCertProvider *string `json:"pilotCertProvider,omitempty"`
	// Configure the policy for validating JWT.
	// This is deprecated and has no effect.
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	JwtPolicy *string `json:"jwtPolicy,omitempty"`
	// Specifies the configuration for Security Token Service.
	Sts *STSConfig `json:"sts,omitempty"`
	// Configures the revision this control plane is a part of
	Revision *string `json:"revision,omitempty"`
	// Controls whether the in-cluster MTLS key and certs are loaded from the secret volume mounts.
	MountMtlsCerts *bool `json:"mountMtlsCerts,omitempty"`
	// The address of the CA for CSR.
	CaAddress *string `json:"caAddress,omitempty"`
	// Controls whether one external istiod is enabled.
	ExternalIstiod *bool `json:"externalIstiod,omitempty"`
	// Controls whether a remote cluster is the config cluster for an external istiod
	ConfigCluster *bool `json:"configCluster,omitempty"`
	// The name of the CA for workloads.
	// For example, when caName=GkeWorkloadCertificate, GKE workload certificates
	// will be used as the certificates for workloads.
	// The default value is "" and when caName="", the CA will be configured by other
	// mechanisms (e.g., environmental variable CA_PROVIDER).
	CaName *string `json:"caName,omitempty"`
	// Platform in which Istio is deployed. Possible values are: "openshift" and "gcp"
	// An empty value means it is a vanilla Kubernetes distribution, therefore no special
	// treatment will be considered.
	Platform *string `json:"platform,omitempty"`
	// Defines which IP family to use for single stack or the order of IP families for dual-stack.
	// Valid list items are "IPv4", "IPv6".
	// More info: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
	IpFamilies []string `json:"ipFamilies,omitempty"`
	// Controls whether Services are configured to use IPv4, IPv6, or both. Valid options
	// are PreferDualStack, RequireDualStack, and SingleStack.
	// More info: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
	IpFamilyPolicy *string `json:"ipFamilyPolicy,omitempty"`
	// Specifies how waypoints are configured within Istio.
	Waypoint *WaypointConfig `json:"waypoint,omitempty"`
	// Select a custom name for istiod's CA Root Cert ConfigMap.
	TrustBundleName *string `json:"trustBundleName,omitempty"` // The next available key is 74

}

// Configuration for Security Token Service (STS) server.
//
// See https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16
type STSConfig struct {
	ServicePort *uint32 `json:"servicePort,omitempty"`
}

type IstiodConfig struct {
	// If enabled, istiod will perform config analysis
	EnableAnalysis *bool `json:"enableAnalysis,omitempty"`
}

// GlobalLoggingConfig specifies the global logging level settings for the Istio control plane components.
type GlobalLoggingConfig struct {
	// Comma-separated minimum per-scope logging level of messages to output, in the form of <scope>:<level>,<scope>:<level>
	// The control plane has different scopes depending on component, but can configure default log level across all components
	// If empty, default scope and level will be used as configured in code
	Level *string `json:"level,omitempty"`
}

// MultiClusterConfig specifies the Configuration for Istio mesh across multiple clusters through the istio gateways.
type MultiClusterConfig struct {
	// Enables the connection between two kubernetes clusters via their respective ingressgateway services.
	// Use if the pods in each cluster cannot directly talk to one another.
	Enabled *bool `json:"enabled,omitempty"`
	// The name of the cluster this installation will run in. This is required for sidecar injection
	// to properly label proxies
	ClusterName *string `json:"clusterName,omitempty"`
	// The suffix for global service names.
	GlobalDomainSuffix *string `json:"globalDomainSuffix,omitempty"`
	// Enable envoy filter to translate `globalDomainSuffix` to cluster local suffix for cross cluster communication.
	IncludeEnvoyFilter *bool `json:"includeEnvoyFilter,omitempty"`
}

// OutboundTrafficPolicyConfig controls the default behavior of the sidecar for handling outbound traffic from the application.
type OutboundTrafficPolicyConfig struct {
	Mode OutboundTrafficPolicyConfigMode `json:"mode,omitempty"`
}

// Configuration for Pilot.
type PilotConfig struct {
	// Controls whether Pilot is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Controls whether a HorizontalPodAutoscaler is installed for Pilot.
	AutoscaleEnabled *bool `json:"autoscaleEnabled,omitempty"`
	// Minimum number of replicas in the HorizontalPodAutoscaler for Pilot.
	AutoscaleMin *uint32 `json:"autoscaleMin,omitempty"`
	// Maximum number of replicas in the HorizontalPodAutoscaler for Pilot.
	AutoscaleMax *uint32 `json:"autoscaleMax,omitempty"`
	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#configurable-scaling-behavior
	AutoscaleBehavior *autoscalingv2.HorizontalPodAutoscalerBehavior `json:"autoscaleBehavior,omitempty"`
	// Number of replicas in the Pilot Deployment.
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	ReplicaCount *uint32 `json:"replicaCount,omitempty"`
	// Image name used for Pilot.
	//
	// This can be set either to image name if hub is also set, or can be set to the full hub:name string.
	//
	// Examples: custom-pilot, docker.io/someuser:custom-pilot
	Image *string `json:"image,omitempty"`
	// Trace sampling fraction.
	//
	// Used to set the fraction of time that traces are sampled. Higher values are more accurate but add CPU overhead.
	//
	// Allowed values: 0.0 to 1.0
	TraceSampling *float64 `json:"traceSampling,omitempty"`
	// K8s resources settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	Resources *k8sv1.ResourceRequirements `json:"resources,omitempty"`
	// Target CPU utilization used in HorizontalPodAutoscaler.
	//
	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	Cpu *TargetUtilizationConfig `json:"cpu,omitempty"`
	// K8s node selector.
	//
	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	NodeSelector map[string]string `json:"nodeSelector,omitempty"`
	// Maximum duration that a sidecar can be connected to a pilot.
	//
	// This setting balances out load across pilot instances, but adds some resource overhead.
	//
	// Examples: 300s, 30m, 1h
	KeepaliveMaxServerConnectionAge *metav1.Duration `json:"keepaliveMaxServerConnectionAge,omitempty"`
	// Labels that are added to Pilot deployment.
	//
	// See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
	DeploymentLabels map[string]string `json:"deploymentLabels,omitempty"`
	// Labels that are added to Pilot pods.
	//
	// See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
	PodLabels map[string]string `json:"podLabels,omitempty"`
	// Configuration settings passed to Pilot as a ConfigMap.
	//
	// This controls whether the mesh config map, generated from values.yaml is generated.
	// If false, pilot wil use default values or user-supplied values, in that order of preference.
	ConfigMap *bool `json:"configMap,omitempty"`
	// Environment variables passed to the Pilot container.
	//
	// Examples:
	// env:
	//
	//	ENV_VAR_1: value1
	//	ENV_VAR_2: value2
	Env map[string]string `json:"env,omitempty"`
	// K8s affinity to set on the Pilot Pods.
	Affinity *k8sv1.Affinity `json:"affinity,omitempty"`
	// K8s rolling update strategy
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	// +kubebuilder:validation:XIntOrString
	RollingMaxSurge *intstr.IntOrString `json:"rollingMaxSurge,omitempty"`
	// The number of pods that can be unavailable during a rolling update (see
	// `strategy.rollingUpdate.maxUnavailable` here:
	// https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/#DeploymentSpec).
	// May be specified as a number of pods or as a percent of the total number
	// of pods at the start of the update.
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	// +kubebuilder:validation:XIntOrString
	RollingMaxUnavailable *intstr.IntOrString `json:"rollingMaxUnavailable,omitempty"`
	// The node tolerations to be applied to the Pilot deployment so that it can be
	// scheduled to particular nodes with matching taints.
	// More info: https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	Tolerations []k8sv1.Toleration `json:"tolerations,omitempty"`
	// K8s annotations for pods.
	//
	// See: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	PodAnnotations map[string]string `json:"podAnnotations,omitempty"`
	// K8s annotations for the Service.
	//
	// See: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
	ServiceAnnotations map[string]string `json:"serviceAnnotations,omitempty"`
	// K8s annotations for the service account
	ServiceAccountAnnotations map[string]string `json:"serviceAccountAnnotations,omitempty"`
	// Specifies an extra root certificate in PEM format. This certificate will be trusted
	// by pilot when resolving JWKS URIs.
	JwksResolverExtraRootCA *string `json:"jwksResolverExtraRootCA,omitempty"`
	// Hub to pull the container image from. Image will be `Hub/Image:Tag-Variant`.
	Hub *string `json:"hub,omitempty"`
	// The container image tag to pull. Image will be `Hub/Image:Tag-Variant`.
	Tag *string `json:"tag,omitempty"`
	// The container image variant to pull. Options are "debug" or "distroless". Unset will use the default for the given version.
	Variant *string `json:"variant,omitempty"`
	// The seccompProfile for the Pilot container.
	//
	// See: https://kubernetes.io/docs/tutorials/security/seccomp/
	SeccompProfile *k8sv1.SeccompProfile `json:"seccompProfile,omitempty"`
	// The k8s topologySpreadConstraints for the Pilot pods.
	TopologySpreadConstraints []k8sv1.TopologySpreadConstraint `json:"topologySpreadConstraints,omitempty"`
	// Additional container arguments for the Pilot container.
	ExtraContainerArgs []string `json:"extraContainerArgs,omitempty"`
	// Additional volumeMounts to add to the Pilot container.
	VolumeMounts []k8sv1.VolumeMount `json:"volumeMounts,omitempty"`
	// Additional volumes to add to the Pilot Pod.
	Volumes []k8sv1.Volume `json:"volumes,omitempty"`
	// Defines which IP family to use for single stack or the order of IP families for dual-stack.
	// Valid list items are "IPv4", "IPv6".
	// More info: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
	IpFamilies []string `json:"ipFamilies,omitempty"`
	// Controls whether Services are configured to use IPv4, IPv6, or both. Valid options
	// are PreferDualStack, RequireDualStack, and SingleStack.
	// More info: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
	IpFamilyPolicy *string `json:"ipFamilyPolicy,omitempty"`
	// Target memory utilization used in HorizontalPodAutoscaler.
	//
	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	Memory *TargetUtilizationConfig `json:"memory,omitempty"`
	// Configures whether to use an existing CNI installation for workloads
	Cni   *CNIUsageConfig             `json:"cni,omitempty"`
	Taint *PilotTaintControllerConfig `json:"taint,omitempty"`
	// If set, `istiod` will allow connections from trusted node proxy ztunnels
	// in the provided namespace.
	TrustedZtunnelNamespace *string `json:"trustedZtunnelNamespace,omitempty"`
	// Configuration for the istio-discovery chart when istiod is running in a remote cluster (e.g. "remote control plane").
	IstiodRemote *IstiodRemoteConfig `json:"istiodRemote,omitempty"`
	// Configuration for the istio-discovery chart
	EnvVarFrom []k8sv1.EnvFromSource `json:"envVarFrom,omitempty"`
}

type PilotTaintControllerConfig struct {
	// Enable the untaint controller for new nodes. This aims to solve a race for CNI installation on
	// new nodes. For this to work, the newly added nodes need to have the istio CNI taint as they are
	// added to the cluster. This is usually done by configuring the cluster infra provider.
	Enabled *bool `json:"enabled,omitempty"`
	// The namespace of the CNI daemonset, incase it's not the same as istiod.
	Namespace *string `json:"namespace,omitempty"`
}

// Controls whether Istio policy is applied to Pilot.
type PilotPolicyConfig struct {
	// Controls whether Istio policy is applied to Pilot.
	Enabled *bool `json:"enabled,omitempty"`
}

// Controls telemetry configuration
type TelemetryConfig struct {
	// Controls whether telemetry is exported for Pilot.
	Enabled *bool `json:"enabled,omitempty"`
	// Configuration for Telemetry v2.
	V2 *TelemetryV2Config `json:"v2,omitempty"`
}

// Controls whether pilot will configure telemetry v2.
type TelemetryV2Config struct {
	// Controls whether pilot will configure telemetry v2.
	Enabled *bool `json:"enabled,omitempty"`
	// Telemetry v2 settings for prometheus.
	Prometheus *TelemetryV2PrometheusConfig `json:"prometheus,omitempty"`
	// Telemetry v2 settings for stackdriver.
	Stackdriver *TelemetryV2StackDriverConfig `json:"stackdriver,omitempty"`
}

// Controls telemetry v2 prometheus settings.
type TelemetryV2PrometheusConfig struct {
	// Controls whether stats envoyfilter would be enabled or not.
	Enabled *bool `json:"enabled,omitempty"`
}

// TelemetryV2StackDriverConfig controls telemetry v2 stackdriver settings.
type TelemetryV2StackDriverConfig struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// Configuration for a port.
type PortsConfig struct {
	// Port name.
	Name *string `json:"name,omitempty"`
	// Port number.
	Port *int32 `json:"port,omitempty"`
	// NodePort number.
	NodePort *int32 `json:"nodePort,omitempty"`
	// Target port number.
	TargetPort *int32 `json:"targetPort,omitempty"`
	// Protocol name.
	Protocol *string `json:"protocol,omitempty"`
}

// Configuration for Proxy.
type ProxyConfig struct {
	// Controls the 'policy' in the sidecar injector.
	AutoInject *string `json:"autoInject,omitempty"`
	// Domain for the cluster, default: "cluster.local".
	//
	// K8s allows this to be customized, see https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/
	ClusterDomain *string `json:"clusterDomain,omitempty"`
	// Per Component log level for proxy, applies to gateways and sidecars.
	//
	// If a component level is not set, then the global "logLevel" will be used. If left empty, "misc:error" is used.
	ComponentLogLevel *string `json:"componentLogLevel,omitempty"`
	// Enables core dumps for newly injected sidecars.
	//
	// If set, newly injected sidecars will have core dumps enabled.
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	EnableCoreDump *bool `json:"enableCoreDump,omitempty"`
	// Specifies the Istio ingress ports not to capture.
	ExcludeInboundPorts *string `json:"excludeInboundPorts,omitempty"`
	// Lists the excluded IP ranges of Istio egress traffic that the sidecar captures.
	ExcludeIPRanges *string `json:"excludeIPRanges,omitempty"`
	// Image name or path for the proxy, default: "proxyv2".
	//
	// If registry or tag are not specified, global.hub and global.tag are used.
	//
	// Examples: my-proxy (uses global.hub/tag), docker.io/myrepo/my-proxy:v1.0.0
	Image *string `json:"image,omitempty"`
	// Lists the IP ranges of Istio egress traffic that the sidecar captures.
	//
	// Example: "172.30.0.0/16,172.20.0.0/16"
	// This would only capture egress traffic on those two IP Ranges, all other outbound traffic would # be allowed by the sidecar."
	IncludeIPRanges *string `json:"includeIPRanges,omitempty"`
	// Log level for proxy, applies to gateways and sidecars. If left empty, "warning" is used. Expected values are: trace\|debug\|info\|warning\|error\|critical\|off
	LogLevel *string `json:"logLevel,omitempty"`
	// Path to the file to which the proxy will write outlier detection logs.
	//
	// Example: "/dev/stdout"
	// This would write the logs to standard output.
	OutlierLogPath *string `json:"outlierLogPath,omitempty"`
	// Enables privileged securityContext for the istio-proxy container.
	//
	// See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
	Privileged *bool `json:"privileged,omitempty"`
	// Sets the initial delay for readiness probes in seconds.
	ReadinessInitialDelaySeconds *uint32 `json:"readinessInitialDelaySeconds,omitempty"`
	// Sets the interval between readiness probes in seconds.
	ReadinessPeriodSeconds *uint32 `json:"readinessPeriodSeconds,omitempty"`
	// Sets the number of successive failed probes before indicating readiness failure.
	ReadinessFailureThreshold *uint32 `json:"readinessFailureThreshold,omitempty"`
	// Configures the startup probe for the istio-proxy container.
	StartupProbe *StartupProbe `json:"startupProbe,omitempty"`
	// Default port used for the Pilot agent's health checks.
	StatusPort *uint32 `json:"statusPort,omitempty"`
	// K8s resources settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	Resources *k8sv1.ResourceRequirements `json:"resources,omitempty"`
	// Specify which tracer to use. One of: zipkin, lightstep, datadog, stackdriver.
	// If using stackdriver tracer outside GCP, set env GOOGLE_APPLICATION_CREDENTIALS to the GCP credential file.
	Tracer Tracer `json:"tracer,omitempty"`
	// A comma separated list of outbound ports to be excluded from redirection to Envoy.
	ExcludeOutboundPorts *string `json:"excludeOutboundPorts,omitempty"`
	// The k8s lifecycle hooks definition (pod.spec.containers.lifecycle) for the proxy container.
	// More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
	Lifecycle *k8sv1.Lifecycle `json:"lifecycle,omitempty"`
	// Controls if sidecar is injected at the front of the container list and blocks the start of the other containers until the proxy is ready
	//
	// Deprecated: replaced by ProxyConfig setting which allows per-pod configuration of this behavior.
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	HoldApplicationUntilProxyStarts *bool `json:"holdApplicationUntilProxyStarts,omitempty"`
	// A comma separated list of inbound ports for which traffic is to be redirected to Envoy.
	// The wildcard character '*' can be used to configure redirection for all ports.
	IncludeInboundPorts *string `json:"includeInboundPorts,omitempty"`
	// A comma separated list of outbound ports for which traffic is to be redirected to Envoy, regardless of the destination IP.
	IncludeOutboundPorts *string `json:"includeOutboundPorts,omitempty"`
}

type StartupProbe struct {
	// Enables or disables a startup probe.
	// For optimal startup times, changing this should be tied to the readiness probe values.
	//
	// If the probe is enabled, it is recommended to have delay=0s,period=15s,failureThreshold=4.
	// This ensures the pod is marked ready immediately after the startup probe passes (which has a 1s poll interval),
	// and doesn't spam the readiness endpoint too much
	//
	// If the probe is disabled, it is recommended to have delay=1s,period=2s,failureThreshold=30.
	// This ensures the startup is reasonable fast (polling every 2s). 1s delay is used since the startup is not often ready instantly.
	Enabled *bool `json:"enabled,omitempty"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	FailureThreshold *uint32 `json:"failureThreshold,omitempty"`
}

// Configuration for proxy_init container which sets the pods' networking to intercept the inbound/outbound traffic.
type ProxyInitConfig struct {
	// Specifies the image for the proxy_init container.
	Image *string `json:"image,omitempty"`
	// K8s resources settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	Resources *k8sv1.ResourceRequirements `json:"resources,omitempty"`
}

// Configuration for K8s resource requests.
type ResourcesRequestsConfig struct {
	// CPU requests.
	Cpu *string `json:"cpu,omitempty"`
	// Memory requests.
	Memory *string `json:"memory,omitempty"`
}

// Configuration for the SecretDiscoveryService instead of using K8S secrets to mount the certificates.
type SDSConfig struct {
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	Token *SDSConfigToken `json:"token,omitempty"`
}

// Configuration for secret volume mounts.
//
// See https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets.
type SecretVolume struct {
	MountPath  *string `json:"mountPath,omitempty"`
	Name       *string `json:"name,omitempty"`
	SecretName *string `json:"secretName,omitempty"`
}

// SidecarInjectorConfig is described in istio.io documentation.
type SidecarInjectorConfig struct {
	// Enables sidecar auto-injection in namespaces by default.
	EnableNamespacesByDefault *bool `json:"enableNamespacesByDefault,omitempty"`
	// Setting this to `IfNeeded` will result in the sidecar injector being run again if additional mutations occur. Default: Never
	ReinvocationPolicy *string `json:"reinvocationPolicy,omitempty"`
	// Instructs Istio to not inject the sidecar on those pods, based on labels that are present in those pods.
	//
	// Annotations in the pods have higher precedence than the label selectors.
	// Order of evaluation: Pod Annotations → NeverInjectSelector → AlwaysInjectSelector → Default Policy.
	// See https://istio.io/docs/setup/kubernetes/additional-setup/sidecar-injection/#more-control-adding-exceptions
	NeverInjectSelector []metav1.LabelSelector `json:"neverInjectSelector,omitempty"`
	// See NeverInjectSelector.
	AlwaysInjectSelector []metav1.LabelSelector `json:"alwaysInjectSelector,omitempty"`
	// If true, webhook or istioctl injector will rewrite PodSpec for liveness health check to redirect request to sidecar. This makes liveness check work even when mTLS is enabled.
	RewriteAppHTTPProbe *bool `json:"rewriteAppHTTPProbe,omitempty"`
	// injectedAnnotations are additional annotations that will be added to the pod spec after injection
	// This is primarily to support PSP annotations.
	InjectedAnnotations map[string]string `json:"injectedAnnotations,omitempty"`
	// Configure the injection url for sidecar injector webhook
	InjectionURL *string `json:"injectionURL,omitempty"`
	// Templates defines a set of custom injection templates that can be used. For example, defining:
	//
	// templates:
	//
	//	hello: |
	//	  metadata:
	//	    labels:
	//	      hello: world
	//
	// Then starting a pod with the `inject.istio.io/templates: hello` annotation, will result in the pod
	// being injected with the hello=world labels.
	// This is intended for advanced configuration only; most users should use the built in template
	Templates map[string]string `json:"templates,omitempty"`
	// defaultTemplates: ["sidecar", "hello"]
	DefaultTemplates []string `json:"defaultTemplates,omitempty"`
}

// Configuration for each of the supported tracers.
type TracerConfig struct {
	// Configuration for the datadog tracing service.
	Datadog *TracerDatadogConfig `json:"datadog,omitempty"`
	// Configuration for the lightstep tracing service.
	Lightstep *TracerLightStepConfig `json:"lightstep,omitempty"`
	// Configuration for the zipkin tracing service.
	Zipkin *TracerZipkinConfig `json:"zipkin,omitempty"`
	// Configuration for the stackdriver tracing service.
	Stackdriver *TracerStackdriverConfig `json:"stackdriver,omitempty"`
}

// Configuration for the datadog tracing service.
type TracerDatadogConfig struct {
	// Address in host:port format for reporting trace data to the Datadog agent.
	Address *string `json:"address,omitempty"`
}

// Configuration for the lightstep tracing service.
type TracerLightStepConfig struct {
	// Sets the lightstep satellite pool address in host:port format for reporting trace data.
	Address *string `json:"address,omitempty"`
	// Sets the lightstep access token.
	AccessToken *string `json:"accessToken,omitempty"`
}

// Configuration for the zipkin tracing service.
type TracerZipkinConfig struct {
	// Address of zipkin instance in host:port format for reporting trace data.
	//
	// Example: <zipkin-collector-service>.<zipkin-collector-namespace>:941
	Address *string `json:"address,omitempty"`
}

// Configuration for the stackdriver tracing service.
type TracerStackdriverConfig struct {
	// enables trace output to stdout.
	Debug *bool `json:"debug,omitempty"`
	// The global default max number of attributes per span.
	MaxNumberOfAttributes *uint32 `json:"maxNumberOfAttributes,omitempty"`
	// The global default max number of annotation events per span.
	MaxNumberOfAnnotations *uint32 `json:"maxNumberOfAnnotations,omitempty"`
	// The global default max number of message events per span.
	MaxNumberOfMessageEvents *uint32 `json:"maxNumberOfMessageEvents,omitempty"`
}

type BaseConfig struct {
	// CRDs to exclude. Requires `enableCRDTemplates`
	ExcludedCRDs []string `json:"excludedCRDs,omitempty"`
	// URL to use for validating webhook.
	ValidationURL *string `json:"validationURL,omitempty"`

	// validation webhook CA bundle
	ValidationCABundle *string `json:"validationCABundle,omitempty"`
}

type IstiodRemoteConfig struct {
	// URL to use for sidecar injector webhook.
	InjectionURL *string `json:"injectionURL,omitempty"`
	// Path to use for the sidecar injector webhook service.
	InjectionPath *string `json:"injectionPath,omitempty"`
	// injector ca bundle
	InjectionCABundle *string `json:"injectionCABundle,omitempty"`
	// Indicates if this cluster/install should consume a "remote" istiod instance,
	Enabled *bool `json:"enabled,omitempty"`
}

type Values struct {
	// Global configuration for Istio components.
	Global *GlobalConfig `json:"global,omitempty"`
	// Configuration for the Pilot component.
	Pilot *PilotConfig `json:"pilot,omitempty"`

	// Controls whether telemetry is exported for Pilot.
	Telemetry *TelemetryConfig `json:"telemetry,omitempty"`
	// Configuration for the sidecar injector webhook.
	SidecarInjectorWebhook *SidecarInjectorConfig `json:"sidecarInjectorWebhook,omitempty"`

	// Identifies the revision this installation is associated with.
	Revision *string `json:"revision,omitempty"`

	// Defines runtime configuration of components, including Istiod and istio-agent behavior.
	// See https://istio.io/docs/reference/config/istio.mesh.v1alpha1/ for all available options.
	// TODO can this import the real mesh config API?
	MeshConfig *MeshConfig `json:"meshConfig,omitempty"`
	// Configuration for the base component.
	Base *BaseConfig `json:"base,omitempty"`
	// Configuration for istiod-remote.
	// DEPRECATED - istiod-remote chart is removed and replaced with
	// `istio-discovery --set values.istiodRemote.enabled=true`
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	IstiodRemote *IstiodRemoteConfig `json:"istiodRemote,omitempty"`

	// The name of the default revision in the cluster.
	// +hidefromdoc
	// Deprecated: This field is ignored. The default revision is expected to be configurable elsewhere.
	DefaultRevision *string `json:"defaultRevision,omitempty"`
	// Specifies which installation configuration profile to apply.
	Profile *string `json:"profile,omitempty"`
	// Specifies the compatibility version to use. When this is set, the control plane will
	// be configured with the same defaults as the specified version.
	CompatibilityVersion *string `json:"compatibilityVersion,omitempty"`
	// Specifies experimental helm fields that could be removed or changed in the future
	// +kubebuilder:pruning:PreserveUnknownFields
	// +kubebuilder:validation:Schemaless
	Experimental json.RawMessage `json:"experimental,omitempty"`
	// Configuration for Gateway Classes
	GatewayClasses json.RawMessage `json:"gatewayClasses,omitempty"`
}

// ExperimentalConfig is a placeholder for experimental installation features.
type ExperimentalConfig struct {
	// Controls whether the experimental feature is enabled.
	StableValidationPolicy *bool `json:"stableValidationPolicy,omitempty"`
}

// Configuration for Waypoint proxies.
type WaypointConfig struct {
	// K8s resource settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	Resources *k8sv1.ResourceRequirements `json:"resources,omitempty"`
	// K8s affinity settings for waypoint pods.
	//
	// See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
	Affinity *k8sv1.Affinity `json:"affinity,omitempty"`
	// K8s topology spread constraints settings.
	//
	// See https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
	TopologySpreadConstraints []*k8sv1.TopologySpreadConstraint `json:"topologySpreadConstraints,omitempty"`
	// K8s node labels settings.
	//
	// See https://kubernetes.io/docs/user-guide/node-selection/
	NodeSelector *k8sv1.NodeSelector `json:"nodeSelector,omitempty"`
	// K8s tolerations settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
	Toleration []*k8sv1.Toleration `json:"toleration,omitempty"`
}

const filePkgApisValuesTypesProtoRawDesc = "" +
	"\n" +
	"\x1bpkg/apis/values_types.proto\x12\x17istio.operator.v1alpha1\x1a\x19google/protobuf/any.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\"k8s.io/api/core/v1/generated.proto\x1a4k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto\"h\n" +
	"\n" +
	"ArchConfig\x12\x14\n" +
	"\x05amd64\x18\x01 \x01(\rR\x05amd64\x12\x18\n" +
	"\appc64le\x18\x02 \x01(\rR\appc64le\x12\x14\n" +
	"\x05s390x\x18\x03 \x01(\rR\x05s390x\x12\x14\n" +
	"\x05arm64\x18\x04 \x01(\rR\x05arm64\"\xeb\t\n" +
	"\tCNIConfig\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12\x10\n" +
	"\x03hub\x18\x02 \x01(\tR\x03hub\x12(\n" +
	"\x03tag\x18\x03 \x01(\v2\x16.google.protobuf.ValueR\x03tag\x12\x18\n" +
	"\avariant\x18\x1d \x01(\tR\avariant\x12\x14\n" +
	"\x05image\x18\x04 \x01(\tR\x05image\x12\x1e\n" +
	"\n" +
	"pullPolicy\x18\x05 \x01(\tR\n" +
	"pullPolicy\x12\x1c\n" +
	"\tcniBinDir\x18\x06 \x01(\tR\tcniBinDir\x12\x1e\n" +
	"\n" +
	"cniConfDir\x18\a \x01(\tR\n" +
	"cniConfDir\x12(\n" +
	"\x0fcniConfFileName\x18\b \x01(\tR\x0fcniConfFileName\x12 \n" +
	"\vcniNetnsDir\x18\x1f \x01(\tR\vcniNetnsDir\x12,\n" +
	"\x11excludeNamespaces\x18\t \x03(\tR\x11excludeNamespaces\x128\n" +
	"\baffinity\x18\x14 \x01(\v2\x1c.k8s.io.api.core.v1.AffinityR\baffinity\x12C\n" +
	"\x0epodAnnotations\x18\n" +
	" \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01R\x0epodAnnotations\x12(\n" +
	"\x10psp_cluster_role\x18\v \x01(\tR\x0epspClusterRole\x12\x1e\n" +
	"\blogLevel\x18\f \x01(\tB\x02\x18\x01R\blogLevel\x12F\n" +
	"\alogging\x18\x19 \x01(\v2,.istio.operator.v1alpha1.GlobalLoggingConfigR\alogging\x12@\n" +
	"\x06repair\x18\r \x01(\v2(.istio.operator.v1alpha1.CNIRepairConfigR\x06repair\x124\n" +
	"\achained\x18\x0e \x01(\v2\x1a.google.protobuf.BoolValueR\achained\x12P\n" +
	"\x0fresource_quotas\x18\x10 \x01(\v2'.istio.operator.v1alpha1.ResourceQuotasR\x0eresourceQuotas\x12@\n" +
	"\tresources\x18\x11 \x01(\v2\".istio.operator.v1alpha1.ResourcesR\tresources\x12>\n" +
	"\n" +
	"privileged\x18\x12 \x01(\v2\x1a.google.protobuf.BoolValueB\x02\x18\x01R\n" +
	"privileged\x12J\n" +
	"\x0eseccompProfile\x18\x13 \x01(\v2\".k8s.io.api.core.v1.SeccompProfileR\x0eseccompProfile\x12C\n" +
	"\aambient\x18\x15 \x01(\v2).istio.operator.v1alpha1.CNIAmbientConfigR\aambient\x12\x1a\n" +
	"\bprovider\x18\x16 \x01(\tR\bprovider\x12Z\n" +
	"\x15rollingMaxUnavailable\x18\x17 \x01(\v2$.istio.operator.v1alpha1.IntOrStringR\x15rollingMaxUnavailable\"\x9c\x01\n" +
	"\x0eCNIUsageConfig\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x128\n" +
	"\achained\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueB\x02\x18\x01R\achained\x12\x1a\n" +
	"\bprovider\x18\x03 \x01(\tR\bprovider\"\xae\x02\n" +
	"\x10CNIAmbientConfig\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12\x1c\n" +
	"\tconfigDir\x18\x03 \x01(\tR\tconfigDir\x12:\n" +
	"\n" +
	"dnsCapture\x18\x05 \x01(\v2\x1a.google.protobuf.BoolValueR\n" +
	"dnsCapture\x12.\n" +
	"\x04ipv6\x18\a \x01(\v2\x1a.google.protobuf.BoolValueR\x04ipv6\x12Z\n" +
	"\x1areconcileIptablesOnStartup\x18\t \x01(\v2\x1a.google.protobuf.BoolValueR\x1areconcileIptablesOnStartup\"\xad\x03\n" +
	"\x0fCNIRepairConfig\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12\x10\n" +
	"\x03hub\x18\x02 \x01(\tR\x03hub\x12(\n" +
	"\x03tag\x18\x03 \x01(\v2\x16.google.protobuf.ValueR\x03tag\x12\x14\n" +
	"\x05image\x18\x04 \x01(\tR\x05image\x12\x1c\n" +
	"\tlabelPods\x18\x05 \x01(\bR\tlabelPods\x12\x1e\n" +
	"\n" +
	"repairPods\x18\v \x01(\bR\n" +
	"repairPods\x12&\n" +
	"\fcreateEvents\x18\x06 \x01(\tB\x02\x18\x01R\fcreateEvents\x12\x1e\n" +
	"\n" +
	"deletePods\x18\a \x01(\bR\n" +
	"deletePods\x12,\n" +
	"\x11brokenPodLabelKey\x18\b \x01(\tR\x11brokenPodLabelKey\x120\n" +
	"\x13brokenPodLabelValue\x18\t \x01(\tR\x13brokenPodLabelValue\x12,\n" +
	"\x11initContainerName\x18\n" +
	" \x01(\tR\x11initContainerName\"Z\n" +
	"\x0eResourceQuotas\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12\x12\n" +
	"\x04pods\x18\x02 \x01(\x03R\x04pods\"U\n" +
	"\x17TargetUtilizationConfig\x12:\n" +
	"\x18targetAverageUtilization\x18\x01 \x01(\x05R\x18targetAverageUtilization\"\x99\x02\n" +
	"\tResources\x12F\n" +
	"\x06limits\x18\x01 \x03(\v2..istio.operator.v1alpha1.Resources.LimitsEntryR\x06limits\x12L\n" +
	"\brequests\x18\x02 \x03(\v20.istio.operator.v1alpha1.Resources.RequestsEntryR\brequests\x1a9\n" +
	"\vLimitsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rRequestsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"K\n" +
	"\x0eServiceAccount\x129\n" +
	"\vannotations\x18\x01 \x01(\v2\x17.google.protobuf.StructR\vannotations\"X\n" +
	" DefaultPodDisruptionBudgetConfig\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\"f\n" +
	"\x16DefaultResourcesConfig\x12L\n" +
	"\brequests\x18\x01 \x01(\v20.istio.operator.v1alpha1.ResourcesRequestsConfigR\brequests\"\xbb\x0f\n" +
	"\x13EgressGatewayConfig\x12F\n" +
	"\x10autoscaleEnabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\x10autoscaleEnabled\x12\"\n" +
	"\fautoscaleMax\x18\x02 \x01(\rR\fautoscaleMax\x12\"\n" +
	"\fautoscaleMin\x18\x03 \x01(\rR\fautoscaleMin\x12L\n" +
	"\x06memory\x18\x04 \x01(\v20.istio.operator.v1alpha1.TargetUtilizationConfigB\x02\x18\x01R\x06memory\x12F\n" +
	"\x03cpu\x18\x05 \x01(\v20.istio.operator.v1alpha1.TargetUtilizationConfigB\x02\x18\x01R\x03cpu\x12@\n" +
	"\rcustomService\x18\x06 \x01(\v2\x1a.google.protobuf.BoolValueR\rcustomService\x124\n" +
	"\aenabled\x18\a \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12)\n" +
	"\x03env\x18\b \x01(\v2\x17.google.protobuf.StructR\x03env\x12P\n" +
	"\x06labels\x18\t \x03(\v28.istio.operator.v1alpha1.EgressGatewayConfig.LabelsEntryR\x06labels\x12\x12\n" +
	"\x04name\x18\x19 \x01(\tR\x04name\x12?\n" +
	"\fnodeSelector\x18\n" +
	" \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01R\fnodeSelector\x12C\n" +
	"\x0epodAnnotations\x18\v \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01R\x0epodAnnotations\x12{\n" +
	"\x1cpodAntiAffinityLabelSelector\x18\f \x03(\v23.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorB\x02\x18\x01R\x1cpodAntiAffinityLabelSelector\x12\x83\x01\n" +
	" podAntiAffinityTermLabelSelector\x18\r \x03(\v23.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorB\x02\x18\x01R podAntiAffinityTermLabelSelector\x12:\n" +
	"\x05ports\x18\x0e \x03(\v2$.istio.operator.v1alpha1.PortsConfigR\x05ports\x12D\n" +
	"\tresources\x18\x0f \x01(\v2\".istio.operator.v1alpha1.ResourcesB\x02\x18\x01R\tresources\x12K\n" +
	"\rsecretVolumes\x18\x10 \x03(\v2%.istio.operator.v1alpha1.SecretVolumeR\rsecretVolumes\x12G\n" +
	"\x12serviceAnnotations\x18\x11 \x01(\v2\x17.google.protobuf.StructR\x12serviceAnnotations\x12\x12\n" +
	"\x04type\x18\x12 \x01(\tR\x04type\x12D\n" +
	"\vtolerations\x18\x14 \x03(\v2\x1e.k8s.io.api.core.v1.TolerationB\x02\x18\x01R\vtolerations\x12R\n" +
	"\x0frollingMaxSurge\x18\x15 \x01(\v2$.istio.operator.v1alpha1.IntOrStringB\x02\x18\x01R\x0frollingMaxSurge\x12^\n" +
	"\x15rollingMaxUnavailable\x18\x16 \x01(\v2$.istio.operator.v1alpha1.IntOrStringB\x02\x18\x01R\x15rollingMaxUnavailable\x12=\n" +
	"\rconfigVolumes\x18\x17 \x03(\v2\x17.google.protobuf.StructR\rconfigVolumes\x12K\n" +
	"\x14additionalContainers\x18\x18 \x03(\v2\x17.google.protobuf.StructR\x14additionalContainers\x128\n" +
	"\trunAsRoot\x18\x1a \x01(\v2\x1a.google.protobuf.BoolValueR\trunAsRoot\x12,\n" +
	"\x11injectionTemplate\x18\x1b \x01(\tR\x11injectionTemplate\x12O\n" +
	"\x0eserviceAccount\x18\x1c \x01(\v2'.istio.operator.v1alpha1.ServiceAccountR\x0eserviceAccount\x12\x1e\n" +
	"\n" +
	"ipFamilies\x18\x1d \x03(\tR\n" +
	"ipFamilies\x12&\n" +
	"\x0eipFamilyPolicy\x18\x1e \x01(\tR\x0eipFamilyPolicy\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8b\x03\n" +
	"\x0eGatewaysConfig\x12^\n" +
	"\x13istio_egressgateway\x18\x01 \x01(\v2,.istio.operator.v1alpha1.EgressGatewayConfigR\x13istio-egressgateway\x124\n" +
	"\aenabled\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12a\n" +
	"\x14istio_ingressgateway\x18\x04 \x01(\v2-.istio.operator.v1alpha1.IngressGatewayConfigR\x14istio-ingressgateway\x12@\n" +
	"\x0fsecurityContext\x18\n" +
	" \x01(\v2\x16.google.protobuf.ValueR\x0fsecurityContext\x12>\n" +
	"\x0eseccompProfile\x18\f \x01(\v2\x16.google.protobuf.ValueR\x0eseccompProfile\"\xc7\x12\n" +
	"\fGlobalConfig\x12;\n" +
	"\x04arch\x18\x01 \x01(\v2#.istio.operator.v1alpha1.ArchConfigB\x02\x18\x01R\x04arch\x12 \n" +
	"\vcertSigners\x18D \x03(\tR\vcertSigners\x12F\n" +
	"\x10configValidation\x18\x03 \x01(\v2\x1a.google.protobuf.BoolValueR\x10configValidation\x12M\n" +
	"\x13defaultNodeSelector\x18\x06 \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01R\x13defaultNodeSelector\x12y\n" +
	"\x1adefaultPodDisruptionBudget\x18\a \x01(\v29.istio.operator.v1alpha1.DefaultPodDisruptionBudgetConfigR\x1adefaultPodDisruptionBudget\x12_\n" +
	"\x10defaultResources\x18\t \x01(\v2/.istio.operator.v1alpha1.DefaultResourcesConfigB\x02\x18\x01R\x10defaultResources\x12R\n" +
	"\x12defaultTolerations\x187 \x03(\v2\x1e.k8s.io.api.core.v1.TolerationB\x02\x18\x01R\x12defaultTolerations\x12\x10\n" +
	"\x03hub\x18\f \x01(\tR\x03hub\x12(\n" +
	"\x0fimagePullPolicy\x18\r \x01(\tR\x0fimagePullPolicy\x12*\n" +
	"\x10imagePullSecrets\x18% \x03(\tR\x10imagePullSecrets\x12&\n" +
	"\x0eistioNamespace\x18\x0e \x01(\tR\x0eistioNamespace\x128\n" +
	"\tlogAsJson\x18$ \x01(\v2\x1a.google.protobuf.BoolValueR\tlogAsJson\x12F\n" +
	"\alogging\x18\x11 \x01(\v2,.istio.operator.v1alpha1.GlobalLoggingConfigR\alogging\x12\x16\n" +
	"\x06meshID\x185 \x01(\tR\x06meshID\x12;\n" +
	"\fmeshNetworks\x18\x13 \x01(\v2\x17.google.protobuf.StructR\fmeshNetworks\x12O\n" +
	"\fmultiCluster\x18\x16 \x01(\v2+.istio.operator.v1alpha1.MultiClusterConfigR\fmultiCluster\x12\x18\n" +
	"\anetwork\x18' \x01(\tR\anetwork\x126\n" +
	"\x16podDNSSearchNamespaces\x18+ \x03(\tR\x16podDNSSearchNamespaces\x12^\n" +
	"\x1comitSidecarInjectorConfigMap\x18& \x01(\v2\x1a.google.protobuf.BoolValueR\x1comitSidecarInjectorConfigMap\x12R\n" +
	"\x16operatorManageWebhooks\x18) \x01(\v2\x1a.google.protobuf.BoolValueR\x16operatorManageWebhooks\x120\n" +
	"\x11priorityClassName\x18\x1b \x01(\tB\x02\x18\x01R\x11priorityClassName\x12:\n" +
	"\x05proxy\x18\x1c \x01(\v2$.istio.operator.v1alpha1.ProxyConfigR\x05proxy\x12H\n" +
	"\n" +
	"proxy_init\x18\x1d \x01(\v2(.istio.operator.v1alpha1.ProxyInitConfigR\n" +
	"proxy_init\x124\n" +
	"\x03sds\x18\x1e \x01(\v2\".istio.operator.v1alpha1.SDSConfigR\x03sds\x12(\n" +
	"\x03tag\x18\x1f \x01(\v2\x16.google.protobuf.ValueR\x03tag\x12\x18\n" +
	"\avariant\x18C \x01(\tR\avariant\x12=\n" +
	"\x06tracer\x18! \x01(\v2%.istio.operator.v1alpha1.TracerConfigR\x06tracer\x12.\n" +
	"\x12remotePilotAddress\x180 \x01(\tR\x12remotePilotAddress\x12=\n" +
	"\x06istiod\x186 \x01(\v2%.istio.operator.v1alpha1.IstiodConfigR\x06istiod\x12,\n" +
	"\x11pilotCertProvider\x188 \x01(\tR\x11pilotCertProvider\x12 \n" +
	"\tjwtPolicy\x189 \x01(\tB\x02\x18\x01R\tjwtPolicy\x124\n" +
	"\x03sts\x18: \x01(\v2\".istio.operator.v1alpha1.STSConfigR\x03sts\x12\x1a\n" +
	"\brevision\x18; \x01(\tR\brevision\x12B\n" +
	"\x0emountMtlsCerts\x18< \x01(\v2\x1a.google.protobuf.BoolValueR\x0emountMtlsCerts\x12\x1c\n" +
	"\tcaAddress\x18= \x01(\tR\tcaAddress\x12B\n" +
	"\x0eexternalIstiod\x18> \x01(\v2\x1a.google.protobuf.BoolValueR\x0eexternalIstiod\x12@\n" +
	"\rconfigCluster\x18@ \x01(\v2\x1a.google.protobuf.BoolValueR\rconfigCluster\x12\x16\n" +
	"\x06caName\x18A \x01(\tR\x06caName\x12\x1a\n" +
	"\bplatform\x18E \x01(\tR\bplatform\x12\x1e\n" +
	"\n" +
	"ipFamilies\x18F \x03(\tR\n" +
	"ipFamilies\x12&\n" +
	"\x0eipFamilyPolicy\x18G \x01(\tR\x0eipFamilyPolicy\x12C\n" +
	"\bwaypoint\x18H \x01(\v2'.istio.operator.v1alpha1.WaypointConfigR\bwaypoint\x12(\n" +
	"\x0ftrustBundleName\x18I \x01(\tR\x0ftrustBundleName\"-\n" +
	"\tSTSConfig\x12 \n" +
	"\vservicePort\x18\x01 \x01(\rR\vservicePort\"R\n" +
	"\fIstiodConfig\x12B\n" +
	"\x0eenableAnalysis\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\x0eenableAnalysis\"+\n" +
	"\x13GlobalLoggingConfig\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\"\xb1\x11\n" +
	"\x14IngressGatewayConfig\x12F\n" +
	"\x10autoscaleEnabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\x10autoscaleEnabled\x12\"\n" +
	"\fautoscaleMax\x18\x02 \x01(\rR\fautoscaleMax\x12\"\n" +
	"\fautoscaleMin\x18\x03 \x01(\rR\fautoscaleMin\x12L\n" +
	"\x06memory\x18\x04 \x01(\v20.istio.operator.v1alpha1.TargetUtilizationConfigB\x02\x18\x01R\x06memory\x12F\n" +
	"\x03cpu\x18\x05 \x01(\v20.istio.operator.v1alpha1.TargetUtilizationConfigB\x02\x18\x01R\x03cpu\x12@\n" +
	"\rcustomService\x18\x06 \x01(\v2\x1a.google.protobuf.BoolValueR\rcustomService\x124\n" +
	"\aenabled\x18\n" +
	" \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12)\n" +
	"\x03env\x18\v \x01(\v2\x17.google.protobuf.StructR\x03env\x12Q\n" +
	"\x06labels\x18\x0f \x03(\v29.istio.operator.v1alpha1.IngressGatewayConfig.LabelsEntryR\x06labels\x12&\n" +
	"\x0eloadBalancerIP\x18\x10 \x01(\tR\x0eloadBalancerIP\x12:\n" +
	"\x18loadBalancerSourceRanges\x18\x11 \x03(\tR\x18loadBalancerSourceRanges\x12\x12\n" +
	"\x04name\x18, \x01(\tR\x04name\x12?\n" +
	"\fnodeSelector\x18\x13 \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01R\fnodeSelector\x12C\n" +
	"\x0epodAnnotations\x18\x14 \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01R\x0epodAnnotations\x12{\n" +
	"\x1cpodAntiAffinityLabelSelector\x18\x15 \x03(\v23.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorB\x02\x18\x01R\x1cpodAntiAffinityLabelSelector\x12\x83\x01\n" +
	" podAntiAffinityTermLabelSelector\x18\x16 \x03(\v23.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorB\x02\x18\x01R podAntiAffinityTermLabelSelector\x12:\n" +
	"\x05ports\x18\x17 \x03(\v2$.istio.operator.v1alpha1.PortsConfigR\x05ports\x12&\n" +
	"\freplicaCount\x18\x18 \x01(\rB\x02\x18\x01R\freplicaCount\x129\n" +
	"\tresources\x18\x19 \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01R\tresources\x12K\n" +
	"\rsecretVolumes\x18\x1b \x03(\v2%.istio.operator.v1alpha1.SecretVolumeR\rsecretVolumes\x12G\n" +
	"\x12serviceAnnotations\x18\x1c \x01(\v2\x17.google.protobuf.StructR\x12serviceAnnotations\x12\x12\n" +
	"\x04type\x18\x1d \x01(\tR\x04type\x12R\n" +
	"\x0frollingMaxSurge\x18\x1f \x01(\v2$.istio.operator.v1alpha1.IntOrStringB\x02\x18\x01R\x0frollingMaxSurge\x12^\n" +
	"\x15rollingMaxUnavailable\x18  \x01(\v2$.istio.operator.v1alpha1.IntOrStringB\x02\x18\x01R\x15rollingMaxUnavailable\x124\n" +
	"\x15externalTrafficPolicy\x18\" \x01(\tR\x15externalTrafficPolicy\x12D\n" +
	"\vtolerations\x18# \x03(\v2\x1e.k8s.io.api.core.v1.TolerationB\x02\x18\x01R\vtolerations\x12;\n" +
	"\fingressPorts\x18$ \x03(\v2\x17.google.protobuf.StructR\fingressPorts\x12K\n" +
	"\x14additionalContainers\x18% \x03(\v2\x17.google.protobuf.StructR\x14additionalContainers\x12=\n" +
	"\rconfigVolumes\x18& \x03(\v2\x17.google.protobuf.StructR\rconfigVolumes\x128\n" +
	"\trunAsRoot\x18- \x01(\v2\x1a.google.protobuf.BoolValueR\trunAsRoot\x12,\n" +
	"\x11injectionTemplate\x18. \x01(\tR\x11injectionTemplate\x12O\n" +
	"\x0eserviceAccount\x18/ \x01(\v2'.istio.operator.v1alpha1.ServiceAccountR\x0eserviceAccount\x12\x1e\n" +
	"\n" +
	"ipFamilies\x180 \x03(\tR\n" +
	"ipFamilies\x12&\n" +
	"\x0eipFamilyPolicy\x181 \x01(\tR\x0eipFamilyPolicy\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe8\x01\n" +
	"\x12MultiClusterConfig\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12 \n" +
	"\vclusterName\x18\x02 \x01(\tR\vclusterName\x12.\n" +
	"\x12globalDomainSuffix\x18\x03 \x01(\tR\x12globalDomainSuffix\x12J\n" +
	"\x12includeEnvoyFilter\x18\x04 \x01(\v2\x1a.google.protobuf.BoolValueR\x12includeEnvoyFilter\"\x96\x01\n" +
	"\x1bOutboundTrafficPolicyConfig\x12M\n" +
	"\x04mode\x18\x02 \x01(\x0e29.istio.operator.v1alpha1.OutboundTrafficPolicyConfig.ModeR\x04mode\"(\n" +
	"\x04Mode\x12\r\n" +
	"\tALLOW_ANY\x10\x00\x12\x11\n" +
	"\rREGISTRY_ONLY\x10\x01\"\x98\x13\n" +
	"\vPilotConfig\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12F\n" +
	"\x10autoscaleEnabled\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\x10autoscaleEnabled\x12\"\n" +
	"\fautoscaleMin\x18\x03 \x01(\rR\fautoscaleMin\x12\"\n" +
	"\fautoscaleMax\x18\x04 \x01(\rR\fautoscaleMax\x12E\n" +
	"\x11autoscaleBehavior\x18( \x01(\v2\x17.google.protobuf.StructR\x11autoscaleBehavior\x12&\n" +
	"\freplicaCount\x18\x05 \x01(\rB\x02\x18\x01R\freplicaCount\x12\x14\n" +
	"\x05image\x18\x06 \x01(\tR\x05image\x12$\n" +
	"\rtraceSampling\x18\b \x01(\x01R\rtraceSampling\x12D\n" +
	"\tresources\x18\t \x01(\v2\".istio.operator.v1alpha1.ResourcesB\x02\x18\x01R\tresources\x12F\n" +
	"\x03cpu\x18\v \x01(\v20.istio.operator.v1alpha1.TargetUtilizationConfigB\x02\x18\x01R\x03cpu\x12?\n" +
	"\fnodeSelector\x18\f \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01R\fnodeSelector\x12c\n" +
	"\x1fkeepaliveMaxServerConnectionAge\x18\r \x01(\v2\x19.google.protobuf.DurationR\x1fkeepaliveMaxServerConnectionAge\x12C\n" +
	"\x10deploymentLabels\x18\x0e \x01(\v2\x17.google.protobuf.StructR\x10deploymentLabels\x125\n" +
	"\tpodLabels\x18$ \x01(\v2\x17.google.protobuf.StructR\tpodLabels\x128\n" +
	"\tconfigMap\x18\x12 \x01(\v2\x1a.google.protobuf.BoolValueR\tconfigMap\x12)\n" +
	"\x03env\x18\x15 \x01(\v2\x17.google.protobuf.StructR\x03env\x128\n" +
	"\baffinity\x18\x16 \x01(\v2\x1c.k8s.io.api.core.v1.AffinityR\baffinity\x12R\n" +
	"\x0frollingMaxSurge\x18\x18 \x01(\v2$.istio.operator.v1alpha1.IntOrStringB\x02\x18\x01R\x0frollingMaxSurge\x12^\n" +
	"\x15rollingMaxUnavailable\x18\x19 \x01(\v2$.istio.operator.v1alpha1.IntOrStringB\x02\x18\x01R\x15rollingMaxUnavailable\x12D\n" +
	"\vtolerations\x18\x1a \x03(\v2\x1e.k8s.io.api.core.v1.TolerationB\x02\x18\x01R\vtolerations\x12C\n" +
	"\x0epodAnnotations\x18\x1e \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01R\x0epodAnnotations\x12G\n" +
	"\x12serviceAnnotations\x18% \x01(\v2\x17.google.protobuf.StructR\x12serviceAnnotations\x12U\n" +
	"\x19serviceAccountAnnotations\x188 \x01(\v2\x17.google.protobuf.StructR\x19serviceAccountAnnotations\x128\n" +
	"\x17jwksResolverExtraRootCA\x18  \x01(\tR\x17jwksResolverExtraRootCA\x12\x10\n" +
	"\x03hub\x18\" \x01(\tR\x03hub\x12(\n" +
	"\x03tag\x18# \x01(\v2\x16.google.protobuf.ValueR\x03tag\x12\x18\n" +
	"\avariant\x18' \x01(\tR\avariant\x12J\n" +
	"\x0eseccompProfile\x18& \x01(\v2\".k8s.io.api.core.v1.SeccompProfileR\x0eseccompProfile\x12j\n" +
	"\x19topologySpreadConstraints\x18) \x03(\v2,.k8s.io.api.core.v1.TopologySpreadConstraintR\x19topologySpreadConstraints\x12G\n" +
	"\x12extraContainerArgs\x18* \x03(\v2\x17.google.protobuf.StructR\x12extraContainerArgs\x12C\n" +
	"\fvolumeMounts\x181 \x03(\v2\x1f.k8s.io.api.core.v1.VolumeMountR\fvolumeMounts\x124\n" +
	"\avolumes\x183 \x03(\v2\x1a.k8s.io.api.core.v1.VolumeR\avolumes\x12\x1e\n" +
	"\n" +
	"ipFamilies\x184 \x03(\tR\n" +
	"ipFamilies\x12&\n" +
	"\x0eipFamilyPolicy\x185 \x01(\tR\x0eipFamilyPolicy\x12L\n" +
	"\x06memory\x186 \x01(\v20.istio.operator.v1alpha1.TargetUtilizationConfigB\x02\x18\x01R\x06memory\x129\n" +
	"\x03cni\x187 \x01(\v2'.istio.operator.v1alpha1.CNIUsageConfigR\x03cni\x12I\n" +
	"\x05taint\x189 \x01(\v23.istio.operator.v1alpha1.PilotTaintControllerConfigR\x05taint\x128\n" +
	"\x17trustedZtunnelNamespace\x18; \x01(\tR\x17trustedZtunnelNamespace\x12O\n" +
	"\fistiodRemote\x18= \x01(\v2+.istio.operator.v1alpha1.IstiodRemoteConfigR\fistiodRemote\x127\n" +
	"\n" +
	"envVarFrom\x18> \x03(\v2\x17.google.protobuf.StructR\n" +
	"envVarFrom\"T\n" +
	"\x1aPilotTaintControllerConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"\xc6\x01\n" +
	"\x12PilotIngressConfig\x12&\n" +
	"\x0eingressService\x18\x01 \x01(\tR\x0eingressService\x12d\n" +
	"\x15ingressControllerMode\x18\x02 \x01(\x0e2..istio.operator.v1alpha1.ingressControllerModeR\x15ingressControllerMode\x12\"\n" +
	"\fingressClass\x18\x03 \x01(\tR\fingressClass\"I\n" +
	"\x11PilotPolicyConfig\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\"\x83\x01\n" +
	"\x0fTelemetryConfig\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12:\n" +
	"\x02v2\x18\x03 \x01(\v2*.istio.operator.v1alpha1.TelemetryV2ConfigR\x02v2\"\xf8\x01\n" +
	"\x11TelemetryV2Config\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12T\n" +
	"\n" +
	"prometheus\x18\x02 \x01(\v24.istio.operator.v1alpha1.TelemetryV2PrometheusConfigR\n" +
	"prometheus\x12W\n" +
	"\vstackdriver\x18\x03 \x01(\v25.istio.operator.v1alpha1.TelemetryV2StackDriverConfigR\vstackdriver\"S\n" +
	"\x1bTelemetryV2PrometheusConfig\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\"T\n" +
	"\x1cTelemetryV2StackDriverConfig\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\"\x8d\x01\n" +
	"\vPortsConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1a\n" +
	"\bnodePort\x18\x03 \x01(\x05R\bnodePort\x12\x1e\n" +
	"\n" +
	"targetPort\x18\x04 \x01(\x05R\n" +
	"targetPort\x12\x1a\n" +
	"\bprotocol\x18\x05 \x01(\tR\bprotocol\"\xca\t\n" +
	"\vProxyConfig\x12\x1e\n" +
	"\n" +
	"autoInject\x18\x04 \x01(\tR\n" +
	"autoInject\x12$\n" +
	"\rclusterDomain\x18\x05 \x01(\tR\rclusterDomain\x12,\n" +
	"\x11componentLogLevel\x18\x06 \x01(\tR\x11componentLogLevel\x12F\n" +
	"\x0eenableCoreDump\x18\t \x01(\v2\x1a.google.protobuf.BoolValueB\x02\x18\x01R\x0eenableCoreDump\x120\n" +
	"\x13excludeInboundPorts\x18\f \x01(\tR\x13excludeInboundPorts\x12(\n" +
	"\x0fexcludeIPRanges\x18\r \x01(\tR\x0fexcludeIPRanges\x12\x14\n" +
	"\x05image\x18\x0e \x01(\tR\x05image\x12(\n" +
	"\x0fincludeIPRanges\x18\x10 \x01(\tR\x0fincludeIPRanges\x12\x1a\n" +
	"\blogLevel\x18\x12 \x01(\tR\blogLevel\x12&\n" +
	"\x0eoutlierLogPath\x18* \x01(\tR\x0eoutlierLogPath\x12:\n" +
	"\n" +
	"privileged\x18\x13 \x01(\v2\x1a.google.protobuf.BoolValueR\n" +
	"privileged\x12B\n" +
	"\x1creadinessInitialDelaySeconds\x18\x14 \x01(\rR\x1creadinessInitialDelaySeconds\x126\n" +
	"\x16readinessPeriodSeconds\x18\x15 \x01(\rR\x16readinessPeriodSeconds\x12<\n" +
	"\x19readinessFailureThreshold\x18\x16 \x01(\rR\x19readinessFailureThreshold\x12I\n" +
	"\fstartupProbe\x18) \x01(\v2%.istio.operator.v1alpha1.StartupProbeR\fstartupProbe\x12\x1e\n" +
	"\n" +
	"statusPort\x18\x17 \x01(\rR\n" +
	"statusPort\x12D\n" +
	"\tresources\x18\x18 \x01(\v2\".istio.operator.v1alpha1.ResourcesB\x02\x18\x01R\tresources\x127\n" +
	"\x06tracer\x18\x19 \x01(\x0e2\x1f.istio.operator.v1alpha1.tracerR\x06tracer\x122\n" +
	"\x14excludeOutboundPorts\x18\x1c \x01(\tR\x14excludeOutboundPorts\x12;\n" +
	"\tlifecycle\x18$ \x01(\v2\x1d.k8s.io.api.core.v1.LifecycleR\tlifecycle\x12h\n" +
	"\x1fholdApplicationUntilProxyStarts\x18% \x01(\v2\x1a.google.protobuf.BoolValueB\x02\x18\x01R\x1fholdApplicationUntilProxyStarts\x120\n" +
	"\x13includeInboundPorts\x18& \x01(\tR\x13includeInboundPorts\x122\n" +
	"\x14includeOutboundPorts\x18' \x01(\tR\x14includeOutboundPorts\"p\n" +
	"\fStartupProbe\x124\n" +
	"\aenabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\x12*\n" +
	"\x10failureThreshold\x18\x02 \x01(\rR\x10failureThreshold\"m\n" +
	"\x0fProxyInitConfig\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12D\n" +
	"\tresources\x18\x05 \x01(\v2\".istio.operator.v1alpha1.ResourcesB\x02\x18\x01R\tresources\"C\n" +
	"\x17ResourcesRequestsConfig\x12\x10\n" +
	"\x03cpu\x18\x01 \x01(\tR\x03cpu\x12\x16\n" +
	"\x06memory\x18\x02 \x01(\tR\x06memory\">\n" +
	"\tSDSConfig\x121\n" +
	"\x05token\x18\x05 \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01R\x05token\"`\n" +
	"\fSecretVolume\x12\x1c\n" +
	"\tmountPath\x18\x01 \x01(\tR\tmountPath\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"secretName\x18\x03 \x01(\tR\n" +
	"secretName\"\x91\x05\n" +
	"\x15SidecarInjectorConfig\x12X\n" +
	"\x19enableNamespacesByDefault\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\x19enableNamespacesByDefault\x12.\n" +
	"\x12reinvocationPolicy\x18\x03 \x01(\tR\x12reinvocationPolicy\x12e\n" +
	"\x13neverInjectSelector\x18\v \x03(\v23.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorR\x13neverInjectSelector\x12g\n" +
	"\x14alwaysInjectSelector\x18\f \x03(\v23.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorR\x14alwaysInjectSelector\x12L\n" +
	"\x13rewriteAppHTTPProbe\x18\x10 \x01(\v2\x1a.google.protobuf.BoolValueR\x13rewriteAppHTTPProbe\x12I\n" +
	"\x13injectedAnnotations\x18\x13 \x01(\v2\x17.google.protobuf.StructR\x13injectedAnnotations\x12\"\n" +
	"\finjectionURL\x18\x16 \x01(\tR\finjectionURL\x125\n" +
	"\ttemplates\x18\x17 \x01(\v2\x17.google.protobuf.StructR\ttemplates\x12*\n" +
	"\x10defaultTemplates\x18\x18 \x03(\tR\x10defaultTemplates\"\xbd\x02\n" +
	"\fTracerConfig\x12F\n" +
	"\adatadog\x18\x01 \x01(\v2,.istio.operator.v1alpha1.TracerDatadogConfigR\adatadog\x12L\n" +
	"\tlightstep\x18\x02 \x01(\v2..istio.operator.v1alpha1.TracerLightStepConfigR\tlightstep\x12C\n" +
	"\x06zipkin\x18\x03 \x01(\v2+.istio.operator.v1alpha1.TracerZipkinConfigR\x06zipkin\x12R\n" +
	"\vstackdriver\x18\x04 \x01(\v20.istio.operator.v1alpha1.TracerStackdriverConfigR\vstackdriver\"/\n" +
	"\x13TracerDatadogConfig\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"S\n" +
	"\x15TracerLightStepConfig\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12 \n" +
	"\vaccessToken\x18\x02 \x01(\tR\vaccessToken\".\n" +
	"\x12TracerZipkinConfig\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"\xf5\x01\n" +
	"\x17TracerStackdriverConfig\x120\n" +
	"\x05debug\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\x05debug\x124\n" +
	"\x15maxNumberOfAttributes\x18\x02 \x01(\rR\x15maxNumberOfAttributes\x126\n" +
	"\x16maxNumberOfAnnotations\x18\x03 \x01(\rR\x16maxNumberOfAnnotations\x12:\n" +
	"\x18maxNumberOfMessageEvents\x18\x04 \x01(\rR\x18maxNumberOfMessageEvents\"\xea\x02\n" +
	"\n" +
	"BaseConfig\x12J\n" +
	"\x12enableCRDTemplates\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\x12enableCRDTemplates\x12\"\n" +
	"\fexcludedCRDs\x18\x06 \x03(\tR\fexcludedCRDs\x12$\n" +
	"\rvalidationURL\x18\x02 \x01(\tR\rvalidationURL\x12P\n" +
	"\x15enableIstioConfigCRDs\x18\x03 \x01(\v2\x1a.google.protobuf.BoolValueR\x15enableIstioConfigCRDs\x12D\n" +
	"\x0fvalidateGateway\x18\x04 \x01(\v2\x1a.google.protobuf.BoolValueR\x0fvalidateGateway\x12.\n" +
	"\x12validationCABundle\x18\x05 \x01(\tR\x12validationCABundle\"\xc2\x01\n" +
	"\x12IstiodRemoteConfig\x12\"\n" +
	"\finjectionURL\x18\x01 \x01(\tR\finjectionURL\x12$\n" +
	"\rinjectionPath\x18\x02 \x01(\tR\rinjectionPath\x12,\n" +
	"\x11injectionCABundle\x18\x03 \x01(\tR\x11injectionCABundle\x124\n" +
	"\aenabled\x18\x05 \x01(\v2\x1a.google.protobuf.BoolValueR\aenabled\"\xd7\b\n" +
	"\x06Values\x124\n" +
	"\x03cni\x18\x02 \x01(\v2\".istio.operator.v1alpha1.CNIConfigR\x03cni\x12C\n" +
	"\bgateways\x18\x05 \x01(\v2'.istio.operator.v1alpha1.GatewaysConfigR\bgateways\x12=\n" +
	"\x06global\x18\x06 \x01(\v2%.istio.operator.v1alpha1.GlobalConfigR\x06global\x12:\n" +
	"\x05pilot\x18\n" +
	" \x01(\v2$.istio.operator.v1alpha1.PilotConfigR\x05pilot\x120\n" +
	"\aztunnel\x18) \x01(\v2\x16.google.protobuf.ValueR\aztunnel\x12F\n" +
	"\ttelemetry\x18\x17 \x01(\v2(.istio.operator.v1alpha1.TelemetryConfigR\ttelemetry\x12f\n" +
	"\x16sidecarInjectorWebhook\x18\r \x01(\v2..istio.operator.v1alpha1.SidecarInjectorConfigR\x16sidecarInjectorWebhook\x12H\n" +
	"\tistio_cni\x18\x13 \x01(\v2'.istio.operator.v1alpha1.CNIUsageConfigB\x02\x18\x01R\bistioCni\x12\x1a\n" +
	"\brevision\x18\x15 \x01(\tR\brevision\x12\x1c\n" +
	"\townerName\x18\x16 \x01(\tR\townerName\x126\n" +
	"\n" +
	"meshConfig\x18$ \x01(\v2\x16.google.protobuf.ValueR\n" +
	"meshConfig\x127\n" +
	"\x04base\x18% \x01(\v2#.istio.operator.v1alpha1.BaseConfigR\x04base\x12S\n" +
	"\fistiodRemote\x18& \x01(\v2+.istio.operator.v1alpha1.IstiodRemoteConfigB\x02\x18\x01R\fistiodRemote\x12\"\n" +
	"\frevisionTags\x18' \x03(\tR\frevisionTags\x12(\n" +
	"\x0fdefaultRevision\x18( \x01(\tR\x0fdefaultRevision\x12\x18\n" +
	"\aprofile\x18* \x01(\tR\aprofile\x122\n" +
	"\x14compatibilityVersion\x18+ \x01(\tR\x14compatibilityVersion\x12O\n" +
	"\fexperimental\x18, \x01(\v2+.istio.operator.v1alpha1.ExperimentalConfigR\fexperimental\x12>\n" +
	"\x0egatewayClasses\x18- \x01(\v2\x16.google.protobuf.ValueR\x0egatewayClasses\"h\n" +
	"\x12ExperimentalConfig\x12R\n" +
	"\x16stableValidationPolicy\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\x16stableValidationPolicy\"\x8c\x01\n" +
	"\vIntOrString\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x03R\x04type\x123\n" +
	"\x06intVal\x18\x02 \x01(\v2\x1b.google.protobuf.Int32ValueR\x06intVal\x124\n" +
	"\x06strVal\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\x06strVal\"\xfe\x02\n" +
	"\x0eWaypointConfig\x12@\n" +
	"\tresources\x18\x01 \x01(\v2\".istio.operator.v1alpha1.ResourcesR\tresources\x128\n" +
	"\baffinity\x18\x02 \x01(\v2\x1c.k8s.io.api.core.v1.AffinityR\baffinity\x12j\n" +
	"\x19topologySpreadConstraints\x18\x03 \x03(\v2,.k8s.io.api.core.v1.TopologySpreadConstraintR\x19topologySpreadConstraints\x12D\n" +
	"\fnodeSelector\x18\x04 \x01(\v2 .k8s.io.api.core.v1.NodeSelectorR\fnodeSelector\x12>\n" +
	"\n" +
	"toleration\x18\x05 \x03(\v2\x1e.k8s.io.api.core.v1.TolerationR\n" +
	"toleration*J\n" +
	"\x15ingressControllerMode\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\v\n" +
	"\aDEFAULT\x10\x01\x12\n" +
	"\n" +
	"\x06STRICT\x10\x02\x12\a\n" +
	"\x03OFF\x10\x03*`\n" +
	"\x06tracer\x12\n" +
	"\n" +
	"\x06zipkin\x10\x00\x12\r\n" +
	"\tlightstep\x10\x01\x12\v\n" +
	"\adatadog\x10\x02\x12\x0f\n" +
	"\vstackdriver\x10\x03\x12\x13\n" +
	"\x0fopenCensusAgent\x10\x04\x12\b\n" +
				"\x04none\x10\x05B\"Z istio.io/istio/operator/pkg/apisb\x06proto3" // CNIGlobalConfig is a subset of the Global Configuration used in the Istio CNI chart.
type CNIGlobalConfig struct { // Default k8s resources settings for all Istio control plane components.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	//
	// Deprecated: Marked as deprecated in pkg/apis/values_types.proto.
	DefaultResources *k8sv1.ResourceRequirements `json:"defaultResources,omitempty"`

	// Specifies the docker hub for Istio images.
	Hub *string `json:"hub,omitempty"`
	// Specifies the image pull policy for the Istio images. one of Always, Never, IfNotPresent.
	// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.
	//
	// More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
	// +kubebuilder:validation:Enum=Always;Never;IfNotPresent
	ImagePullPolicy *k8sv1.PullPolicy `json:"imagePullPolicy,omitempty"`
	// ImagePullSecrets for the control plane ServiceAccount, list of secrets in the same namespace
	// to use for pulling any images in pods that reference this ServiceAccount.
	// Must be set for any cluster configured with private docker registry.
	ImagePullSecrets []string `json:"imagePullSecrets,omitempty"`

	// Specifies whether istio components should output logs in json format by adding --log_as_json argument to each container.
	LogAsJson *bool `json:"logAsJson,omitempty"`
	// Specifies the global logging level settings for the Istio control plane components.
	Logging *GlobalLoggingConfig `json:"logging,omitempty"`

	// Specifies the tag for the Istio docker images.
	Tag *string `json:"tag,omitempty"`
	// The variant of the Istio container images to use. Options are "debug" or "distroless". Unset will use the default for the given version.
	Variant *string `json:"variant,omitempty"`

	// Platform in which Istio is deployed. Possible values are: "openshift" and "gcp"
	// An empty value means it is a vanilla Kubernetes distribution, therefore no special
	// treatment will be considered.
	Platform *string `json:"platform,omitempty"`
}

// Resource describes the source of configuration
// +kubebuilder:validation:Enum=SERVICE_REGISTRY
type Resource string

const (
	// Set to only receive service entries that are generated by the platform.
	// These auto generated service entries are combination of services and endpoints
	// that are generated by a specific platform e.g. k8
	ResourceServiceRegistry Resource = "SERVICE_REGISTRY"
)

// +kubebuilder:validation:Enum=UNSPECIFIED;OFF;DEFAULT;STRICT
type MeshConfigIngressControllerMode string

const (
	// Unspecified Istio ingress controller.
	MeshConfigIngressControllerModeUnspecified MeshConfigIngressControllerMode = "UNSPECIFIED"
	// Disables Istio ingress controller.
	MeshConfigIngressControllerModeOff MeshConfigIngressControllerMode = "OFF"
	// Istio ingress controller will act on ingress resources that do not
	// contain any annotation or whose annotations match the value
	// specified in the ingressClass parameter described earlier. Use this
	// mode if Istio ingress controller will be the default ingress
	// controller for the entire Kubernetes cluster.
	MeshConfigIngressControllerModeDefault MeshConfigIngressControllerMode = "DEFAULT"
	// Istio ingress controller will only act on ingress resources whose
	// annotations match the value specified in the ingressClass parameter
	// described earlier. Use this mode if Istio ingress controller will be
	// a secondary ingress controller (e.g., in addition to a
	// cloud-provided ingress controller).
	MeshConfigIngressControllerModeStrict MeshConfigIngressControllerMode = "STRICT"
)

// +hidefromdoc
// +kubebuilder:validation:Enum=NONE;MUTUAL_TLS
type MeshConfigAuthPolicy string

const (
	MeshConfigAuthPolicyNone      MeshConfigAuthPolicy = "NONE"
	MeshConfigAuthPolicyMutualTls MeshConfigAuthPolicy = "MUTUAL_TLS"
)

// +kubebuilder:validation:Enum=TEXT;JSON
type MeshConfigAccessLogEncoding string

const (
	// text encoding for the proxy access log
	MeshConfigAccessLogEncodingText MeshConfigAccessLogEncoding = "TEXT"
	// json encoding for the proxy access log
	MeshConfigAccessLogEncodingJson MeshConfigAccessLogEncoding = "JSON"
)

// Default Policy for upgrading http1.1 connections to http2.
// +kubebuilder:validation:Enum=DO_NOT_UPGRADE;UPGRADE
type MeshConfigH2UpgradePolicy string

const (
	// Do not upgrade connections to http2.
	MeshConfigH2UpgradePolicyDoNotUpgrade MeshConfigH2UpgradePolicy = "DO_NOT_UPGRADE"
	// Upgrade the connections to http2.
	MeshConfigH2UpgradePolicyUpgrade MeshConfigH2UpgradePolicy = "UPGRADE"
)

// +kubebuilder:validation:Enum=REGISTRY_ONLY;ALLOW_ANY
type MeshConfigOutboundTrafficPolicyMode string

const (
	// In `REGISTRY_ONLY` mode, unknown outbound traffic will be dropped.
	// Traffic destinations must be explicitly declared into the service registry through `ServiceEntry` configurations.
	//
	// Note: Istio [does not offer an outbound traffic security policy](https://istio.io/latest/docs/ops/best-practices/security/#understand-traffic-capture-limitations).
	// This option does not act as one, or as any form of an outbound firewall.
	// Instead, this option exists primarily to offer users a way to detect missing `ServiceEntry` configurations by explicitly failing.
	MeshConfigOutboundTrafficPolicyModeRegistryOnly MeshConfigOutboundTrafficPolicyMode = "REGISTRY_ONLY"
	// In `ALLOW_ANY` mode, any traffic to unknown destinations will be allowed.
	// Unknown destination traffic will have limited functionality, however, such as reduced observability.
	// This mode allows users that do not have all possible egress destinations registered through `ServiceEntry` configurations to still connect
	// to arbitrary destinations.
	MeshConfigOutboundTrafficPolicyModeAllowAny MeshConfigOutboundTrafficPolicyMode = "ALLOW_ANY"
)

// +kubebuilder:validation:Enum=PASSTHROUGH;LOCALHOST
type MeshConfigInboundTrafficPolicyMode string

const (
	// inbound traffic will be passed through to the destination listening
	// on Pod IP. This matches the behavior without Istio enabled at all
	// allowing proxy to be transparent.
	MeshConfigInboundTrafficPolicyModePassthrough MeshConfigInboundTrafficPolicyMode = "PASSTHROUGH"
	// inbound traffic will be sent to the destinations listening on localhost.
	MeshConfigInboundTrafficPolicyModeLocalhost MeshConfigInboundTrafficPolicyMode = "LOCALHOST"
)

// TraceContext selects the context propagation headers used for
// distributed tracing.
// +kubebuilder:validation:Enum=UNSPECIFIED;W3C_TRACE_CONTEXT;GRPC_BIN;CLOUD_TRACE_CONTEXT;B3
type MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContext string

const (
	// +hidefromdoc
	// Unspecified context. Should not be used for now, but added to reserve
	// the 0 enum value if TraceContext is used outside of a repeated field.
	MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContextUnspecified MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContext = "UNSPECIFIED"
	// Use W3C Trace Context propagation using the `traceparent` HTTP header.
	// See the
	// [Trace Context documentation](https://www.w3.org/TR/trace-context/) for details.
	MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContextW3cTraceContext MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContext = "W3C_TRACE_CONTEXT"
	// Use gRPC binary context propagation using the `grpc-trace-bin` http header.
	MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContextGrpcBin MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContext = "GRPC_BIN"
	// Use Cloud Trace context propagation using the
	// `X-Cloud-Trace-Context` http header.
	MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContextCloudTraceContext MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContext = "CLOUD_TRACE_CONTEXT"
	// Use multi-header B3 context propagation using the `X-B3-TraceId`,
	// `X-B3-SpanId`, and `X-B3-Sampled` HTTP headers. See
	// [B3 header propagation README](https://github.com/openzipkin/b3-propagation)
	// for details.
	MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContextB3 MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContext = "B3"
)

// +kubebuilder:validation:Enum=DEFAULT;NONE;BASE;MERGE_SLASHES;DECODE_AND_MERGE_SLASHES
type MeshConfigProxyPathNormalizationNormalizationType string

const (
	// Apply default normalizations. Currently, this is BASE.
	MeshConfigProxyPathNormalizationNormalizationTypeDefault MeshConfigProxyPathNormalizationNormalizationType = "DEFAULT"
	// No normalization, paths are used as is.
	MeshConfigProxyPathNormalizationNormalizationTypeNone MeshConfigProxyPathNormalizationNormalizationType = "NONE"
	// Normalize according to [RFC 3986](https://tools.ietf.org/html/rfc3986).
	// For Envoy proxies, this is the [`normalize_path`](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto.html) option.
	// For example, `/a/../b` normalizes to `/b`.
	MeshConfigProxyPathNormalizationNormalizationTypeBase MeshConfigProxyPathNormalizationNormalizationType = "BASE"
	// In addition to the `BASE` normalization, consecutive slashes are also merged.
	// For example, `/a//b` normalizes to `a/b`.
	MeshConfigProxyPathNormalizationNormalizationTypeMergeSlashes MeshConfigProxyPathNormalizationNormalizationType = "MERGE_SLASHES"
	// In addition to normalization in `MERGE_SLASHES`, slash characters are UTF-8 decoded (case insensitive) prior to merging.
	// This means `%2F`, `%2f`, `%5C`, and `%5c` sequences in the request path will be rewritten to `/` or `\`.
	// For example, `/a%2f/b` normalizes to `a/b`.
	MeshConfigProxyPathNormalizationNormalizationTypeDecodeAndMergeSlashes MeshConfigProxyPathNormalizationNormalizationType = "DECODE_AND_MERGE_SLASHES"
)

// TLS protocol versions.
// +kubebuilder:validation:Enum=TLS_AUTO;TLSV1_2;TLSV1_3
type MeshConfigTLSConfigTLSProtocol string

const (
	// Automatically choose the optimal TLS version.
	MeshConfigTLSConfigTLSProtocolTlsAuto MeshConfigTLSConfigTLSProtocol = "TLS_AUTO"
	// TLS version 1.2
	MeshConfigTLSConfigTLSProtocolTlsv12 MeshConfigTLSConfigTLSProtocol = "TLSV1_2"
	// TLS version 1.3
	MeshConfigTLSConfigTLSProtocolTlsv13 MeshConfigTLSConfigTLSProtocol = "TLSV1_3"
)

// MeshConfig defines mesh-wide settings for the Istio service mesh.
type MeshConfig struct {
	// Port on which Envoy should listen for all outbound traffic to other services.
	// Default port is 15001.
	ProxyListenPort *int32 `json:"proxyListenPort,omitempty"`
	// Port on which Envoy should listen for all inbound traffic to the pod/vm will be captured to.
	// Default port is 15006.
	ProxyInboundListenPort *int32 `json:"proxyInboundListenPort,omitempty"`
	// Port on which Envoy should listen for HTTP PROXY requests if set.
	ProxyHttpPort *int32 `json:"proxyHttpPort,omitempty"`
	// Connection timeout used by Envoy. (MUST be >=1ms)
	// Default timeout is 10s.
	ConnectTimeout *metav1.Duration `json:"connectTimeout,omitempty"`
	// +hidefromdoc
	// Automatic protocol detection uses a set of heuristics to
	// determine whether the connection is using TLS or not (on the
	// server side), as well as the application protocol being used
	// (e.g., http vs tcp). These heuristics rely on the client sending
	// the first bits of data. For server first protocols like MySQL,
	// MongoDB, etc. Envoy will timeout on the protocol detection after
	// the specified period, defaulting to non mTLS plain TCP
	// traffic. Set this field to tweak the period that Envoy will wait
	// for the client to send the first bits of data. (MUST be >=1ms or
	// 0s to disable). Default detection timeout is 0s (no timeout).
	//
	// Setting a timeout is not recommended nor safe. Even high timeouts (>5s) will be hit
	// occasionally, and when they occur the result is typically broken traffic that may not
	// recover on its own. Exceptionally high values might solve this, but injecting 60s delays
	// onto new connections is generally not tenable anyways.
	ProtocolDetectionTimeout *metav1.Duration `json:"protocolDetectionTimeout,omitempty"`
	// If set then set `SO_KEEPALIVE` on the socket to enable TCP Keepalives.
	TcpKeepalive *ConnectionPoolSettingsTCPSettingsTcpKeepalive `json:"tcpKeepalive,omitempty"`
	// Class of ingress resources to be processed by Istio ingress
	// controller. This corresponds to the value of
	// `kubernetes.io/ingress.class` annotation.
	IngressClass *string `json:"ingressClass,omitempty"`
	// Name of the Kubernetes service used for the istio ingress controller.
	// If no ingress controller is specified, the default value `istio-ingressgateway` is used.
	IngressService *string `json:"ingressService,omitempty"`
	// Defines whether to use Istio ingress controller for annotated or all ingress resources.
	// Default mode is `STRICT`.
	IngressControllerMode MeshConfigIngressControllerMode `json:"ingressControllerMode,omitempty"`
	// Defines which gateway deployment to use as the Ingress controller. This field corresponds to
	// the Gateway.selector field, and will be set as `istio: INGRESS_SELECTOR`.
	// By default, `ingressgateway` is used, which will select the default IngressGateway as it has the
	// `istio: ingressgateway` labels.
	// It is recommended that this is the same value as ingressService.
	IngressSelector *string `json:"ingressSelector,omitempty"`
	// Flag to control generation of trace spans and request IDs.
	// Requires a trace span collector defined in the proxy configuration.
	EnableTracing *bool `json:"enableTracing,omitempty"`
	// File address for the proxy access log (e.g. /dev/stdout).
	// Empty value disables access logging.
	AccessLogFile *string `json:"accessLogFile,omitempty"`
	// Format for the proxy access log
	// Empty value results in proxy's default access log format
	AccessLogFormat *string `json:"accessLogFormat,omitempty"`
	// Encoding for the proxy access log (`TEXT` or `JSON`).
	// Default value is `TEXT`.
	AccessLogEncoding MeshConfigAccessLogEncoding `json:"accessLogEncoding,omitempty"`
	// This flag enables Envoy's gRPC Access Log Service.
	// See [Access Log Service](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/access_loggers/grpc/v3/als.proto)
	// for details about Envoy's gRPC Access Log Service API.
	// Default value is `false`.
	EnableEnvoyAccessLogService *bool `json:"enableEnvoyAccessLogService,omitempty"`
	// This flag disables Envoy Listener logs.
	// See [Listener Access Log](https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/listener/v3/listener.proto#envoy-v3-api-field-config-listener-v3-listener-access-log)
	// Istio Enables Envoy's listener access logs on "NoRoute" response flag.
	// Default value is `false`.
	DisableEnvoyListenerLog *bool `json:"disableEnvoyListenerLog,omitempty"`
	// Default proxy config used by gateway and sidecars.
	// In case of Kubernetes, the proxy config is applied once during the injection process,
	// and remain constant for the duration of the pod. The rest of the mesh config can be changed
	// at runtime and config gets distributed dynamically.
	// On Kubernetes, this can be overridden on individual pods with the `proxy.istio.io/config` annotation.
	DefaultConfig *MeshConfigProxyConfig `json:"defaultConfig,omitempty"`
	// Set the default behavior of the sidecar for handling outbound
	// traffic from the application.
	//
	// Can be overridden at a Sidecar level by setting the `OutboundTrafficPolicy` in the
	// [Sidecar API](https://istio.io/docs/reference/config/networking/sidecar/#OutboundTrafficPolicy).
	//
	// Default mode is `ALLOW_ANY`, which means outbound traffic to unknown destinations will be allowed.
	OutboundTrafficPolicy *MeshConfigOutboundTrafficPolicy `json:"outboundTrafficPolicy,omitempty"`
	// Set the default behavior of the sidecar for handling inbound
	// traffic to the application.  If your application listens on
	// localhost, you will need to set this to `LOCALHOST`.
	InboundTrafficPolicy *MeshConfigInboundTrafficPolicy `json:"inboundTrafficPolicy,omitempty"`
	// ConfigSource describes a source of configuration data for networking
	// rules, and other Istio configuration artifacts. Multiple data sources
	// can be configured for a single control plane.
	ConfigSources []*ConfigSource `json:"configSources,omitempty"`
	// This flag is used to enable mutual `TLS` automatically for service to service communication
	// within the mesh, default true.
	// If set to true, and a given service does not have a corresponding `DestinationRule` configured,
	// or its `DestinationRule` does not have ClientTLSSettings specified, Istio configures client side
	// TLS configuration appropriately. More specifically,
	// If the upstream authentication policy is in `STRICT` mode, use Istio provisioned certificate
	// for mutual `TLS` to connect to upstream.
	// If upstream service is in plain text mode, use plain text.
	// If the upstream authentication policy is in PERMISSIVE mode, Istio configures clients to use
	// mutual `TLS` when server sides are capable of accepting mutual `TLS` traffic.
	// If service `DestinationRule` exists and has `ClientTLSSettings` specified, that is always used instead.
	EnableAutoMtls *bool `json:"enableAutoMtls,omitempty"`
	// The trust domain corresponds to the trust root of a system.
	// Refer to [SPIFFE-ID](https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain)
	TrustDomain *string `json:"trustDomain,omitempty"`
	// The trust domain aliases represent the aliases of `trustDomain`.
	// For example, if we have
	// ```yaml
	// trustDomain: td1
	// trustDomainAliases: ["td2", "td3"]
	// ```
	// Any service with the identity `td1/ns/foo/sa/a-service-account`, `td2/ns/foo/sa/a-service-account`,
	// or `td3/ns/foo/sa/a-service-account` will be treated the same in the Istio mesh.
	TrustDomainAliases []string `json:"trustDomainAliases,omitempty"`
	// The extra root certificates for workload-to-workload communication.
	// The plugin certificates (the 'cacerts' secret) or self-signed certificates (the 'istio-ca-secret' secret)
	// are automatically added by Istiod.
	// The CA certificate that signs the workload certificates is automatically added by Istio Agent.
	CaCertificates []*MeshConfigCertificateData `json:"caCertificates,omitempty"`
	// The default value for the ServiceEntry.exportTo field and services
	// imported through container registry integrations, e.g. this applies to
	// Kubernetes Service resources. The value is a list of namespace names and
	// reserved namespace aliases. The allowed namespace aliases are:
	// ```
	// * - All Namespaces
	// . - Current Namespace
	// ~ - No Namespace
	// ```
	// If not set the system will use "*" as the default value which implies that
	// services are exported to all namespaces.
	//
	// `All namespaces` is a reasonable default for implementations that don't
	// need to restrict access or visibility of services across namespace
	// boundaries. If that requirement is present it is generally good practice to
	// make the default `Current namespace` so that services are only visible
	// within their own namespaces by default. Operators can then expand the
	// visibility of services to other namespaces as needed. Use of `No Namespace`
	// is expected to be rare but can have utility for deployments where
	// dependency management needs to be precise even within the scope of a single
	// namespace.
	//
	// For further discussion see the reference documentation for `ServiceEntry`,
	// `Sidecar`, and `Gateway`.
	DefaultServiceExportTo []string `json:"defaultServiceExportTo,omitempty"`
	// The default value for the VirtualService.exportTo field. Has the same
	// syntax as `defaultServiceExportTo`.
	//
	// If not set the system will use "*" as the default value which implies that
	// virtual services are exported to all namespaces
	DefaultVirtualServiceExportTo []string `json:"defaultVirtualServiceExportTo,omitempty"`
	// The default value for the `DestinationRule.exportTo` field. Has the same
	// syntax as `defaultServiceExportTo`.
	//
	// If not set the system will use "*" as the default value which implies that
	// destination rules are exported to all namespaces
	DefaultDestinationRuleExportTo []string `json:"defaultDestinationRuleExportTo,omitempty"`
	// The namespace to treat as the administrative root namespace for
	// Istio configuration. When processing a leaf namespace Istio will search for
	// declarations in that namespace first and if none are found it will
	// search in the root namespace. Any matching declaration found in the root
	// namespace is processed as if it were declared in the leaf namespace.
	//
	// The precise semantics of this processing are documented on each resource
	// type.
	RootNamespace *string `json:"rootNamespace,omitempty"`
	// Locality based load balancing distribution or failover settings.
	// If unspecified, locality based load balancing will be enabled by default.
	// However, this requires outlierDetection to actually take effect for a particular
	// service, see https://istio.io/latest/docs/tasks/traffic-management/locality-load-balancing/failover/
	LocalityLbSetting *LocalityLoadBalancerSetting `json:"localityLbSetting,omitempty"`
	// Configures DNS refresh rate for Envoy clusters of type `STRICT_DNS`
	// Default refresh rate is `60s`.
	DnsRefreshRate *metav1.Duration `json:"dnsRefreshRate,omitempty"`
	// Specify if http1.1 connections should be upgraded to http2 by default.
	// if sidecar is installed on all pods in the mesh, then this should be set to `UPGRADE`.
	// If one or more services or namespaces do not have sidecar(s), then this should be set to `DO_NOT_UPGRADE`.
	// It can be enabled by destination using the `destinationRule.trafficPolicy.connectionPool.http.h2UpgradePolicy` override.
	H2UpgradePolicy MeshConfigH2UpgradePolicy `json:"h2UpgradePolicy,omitempty"`
	// Name to be used while emitting statistics for inbound clusters. The same pattern is used while computing stat prefix for
	// network filters like TCP and Redis.
	// By default, Istio emits statistics with the pattern `inbound|<port>|<port-name>|<service-FQDN>`.
	// For example `inbound|7443|grpc-reviews|reviews.prod.svc.cluster.local`. This can be used to override that pattern.
	//
	// A Pattern can be composed of various pre-defined variables. The following variables are supported.
	//
	// - `%SERVICE%` - Will be substituted with short hostname of the service.
	// - `%SERVICE_NAME%` - Will be substituted with name of the service.
	// - `%SERVICE_FQDN%` - Will be substituted with FQDN of the service.
	// - `%SERVICE_PORT%` - Will be substituted with port of the service.
	// - `%TARGET_PORT%`  - Will be substituted with the target port of the service.
	// - `%SERVICE_PORT_NAME%` - Will be substituted with port name of the service.
	//
	// Following are some examples of supported patterns for reviews:
	//
	// - `%SERVICE_FQDN%_%SERVICE_PORT%` will use reviews.prod.svc.cluster.local_7443 as the stats name.
	// - `%SERVICE%` will use reviews.prod as the stats name.
	InboundClusterStatName *string `json:"inboundClusterStatName,omitempty"`
	// Name to be used while emitting statistics for outbound clusters. The same pattern is used while computing stat prefix for
	// network filters like TCP and Redis.
	// By default, Istio emits statistics with the pattern `outbound|<port>|<subsetname>|<service-FQDN>`.
	// For example `outbound|8080|v2|reviews.prod.svc.cluster.local`. This can be used to override that pattern.
	//
	// A Pattern can be composed of various pre-defined variables. The following variables are supported.
	//
	// - `%SERVICE%` - Will be substituted with short hostname of the service.
	// - `%SERVICE_NAME%` - Will be substituted with name of the service.
	// - `%SERVICE_FQDN%` - Will be substituted with FQDN of the service.
	// - `%SERVICE_PORT%` - Will be substituted with port of the service.
	// - `%SERVICE_PORT_NAME%` - Will be substituted with port name of the service.
	// - `%SUBSET_NAME%` - Will be substituted with subset.
	//
	// Following are some examples of supported patterns for reviews:
	//
	// - `%SERVICE_FQDN%_%SERVICE_PORT%` will use `reviews.prod.svc.cluster.local_7443` as the stats name.
	// - `%SERVICE%` will use reviews.prod as the stats name.
	OutboundClusterStatName *string `json:"outboundClusterStatName,omitempty"`
	// +hidefromdoc
	// Configure the provision of certificates.
	//
	// Note: Deprecated, please refer to Cert-Manager or other cert provisioning solutions to sign DNS certificates.
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/config.proto.
	Certificates []*Certificate `json:"certificates,omitempty"`
	// +hidefromdoc
	// Settings to be applied to select services.
	ServiceSettings []*MeshConfigServiceSettings `json:"serviceSettings,omitempty"`
	// If enabled, Istio agent will merge metrics exposed by the application with metrics from Envoy
	// and Istio agent. The sidecar injection will replace `prometheus.io` annotations present on the pod
	// and redirect them towards Istio agent, which will then merge metrics of from the application with Istio metrics.
	// This relies on the annotations `prometheus.io/scrape`, `prometheus.io/port`, and
	// `prometheus.io/path` annotations.
	// If you are running a separately managed Envoy with an Istio sidecar, this may cause issues, as the metrics will collide.
	// In this case, it is recommended to disable aggregation on that deployment with the
	// `prometheus.istio.io/merge-metrics: "false"` annotation.
	// If not specified, this will be enabled by default.
	EnablePrometheusMerge *bool `json:"enablePrometheusMerge,omitempty"`
	// +hidefromdoc
	// `VerifyCertificateAtClient` sets the mesh global default for peer certificate validation
	// at the client-side proxy when `SIMPLE` TLS or `MUTUAL` TLS (non `ISTIO_MUTUAL`) origination
	// modes are used. This setting can be overridden at the host level via DestinationRule API.
	// By default, `VerifyCertificateAtClient` is `true`.
	//
	// `CaCertificates`: If set, proxy verifies CA signature based on given CaCertificates. If unset,
	// and VerifyCertificateAtClient is true, proxy uses default System CA bundle. If unset and
	// `VerifyCertificateAtClient` is false, proxy will not verify the CA.
	//
	// `SubjectAltNames`: If set, proxy verifies subject alt names are present in the SAN. If unset,
	// and `VerifyCertificateAtClient` is true, proxy uses host in destination rule to verify the SANs.
	// If unset, and `VerifyCertificateAtClient` is false, proxy does not verify SANs.
	//
	// For SAN, client-side proxy will exact match host in `DestinationRule` as well as one level
	// wildcard if the specified host in DestinationRule doesn't contain a wildcard.
	// For example, if the host in `DestinationRule` is `x.y.com`, client-side proxy will
	// match either `x.y.com` or `*.y.com` for the SAN in the presented server certificate.
	// For wildcard host name in DestinationRule, client-side proxy will do a suffix match. For example,
	// if host is `*.x.y.com`, client-side proxy will verify the presented server certificate SAN matches
	// `.x.y.com` suffix.
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/config.proto.
	VerifyCertificateAtClient *bool `json:"verifyCertificateAtClient,omitempty"`
	// +hidefromdoc
	// If specified, Istiod will authorize and forward the CSRs from the workloads to the specified external CA
	// using the Istio CA gRPC API.
	Ca *MeshConfigCA `json:"ca,omitempty"`
	// Defines a list of extension providers that extend Istio's functionality. For example, the AuthorizationPolicy
	// can be used with an extension provider to delegate the authorization decision to a custom authorization system.
	// +kubebuilder:validation:MaxItems=1000
	ExtensionProviders []*MeshConfigExtensionProvider `json:"extensionProviders,omitempty"`
	// Specifies extension providers to use by default in Istio configuration resources.
	DefaultProviders *MeshConfigDefaultProviders `json:"defaultProviders,omitempty"`
	// A list of Kubernetes selectors that specify the set of namespaces that Istio considers when
	// computing configuration updates for sidecars. This can be used to reduce Istio's computational load
	// by limiting the number of entities (including services, pods, and endpoints) that are watched and processed.
	// If omitted, Istio will use the default behavior of processing all namespaces in the cluster.
	// Elements in the list are disjunctive (OR semantics), i.e. a namespace will be included if it matches any selector.
	// The following example selects any namespace that matches either below:
	// 1. The namespace has both of these labels: `env: prod` and `region: us-east1`
	// 2. The namespace has label `app` equal to `cassandra` or `spark`.
	// ```yaml
	// discoverySelectors:
	//   - matchLabels:
	//     env: prod
	//     region: us-east1
	//   - matchExpressions:
	//   - key: app
	//     operator: In
	//     values:
	//   - cassandra
	//   - spark
	//
	// ```
	// Refer to the [Kubernetes selector docs](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors)
	// for additional detail on selector semantics.
	DiscoverySelectors []*metav1.LabelSelector `json:"discoverySelectors,omitempty"`
	// ProxyPathNormalization configures how URL paths in incoming and outgoing HTTP requests are
	// normalized by the sidecars and gateways.
	// The normalized paths will be used in all aspects through the requests' lifetime on the
	// sidecars and gateways, which includes routing decisions in outbound direction (client proxy),
	// authorization policy match and enforcement in inbound direction (server proxy), and the URL
	// path proxied to the upstream service.
	// If not set, the NormalizationType.DEFAULT configuration will be used.
	PathNormalization *MeshConfigProxyPathNormalization `json:"pathNormalization,omitempty"`
	// Configure the default HTTP retry policy.
	// The default number of retry attempts is set at 2 for these errors:
	//
	//	"connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes".
	//
	// Setting the number of attempts to 0 disables retry policy globally.
	// This setting can be overridden on a per-host basis using the Virtual Service
	// API.
	// All settings in the retry policy except `perTryTimeout` can currently be
	// configured globally via this field.
	DefaultHttpRetryPolicy *HTTPRetry `json:"defaultHttpRetryPolicy,omitempty"`
	// The below configuration parameters can be used to specify TLSConfig for mesh traffic.
	// For example, a user could enable min TLS version for ISTIO_MUTUAL traffic and specify a curve for non ISTIO_MUTUAL traffic like below:
	// ```yaml
	// meshConfig:
	//
	//	meshMTLS:
	//	  minProtocolVersion: TLSV1_3
	//	tlsDefaults:
	//	  Note: applicable only for non ISTIO_MUTUAL scenarios
	//	  ecdhCurves:
	//	    - P-256
	//	    - P-512
	//
	// ```
	// Configuration of mTLS for traffic between workloads with ISTIO_MUTUAL TLS traffic.
	//
	// Note: Mesh mTLS does not respect ECDH curves.
	MeshMTLS *MeshConfigTLSConfig `json:"meshMTLS,omitempty"`
	// Configuration of TLS for all traffic except for ISTIO_MUTUAL mode.
	// Currently, this supports configuration of ecdhCurves and cipherSuites only.
	// For ISTIO_MUTUAL TLS settings, use meshMTLS configuration.
	TlsDefaults *MeshConfigTLSConfig `json:"tlsDefaults,omitempty"`
}

// ConfigSource describes information about a configuration store inside a
// mesh. A single control plane instance can interact with one or more data
// sources.
type ConfigSource struct {
	// Address of the server implementing the Istio Mesh Configuration
	// protocol (MCP). Can be IP address or a fully qualified DNS name.
	// Use xds:// to specify a grpc-based xds backend, k8s:// to specify a k8s controller or
	// fs:/// to specify a file-based backend with absolute path to the directory.
	Address *string `json:"address,omitempty"`
	// Use the tlsSettings to specify the tls mode to use. If the MCP server
	// uses Istio mutual TLS and shares the root CA with istiod, specify the TLS
	// mode as `ISTIO_MUTUAL`.
	TlsSettings *ClientTLSSettings `json:"tlsSettings,omitempty"`
	// Describes the source of configuration, if nothing is specified default is MCP
	SubscribedResources []Resource `json:"subscribedResources,omitempty"`
}

// +hidefromdoc
// Certificate configures the provision of a certificate and its key.
// Example 1: key and cert stored in a secret
// ```
// { secretName: galley-cert
//
//	  secretNamespace: istio-system
//	  dnsNames:
//	    - galley.istio-system.svc
//	    - galley.mydomain.com
//	}
//
// ```
// Example 2: key and cert stored in a directory
// ```
// { dnsNames:
//   - pilot.istio-system
//   - pilot.istio-system.svc
//   - pilot.mydomain.com
//     }
//
// ```
type Certificate struct {
	// Name of the secret the certificate and its key will be stored into.
	// If it is empty, it will not be stored into a secret.
	// Instead, the certificate and its key will be stored into a hard-coded directory.
	SecretName *string `json:"secretName,omitempty"`
	// The DNS names for the certificate. A certificate may contain
	// multiple DNS names.
	DnsNames []string `json:"dnsNames,omitempty"`
}

// `OutboundTrafficPolicy` sets the default behavior of the sidecar for
// handling unknown outbound traffic from the application.
type MeshConfigOutboundTrafficPolicy struct {
	Mode MeshConfigOutboundTrafficPolicyMode `json:"mode,omitempty"`
}

type MeshConfigInboundTrafficPolicy struct {
	Mode MeshConfigInboundTrafficPolicyMode `json:"mode,omitempty"`
}

// +kubebuilder:validation:XValidation:message="At most one of [pem spiffeBundleUrl] should be set",rule="(has(self.pem)?1:0) + (has(self.spiffeBundleUrl)?1:0) <= 1"
type MeshConfigCertificateData struct {
	// The PEM data of the certificate.
	Pem *string `json:"pem,omitempty"`

	// The SPIFFE bundle endpoint URL that complies to:
	// https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE_Trust_Domain_and_Bundle.md#the-spiffe-trust-domain-and-bundle
	// The endpoint should support authentication based on Web PKI:
	// https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE_Trust_Domain_and_Bundle.md#521-web-pki
	// The certificate is retrieved from the endpoint.
	SpiffeBundleUrl *string `json:"spiffeBundleUrl,omitempty"` // Optional. Specify the kubernetes signers (External CA) that use this trustAnchor
	// when Istiod is acting as RA(registration authority)
	// If set, they are used for these signers. Otherwise, this trustAnchor is used for all signers.
	CertSigners []string `json:"certSigners,omitempty"`
	// Optional. Specify the list of trust domains to which this trustAnchor data belongs.
	// If set, they are used for these trust domains. Otherwise, this trustAnchor is used for default trust domain
	// and its aliases.
	// Note that we can have multiple trustAnchor data for a same trustDomain.
	// In that case, trustAnchors with a same trust domain will be merged and used together to verify peer certificates.
	// If neither certSigners nor trustDomains is set, this trustAnchor is used for all trust domains and all signers.
	// If only trustDomains is set, this trustAnchor is used for these trustDomains and all signers.
	// If only certSigners is set, this trustAnchor is used for these certSigners and all trust domains.
	// If both certSigners and trustDomains is set, this trustAnchor is only used for these signers and trust domains.
	TrustDomains []string `json:"trustDomains,omitempty"`
}

// +hidefromdoc
// Settings to be applied to select services.
//
// For example, the following configures all services in namespace "foo" as well as the
// "bar" service in namespace "baz" to be considered cluster-local:
//
// ```yaml
// serviceSettings:
//   - settings:
//     clusterLocal: true
//     hosts:
//   - "*.foo.svc.cluster.local"
//   - "bar.baz.svc.cluster.local"
//
// ```
type MeshConfigServiceSettings struct {
	// The settings to apply to the selected services.
	Settings *MeshConfigServiceSettingsSettings `json:"settings,omitempty"`
	// The services to which the Settings should be applied. Services are selected using the hostname
	// matching rules used by DestinationRule.
	//
	// For example: foo.bar.svc.cluster.local, *.baz.svc.cluster.local
	Hosts []string `json:"hosts,omitempty"`
}

type MeshConfigCA struct {
	// REQUIRED. Address of the CA server implementing the Istio CA gRPC API.
	// Can be IP address or a fully qualified DNS name with port
	// Eg: custom-ca.default.svc.cluster.local:8932, 192.168.23.2:9000
	// +kubebuilder:validation:Required
	Address *string `json:"address"`
	// Use the tlsSettings to specify the tls mode to use.
	// Regarding tlsSettings:
	// - DISABLE MODE is legitimate for the case Istiod is making the request via an Envoy sidecar.
	// DISABLE MODE can also be used for testing
	// - TLS MUTUAL MODE be on by default. If the CA certificates
	// (cert bundle to verify the CA server's certificate) is omitted, Istiod will
	// use the system root certs to verify the CA server's certificate.
	TlsSettings *ClientTLSSettings `json:"tlsSettings,omitempty"`
	// timeout for forward CSR requests from Istiod to External CA
	// Default: 10s
	RequestTimeout *metav1.Duration `json:"requestTimeout,omitempty"`
	// Use istiodSide to specify CA Server integrate to Istiod side or Agent side
	// Default: true
	IstiodSide *bool `json:"istiodSide,omitempty"`
}

// +kubebuilder:validation:XValidation:message="At most one of [envoyExtAuthzHttp envoyExtAuthzGrpc zipkin lightstep datadog stackdriver opencensus skywalking opentelemetry prometheus envoyFileAccessLog envoyHttpAls envoyTcpAls envoyOtelAls] should be set",rule="(has(self.envoyExtAuthzHttp)?1:0) + (has(self.envoyExtAuthzGrpc)?1:0) + (has(self.zipkin)?1:0) + (has(self.lightstep)?1:0) + (has(self.datadog)?1:0) + (has(self.stackdriver)?1:0) + (has(self.opencensus)?1:0) + (has(self.skywalking)?1:0) + (has(self.opentelemetry)?1:0) + (has(self.prometheus)?1:0) + (has(self.envoyFileAccessLog)?1:0) + (has(self.envoyHttpAls)?1:0) + (has(self.envoyTcpAls)?1:0) + (has(self.envoyOtelAls)?1:0) <= 1"
type MeshConfigExtensionProvider struct {
	// REQUIRED. A unique name identifying the extension provider.
	// +kubebuilder:validation:Required
	Name *string `json:"name"`

	// Configures an external authorizer that implements the Envoy ext_authz filter authorization check service using the HTTP API.
	EnvoyExtAuthzHttp *MeshConfigExtensionProviderEnvoyExternalAuthorizationHttpProvider `json:"envoyExtAuthzHttp,omitempty"`

	// Configures an external authorizer that implements the Envoy ext_authz filter authorization check service using the gRPC API.
	EnvoyExtAuthzGrpc *MeshConfigExtensionProviderEnvoyExternalAuthorizationGrpcProvider `json:"envoyExtAuthzGrpc,omitempty"`

	// Configures a tracing provider that uses the Zipkin API.
	Zipkin *MeshConfigExtensionProviderZipkinTracingProvider `json:"zipkin,omitempty"`

	// +hidefromdoc
	// Configures a Lightstep tracing provider.
	// Deprecated: For Istio 1.15+, please use an OpenTelemetryTracingProvider instead, more details can be found at https://github.com/istio/istio/issues/40027
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/config.proto.
	Lightstep *MeshConfigExtensionProviderLightstepTracingProvider `json:"lightstep,omitempty"`

	// Configures a Datadog tracing provider.
	Datadog *MeshConfigExtensionProviderDatadogTracingProvider `json:"datadog,omitempty"`

	// +hidefromdoc
	// Configures a Stackdriver provider.
	Stackdriver *MeshConfigExtensionProviderStackdriverProvider `json:"stackdriver,omitempty"`

	// +hidefromdoc
	// Configures an OpenCensusAgent tracing provider.
	// Deprecated: OpenCensus is deprecated, more details can be found at https://opentelemetry.io/blog/2023/sunsetting-opencensus/
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/config.proto.
	Opencensus *MeshConfigExtensionProviderOpenCensusAgentTracingProvider `json:"opencensus,omitempty"`

	// Configures a Apache SkyWalking provider.
	Skywalking *MeshConfigExtensionProviderSkyWalkingTracingProvider `json:"skywalking,omitempty"`

	// Configures an OpenTelemetry tracing provider.
	Opentelemetry *MeshConfigExtensionProviderOpenTelemetryTracingProvider `json:"opentelemetry,omitempty"`

	// Configures a Prometheus metrics provider.
	Prometheus *MeshConfigExtensionProviderPrometheusMetricsProvider `json:"prometheus,omitempty"`

	// Configures an Envoy File Access Log provider.
	EnvoyFileAccessLog *MeshConfigExtensionProviderEnvoyFileAccessLogProvider `json:"envoyFileAccessLog,omitempty"`

	// Configures an Envoy Access Logging Service provider for HTTP traffic.
	EnvoyHttpAls *MeshConfigExtensionProviderEnvoyHttpGrpcV3LogProvider `json:"envoyHttpAls,omitempty"`

	// Configures an Envoy Access Logging Service provider for TCP traffic.
	EnvoyTcpAls *MeshConfigExtensionProviderEnvoyTcpGrpcV3LogProvider `json:"envoyTcpAls,omitempty"`

	// Configures an Envoy Open Telemetry Access Logging Service provider.
	EnvoyOtelAls *MeshConfigExtensionProviderEnvoyOpenTelemetryLogProvider `json:"envoyOtelAls,omitempty"`
}

// Holds the name references to the providers that will be used by default
// in other Istio configuration resources if the provider is not specified.
//
// These names must match a provider defined in `extensionProviders` that is
// one of the supported tracing providers.
type MeshConfigDefaultProviders struct {
	// Name of the default provider(s) for tracing.
	Tracing []string `json:"tracing,omitempty"`
	// Name of the default provider(s) for metrics.
	Metrics []string `json:"metrics,omitempty"`
	// Name of the default provider(s) for access logging.
	AccessLogging []string `json:"accessLogging,omitempty"`
}

type MeshConfigProxyPathNormalization struct {
	Normalization MeshConfigProxyPathNormalizationNormalizationType `json:"normalization,omitempty"`
}

type MeshConfigTLSConfig struct {
	// Optional: the minimum TLS protocol version. The default minimum
	// TLS version will be TLS 1.2. As servers may not be Envoy and be
	// set to TLS 1.2 (e.g., workloads using mTLS without sidecars), the
	// minimum TLS version for clients may also be TLS 1.2.
	// In the current Istio implementation, the maximum TLS protocol version
	// is TLS 1.3.
	MinProtocolVersion MeshConfigTLSConfigTLSProtocol `json:"minProtocolVersion,omitempty"`
	// Optional: If specified, the TLS connection will only support the specified ECDH curves for the DH key exchange.
	// If not specified, the default curves enforced by Envoy will be used. For details about the default curves, refer to
	// [Ecdh Curves](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto).
	EcdhCurves []string `json:"ecdhCurves,omitempty"`
	// Optional: If specified, the TLS connection will only support the specified cipher list when negotiating TLS 1.0-1.2.
	// If not specified, the following cipher suites will be used:
	// ```
	// ECDHE-ECDSA-AES256-GCM-SHA384
	// ECDHE-RSA-AES256-GCM-SHA384
	// ECDHE-ECDSA-AES128-GCM-SHA256
	// ECDHE-RSA-AES128-GCM-SHA256
	// AES256-GCM-SHA384
	// AES128-GCM-SHA256
	// ```
	CipherSuites []string `json:"cipherSuites,omitempty"`
}

// Settings for the selected services.
type MeshConfigServiceSettingsSettings struct {
	// If true, specifies that the client and service endpoints must reside in the same cluster.
	// By default, in multi-cluster deployments, the Istio control plane assumes all service
	// endpoints to be reachable from any client in any of the clusters which are part of the
	// mesh. This configuration option limits the set of service endpoints visible to a client
	// to be cluster scoped.
	//
	// There are some common scenarios when this can be useful:
	//
	//   - A service (or group of services) is inherently local to the cluster and has local storage
	//     for that cluster. For example, the kube-system namespace (e.g. the Kube API Server).
	//   - A mesh administrator wants to slowly migrate services to Istio. They might start by first
	//     having services cluster-local and then slowly transition them to mesh-wide. They could do
	//     this service-by-service (e.g. mysvc.myns.svc.cluster.local) or as a group
	//     (e.g. *.myns.svc.cluster.local).
	//
	// By default Istio will consider kubernetes.default.svc (i.e. the API Server) as well as all
	// services in the kube-system namespace to be cluster-local, unless explicitly overridden here.
	ClusterLocal *bool `json:"clusterLocal,omitempty"`
}

type MeshConfigExtensionProviderEnvoyExternalAuthorizationRequestBody struct {
	// Sets the maximum size of a message body that the ext-authz filter will hold in memory.
	// If maxRequestBytes is reached, and allowPartialMessage is false, Envoy will return a 413 (Payload Too Large).
	// Otherwise the request will be sent to the provider with a partial message.
	// Note that this setting will have precedence over the failOpen field, the 413 will be returned even when the
	// failOpen is set to true.
	MaxRequestBytes *uint32 `json:"maxRequestBytes,omitempty"`
	// When this field is true, ext-authz filter will buffer the message until maxRequestBytes is reached.
	// The authorization request will be dispatched and no 413 HTTP error will be returned by the filter.
	// A "x-envoy-auth-partial-body: false|true" metadata header will be added to the authorization request message
	// indicating if the body data is partial.
	AllowPartialMessage *bool `json:"allowPartialMessage,omitempty"`
	// If true, the body sent to the external authorization service in the gRPC authorization request is set with raw bytes
	// in the [raw_body field](https://github.com/envoyproxy/envoy/blame/cffb095d59d7935abda12b9509bcd136808367bb/api/envoy/service/auth/v3/attribute_context.proto#L153).
	// Otherwise, it will be filled with UTF-8 string in the [body field](https://github.com/envoyproxy/envoy/blame/cffb095d59d7935abda12b9509bcd136808367bb/api/envoy/service/auth/v3/attribute_context.proto#L147).
	// This field only works with the envoyExtAuthzGrpc provider and has no effect for the envoyExtAuthzHttp provider.
	PackAsBytes *bool `json:"packAsBytes,omitempty"`
}

type MeshConfigExtensionProviderEnvoyExternalAuthorizationHttpProvider struct {
	// REQUIRED. Specifies the service that implements the Envoy ext_authz HTTP authorization service.
	// The format is `[<Namespace>/]<Hostname>`. The specification of `<Namespace>` is required only when it is insufficient
	// to unambiguously resolve a service in the service registry. The `<Hostname>` is a fully qualified host name of a
	// service defined by the Kubernetes service or ServiceEntry.
	//
	// Example: "my-ext-authz.foo.svc.cluster.local" or "bar/my-ext-authz.example.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// The maximum duration that the proxy will wait for a response from the provider (default timeout: 600s).
	// When this timeout condition is met, the proxy marks the communication to the authorization service as failure.
	// In this situation, the response sent back to the client will depend on the configured `failOpen` field.
	Timeout *metav1.Duration `json:"timeout,omitempty"`
	// Sets a prefix to the value of authorization request header *Path*.
	// For example, setting this to "/check" for an original user request at path "/admin" will cause the
	// authorization check request to be sent to the authorization service at the path "/check/admin" instead of "/admin".
	PathPrefix *string `json:"pathPrefix,omitempty"`
	// If true, the user request will be allowed even if the communication with the authorization service has failed,
	// or if the authorization service has returned a HTTP 5xx error.
	// Default is false and the request will be rejected with "Forbidden" response.
	FailOpen *bool `json:"failOpen,omitempty"`
	// If true, clears route cache in order to allow the external authorization service to correctly affect routing decisions.
	// If true, recalculate routes with the new ExtAuthZ added/removed headers.
	// Default is false
	ClearRouteCache *bool `json:"clearRouteCache,omitempty"`
	// Sets the HTTP status that is returned to the client when there is a network error to the authorization service.
	// The default status is "403" (HTTP Forbidden).
	StatusOnError *string `json:"statusOnError,omitempty"`
	// DEPRECATED. Use includeRequestHeadersInCheck instead.
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/config.proto.
	IncludeHeadersInCheck []string `json:"includeHeadersInCheck,omitempty"`
	// List of client request headers that should be included in the authorization request sent to the authorization service.
	// Note that in addition to the headers specified here following headers are included by default:
	// 1. *Host*, *Method*, *Path* and *Content-Length* are automatically sent.
	// 2. *Content-Length* will be set to 0 and the request will not have a message body. However, the authorization
	// request can include the buffered client request body (controlled by includeRequestBodyInCheck setting),
	// consequently the value of Content-Length of the authorization request reflects the size of its payload size.
	//
	// Exact, prefix and suffix matches are supported (similar to the
	// [authorization policy rule syntax](https://istio.io/latest/docs/reference/config/security/authorization-policy/#Rule)
	// except the presence match):
	// - Exact match: "abc" will match on value "abc".
	// - Prefix match: "abc*" will match on value "abc" and "abcd".
	// - Suffix match: "*abc" will match on value "abc" and "xabc".
	IncludeRequestHeadersInCheck []string `json:"includeRequestHeadersInCheck,omitempty"`
	// Set of additional fixed headers that should be included in the authorization request sent to the authorization service.
	// Key is the header name and value is the header value.
	// Note that client request of the same key or headers specified in includeRequestHeadersInCheck will be overridden.
	IncludeAdditionalHeadersInCheck map[string]string `json:"includeAdditionalHeadersInCheck,omitempty"`
	// If set, the client request body will be included in the authorization request sent to the authorization service.
	IncludeRequestBodyInCheck *MeshConfigExtensionProviderEnvoyExternalAuthorizationRequestBody `json:"includeRequestBodyInCheck,omitempty"`
	// List of headers from the authorization service that should be added or overridden in the original request and
	// forwarded to the upstream when the authorization check result is allowed (HTTP code 200).
	// If not specified, the original request will not be modified and forwarded to backend as-is.
	// Note, any existing headers will be overridden.
	//
	// Exact, prefix and suffix matches are supported (similar to the
	// [authorization policy rule syntax](https://istio.io/latest/docs/reference/config/security/authorization-policy/#Rule)
	// except the presence match):
	// - Exact match: "abc" will match on value "abc".
	// - Prefix match: "abc*" will match on value "abc" and "abcd".
	// - Suffix match: "*abc" will match on value "abc" and "xabc".
	HeadersToUpstreamOnAllow []string `json:"headersToUpstreamOnAllow,omitempty"`
	// List of headers from the authorization service that should be forwarded to downstream when the authorization
	// check result is not allowed (HTTP code other than 200).
	// If not specified, all the authorization response headers, except *Authority (Host)* will be in the response to
	// the downstream.
	// When a header is included in this list, *Path*, *Status*, *Content-Length*, *WWWAuthenticate* and *Location* are
	// automatically added.
	// Note, the body from the authorization service is always included in the response to downstream.
	//
	// Exact, prefix and suffix matches are supported (similar to the
	// [authorization policy rule syntax](https://istio.io/latest/docs/reference/config/security/authorization-policy/#Rule)
	// except the presence match):
	// - Exact match: "abc" will match on value "abc".
	// - Prefix match: "abc*" will match on value "abc" and "abcd".
	// - Suffix match: "*abc" will match on value "abc" and "xabc".
	HeadersToDownstreamOnDeny []string `json:"headersToDownstreamOnDeny,omitempty"`
	// List of headers from the authorization service that should be forwarded to downstream when the authorization
	// check result is allowed (HTTP code 200).
	// If not specified, the original response will not be modified and forwarded to downstream as-is.
	// Note, any existing headers will be overridden.
	//
	// Exact, prefix and suffix matches are supported (similar to the
	// [authorization policy rule syntax](https://istio.io/latest/docs/reference/config/security/authorization-policy/#Rule)
	// except the presence match):
	// - Exact match: "abc" will match on value "abc".
	// - Prefix match: "abc*" will match on value "abc" and "abcd".
	// - Suffix match: "*abc" will match on value "abc" and "xabc".
	HeadersToDownstreamOnAllow []string `json:"headersToDownstreamOnAllow,omitempty"`
}

type MeshConfigExtensionProviderEnvoyExternalAuthorizationGrpcProvider struct {
	// REQUIRED. Specifies the service that implements the Envoy ext_authz gRPC authorization service.
	// The format is `[<Namespace>/]<Hostname>`. The specification of `<Namespace>` is required only when it is insufficient
	// to unambiguously resolve a service in the service registry. The `<Hostname>` is a fully qualified host name of a
	// service defined by the Kubernetes service or ServiceEntry.
	//
	// Example: "my-ext-authz.foo.svc.cluster.local" or "bar/my-ext-authz.example.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// The maximum duration that the proxy will wait for a response from the provider, this is the timeout for a specific request (default timeout: 600s).
	// When this timeout condition is met, the proxy marks the communication to the authorization service as failure.
	// In this situation, the response sent back to the client will depend on the configured `failOpen` field.
	Timeout *metav1.Duration `json:"timeout,omitempty"`
	// If true, the HTTP request or TCP connection will be allowed even if the communication with the authorization service has failed,
	// or if the authorization service has returned a HTTP 5xx error.
	// Default is false. For HTTP request, it will be rejected with 403 (HTTP Forbidden). For TCP connection, it will be closed immediately.
	FailOpen *bool `json:"failOpen,omitempty"`
	// If true, clears route cache in order to allow the external authorization service to correctly affect routing decisions.
	// If true, recalculate routes with the new ExtAuthZ added/removed headers.
	// Default is false
	ClearRouteCache *bool `json:"clearRouteCache,omitempty"`
	// Sets the HTTP status that is returned to the client when there is a network error to the authorization service.
	// The default status is "403" (HTTP Forbidden).
	StatusOnError *string `json:"statusOnError,omitempty"`
	// If set, the client request body will be included in the authorization request sent to the authorization service.
	IncludeRequestBodyInCheck *MeshConfigExtensionProviderEnvoyExternalAuthorizationRequestBody `json:"includeRequestBodyInCheck,omitempty"`
}

// Defines configuration for a Zipkin tracer.
type MeshConfigExtensionProviderZipkinTracingProvider struct {
	// REQUIRED. Specifies the service that the Zipkin API.
	// The format is `[<Namespace>/]<Hostname>`. The specification of `<Namespace>` is required only when it is insufficient
	// to unambiguously resolve a service in the service registry. The `<Hostname>` is a fully qualified host name of a
	// service defined by the Kubernetes service or ServiceEntry.
	//
	// Example: "zipkin.default.svc.cluster.local" or "bar/zipkin.example.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// Optional. Controls the overall path length allowed in a reported span.
	// NOTE: currently only controls max length of the path tag.
	MaxTagLength *uint32 `json:"maxTagLength,omitempty"`
	// Optional. A 128 bit trace id will be used in Istio.
	// If true, will result in a 64 bit trace id being used.
	Enable64BitTraceId *bool `json:"enable64bitTraceId,omitempty"`
	// Optional. Specifies the endpoint of Zipkin API.
	// The default value is "/api/v2/spans".
	Path *string `json:"path,omitempty"`
}

// Defines configuration for a Lightstep tracer.
// Note: Lightstep has moved to OpenTelemetry-based integrations. Istio 1.15+
// will generate OpenTelemetry-compatible configuration when using this option.
type MeshConfigExtensionProviderLightstepTracingProvider struct {
	// REQUIRED. Specifies the service for the Lightstep collector.
	// The format is `[<Namespace>/]<Hostname>`. The specification of `<Namespace>` is required only when it is insufficient
	// to unambiguously resolve a service in the service registry. The `<Hostname>` is a fully qualified host name of a
	// service defined by the Kubernetes service or ServiceEntry.
	//
	// Example: "lightstep.default.svc.cluster.local" or "bar/lightstep.example.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// The Lightstep access token.
	AccessToken *string `json:"accessToken,omitempty"`
	// Optional. Controls the overall path length allowed in a reported span.
	// NOTE: currently only controls max length of the path tag.
	MaxTagLength *uint32 `json:"maxTagLength,omitempty"`
}

// Defines configuration for a Datadog tracer.
type MeshConfigExtensionProviderDatadogTracingProvider struct {
	// REQUIRED. Specifies the service for the Datadog agent.
	// The format is `[<Namespace>/]<Hostname>`. The specification of `<Namespace>` is required only when it is insufficient
	// to unambiguously resolve a service in the service registry. The `<Hostname>` is a fully qualified host name of a
	// service defined by the Kubernetes service or ServiceEntry.
	//
	// Example: "datadog.default.svc.cluster.local" or "bar/datadog.example.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// Optional. Controls the overall path length allowed in a reported span.
	// NOTE: currently only controls max length of the path tag.
	MaxTagLength *uint32 `json:"maxTagLength,omitempty"`
}

// Defines configuration for a SkyWalking tracer.
type MeshConfigExtensionProviderSkyWalkingTracingProvider struct {
	// REQUIRED. Specifies the service for the SkyWalking receiver.
	// The format is `[<Namespace>/]<Hostname>`. The specification of `<Namespace>` is required only when it is insufficient
	// to unambiguously resolve a service in the service registry. The `<Hostname>` is a fully qualified host name of a
	// service defined by the Kubernetes service or ServiceEntry.
	//
	// Example: "skywalking.default.svc.cluster.local" or "bar/skywalking.example.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// Optional. The SkyWalking OAP access token.
	AccessToken *string `json:"accessToken,omitempty"`
}

// Defines configuration for Stackdriver.
//
// WARNING: Stackdriver tracing uses OpenCensus configuration under the hood and, as a result, cannot be used
// alongside any OpenCensus provider configuration. This is due to a limitation in the implementation of OpenCensus
// driver in Envoy.
type MeshConfigExtensionProviderStackdriverProvider struct {
	// debug enables trace output to stdout.
	// +hidefromdoc
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/config.proto.
	Debug *bool `json:"debug,omitempty"`
	// The global default max number of attributes per span.
	// default is 200.
	// +hidefromdoc
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/config.proto.
	MaxNumberOfAttributes *int64 `json:"maxNumberOfAttributes,omitempty"`
	// The global default max number of annotation events per span.
	// default is 200.
	// +hidefromdoc
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/config.proto.
	MaxNumberOfAnnotations *int64 `json:"maxNumberOfAnnotations,omitempty"`
	// The global default max number of message events per span.
	// default is 200.
	// +hidefromdoc
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/config.proto.
	MaxNumberOfMessageEvents *int64 `json:"maxNumberOfMessageEvents,omitempty"`
	// Optional. Controls the overall path length allowed in a reported span.
	// NOTE: currently only controls max length of the path tag.
	MaxTagLength *uint32 `json:"maxTagLength,omitempty"`
	// Optional. Controls Stackdriver logging behavior.
	Logging *MeshConfigExtensionProviderStackdriverProviderLogging `json:"logging,omitempty"`
}

// Defines configuration for an OpenCensus tracer writing to an OpenCensus backend.
//
// WARNING: OpenCensusAgentTracingProviders should be used with extreme care. Configuration of
// OpenCensus providers CANNOT be changed during the course of proxy's lifetime due to a limitation
// in the implementation of OpenCensus driver in Envoy. This means only a single provider configuration
// may be used for OpenCensus at any given time for a proxy or group of proxies AND that any change to the provider
// configuration MUST be accompanied by a restart of all proxies that will use that configuration.
//
// NOTE: Stackdriver tracing uses OpenCensus configuration under the hood and, as a result, cannot be used
// alongside OpenCensus provider configuration.
type MeshConfigExtensionProviderOpenCensusAgentTracingProvider struct {
	// REQUIRED. Specifies the service for the OpenCensusAgent.
	// The format is `[<Namespace>/]<Hostname>`. The specification of `<Namespace>` is required only when it is insufficient
	// to unambiguously resolve a service in the service registry. The `<Hostname>` is a fully qualified host name of a
	// service defined by the Kubernetes service or ServiceEntry.
	//
	// Example: "ocagent.default.svc.cluster.local" or "bar/ocagent.example.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// Specifies the set of context propagation headers used for distributed
	// tracing. Default is `["W3C_TRACE_CONTEXT"]`. If multiple values are specified,
	// the proxy will attempt to read each header for each request and will
	// write all headers.
	Context []MeshConfigExtensionProviderOpenCensusAgentTracingProviderTraceContext `json:"context,omitempty"`
	// Optional. Controls the overall path length allowed in a reported span.
	// NOTE: currently only controls max length of the path tag.
	MaxTagLength *uint32 `json:"maxTagLength,omitempty"`
}

type MeshConfigExtensionProviderPrometheusMetricsProvider struct {
}

// Defines configuration for Envoy-based access logging that writes to
// local files (and/or standard streams).
type MeshConfigExtensionProviderEnvoyFileAccessLogProvider struct {
	// Path to a local file to write the access log entries.
	// This may be used to write to streams, via `/dev/stderr` and `/dev/stdout`
	// If unspecified, defaults to `/dev/stdout`.
	Path *string `json:"path,omitempty"`
	// Optional. Allows overriding of the default access log format.
	LogFormat *MeshConfigExtensionProviderEnvoyFileAccessLogProviderLogFormat `json:"logFormat,omitempty"`
	// Optional. If set to true, when command operators are evaluated to null,
	// For text format, the output of the empty operator is changed from "-" to an empty string.
	// For json format, the keys with null values are omitted in the output structure.
	OmitEmptyValues *bool `json:"omitEmptyValues,omitempty"`
}

// Defines configuration for an Envoy [Access Logging Service](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/access_loggers/grpc/v3/als.proto#grpc-access-log-service-als)
// integration for HTTP traffic.
type MeshConfigExtensionProviderEnvoyHttpGrpcV3LogProvider struct {
	// REQUIRED. Specifies the service that implements the Envoy ALS gRPC authorization service.
	// The format is `[<Namespace>/]<Hostname>`. The specification of `<Namespace>` is required only when it is insufficient
	// to unambiguously resolve a service in the service registry. The `<Hostname>` is a fully qualified host name of a
	// service defined by the Kubernetes service or ServiceEntry.
	//
	// Example: "envoy-als.foo.svc.cluster.local" or "bar/envoy-als.example.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// Optional. The friendly name of the access log.
	// Defaults:
	// -  "http_envoy_accesslog"
	// -  "listener_envoy_accesslog"
	LogName *string `json:"logName,omitempty"`
	// Optional. Additional filter state objects to log.
	FilterStateObjectsToLog []string `json:"filterStateObjectsToLog,omitempty"`
	// Optional. Additional request headers to log.
	AdditionalRequestHeadersToLog []string `json:"additionalRequestHeadersToLog,omitempty"`
	// Optional. Additional response headers to log.
	AdditionalResponseHeadersToLog []string `json:"additionalResponseHeadersToLog,omitempty"`
	// Optional. Additional response trailers to log.
	AdditionalResponseTrailersToLog []string `json:"additionalResponseTrailersToLog,omitempty"`
}

// Defines configuration for an Envoy [Access Logging Service](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/access_loggers/grpc/v3/als.proto#grpc-access-log-service-als)
// integration for TCP traffic.
type MeshConfigExtensionProviderEnvoyTcpGrpcV3LogProvider struct {
	// REQUIRED. Specifies the service that implements the Envoy ALS gRPC authorization service.
	// The format is `[<Namespace>/]<Hostname>`. The specification of `<Namespace>` is required only when it is insufficient
	// to unambiguously resolve a service in the service registry. The `<Hostname>` is a fully qualified host name of a
	// service defined by the Kubernetes service or ServiceEntry.
	//
	// Example: "envoy-als.foo.svc.cluster.local" or "bar/envoy-als.example.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// Optional. The friendly name of the access log.
	// Defaults:
	// - "tcp_envoy_accesslog"
	// - "listener_envoy_accesslog"
	LogName *string `json:"logName,omitempty"`
	// Optional. Additional filter state objects to log.
	FilterStateObjectsToLog []string `json:"filterStateObjectsToLog,omitempty"`
}

// Defines configuration for an Envoy [OpenTelemetry (gRPC) Access Log](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/access_loggers/open_telemetry/v3/logs_service.proto)
type MeshConfigExtensionProviderEnvoyOpenTelemetryLogProvider struct {
	// REQUIRED. Specifies the service that implements the Envoy ALS gRPC authorization service.
	// The format is `[<Namespace>/]<Hostname>`. The specification of `<Namespace>` is required only when it is insufficient
	// to unambiguously resolve a service in the service registry. The `<Hostname>` is a fully qualified host name of a
	// service defined by the Kubernetes service or ServiceEntry.
	//
	// Example: "envoy-als.foo.svc.cluster.local" or "bar/envoy-als.example.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// Optional. The friendly name of the access log.
	// Defaults:
	// - "otel_envoy_accesslog"
	LogName *string `json:"logName,omitempty"`
	// Optional. Format for the proxy access log
	// Empty value results in proxy's default access log format, following Envoy access logging formatting.
	LogFormat *MeshConfigExtensionProviderEnvoyOpenTelemetryLogProviderLogFormat `json:"logFormat,omitempty"`
}

// Defines configuration for an OpenTelemetry tracing backend. Istio 1.16.1 or higher is needed.
// +kubebuilder:validation:XValidation:message="At most one of [dynatraceSampler] should be set",rule="(has(self.dynatraceSampler)?1:0) <= 1"
type MeshConfigExtensionProviderOpenTelemetryTracingProvider struct {
	// REQUIRED. Specifies the OpenTelemetry endpoint that will receive OTLP traces.
	// The format is `[<Namespace>/]<Hostname>`. The specification of `<Namespace>` is required only when it is insufficient
	// to unambiguously resolve a service in the service registry. The `<Hostname>` is a fully qualified host name of a
	// service defined by the Kubernetes service or ServiceEntry.
	//
	// Example: "otlp.default.svc.cluster.local" or "bar/otlp.example.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// Optional. Controls the overall path length allowed in a reported span.
	// NOTE: currently only controls max length of the path tag.
	MaxTagLength *uint32 `json:"maxTagLength,omitempty"`
	// Optional. Specifies the configuration for exporting OTLP traces via HTTP.
	// When empty, traces will be exported via gRPC.
	//
	// The following example shows how to configure the OpenTelemetry ExtensionProvider to export via HTTP:
	//
	// 1. Add/change the OpenTelemetry extension provider in `MeshConfig`
	// ```yaml
	//   - name: otel-tracing
	//     opentelemetry:
	//     port: 443
	//     service: my.olly-backend.com
	//     http:
	//     path: "/api/otlp/traces"
	//     timeout: 10s
	//     headers:
	//   - name: "my-custom-header"
	//     value: "some value"
	//
	// ```
	//
	// 2. Deploy a `ServiceEntry` for the observability back-end
	// ```yaml
	// apiVersion: networking.istio.io/v1alpha3
	// kind: ServiceEntry
	// metadata:
	//
	//	name: my-olly-backend
	//
	// spec:
	//
	//	hosts:
	//	- my.olly-backend.com
	//	ports:
	//	- number: 443
	//	  name: https-port
	//	  protocol: HTTPS
	//	resolution: DNS
	//	location: MESH_EXTERNAL
	//
	// ---
	// apiVersion: networking.istio.io/v1alpha3
	// kind: DestinationRule
	// metadata:
	//
	//	name: my-olly-backend
	//
	// spec:
	//
	//	host: my.olly-backend.com
	//	trafficPolicy:
	//	  portLevelSettings:
	//	  - port:
	//	      number: 443
	//	    tls:
	//	      mode: SIMPLE
	//
	// ```
	Http *MeshConfigExtensionProviderHttpService `json:"http,omitempty"`
	// Optional. Specifies the configuration for exporting OTLP traces via GRPC.
	// When empty, traces will check whether HTTP is set.
	// If not, traces will use default GRPC configurations.
	//
	// The following example shows how to configure the OpenTelemetry ExtensionProvider to export via GRPC:
	//
	// 1. Add/change the OpenTelemetry extension provider in `MeshConfig`
	// ```yaml
	//   - name: opentelemetry
	//     opentelemetry:
	//     port: 8090
	//     service: tracing.example.com
	//     grpc:
	//     timeout: 10s
	//     initialMetadata:
	//   - name: "Authentication"
	//     value: "token-xxxxx"
	//
	// ```
	//
	// 2. Deploy a `ServiceEntry` for the observability back-end
	// ```yaml
	// apiVersion: networking.istio.io/v1alpha3
	// kind: ServiceEntry
	// metadata:
	//
	//	name: tracing-grpc
	//
	// spec:
	//
	//	hosts:
	//	- tracing.example.com
	//	ports:
	//	- number: 8090
	//	  name: grpc-port
	//	  protocol: GRPC
	//	resolution: DNS
	//	location: MESH_EXTERNAL
	//
	// ```
	Grpc *MeshConfigExtensionProviderGrpcService `json:"grpc,omitempty"`
	// Optional. Specifies [Resource Detectors](https://opentelemetry.io/docs/specs/otel/resource/sdk/)
	// to be used by the OpenTelemetry Tracer. When multiple resources are provided, they are merged
	// according to the OpenTelemetry [Resource specification](https://opentelemetry.io/docs/specs/otel/resource/sdk/#merge).
	//
	// The following example shows how to configure the Environment Resource Detector, that will
	// read the attributes from the environment variable `OTEL_RESOURCE_ATTRIBUTES`:
	//
	// ```yaml
	//   - name: otel-tracing
	//     opentelemetry:
	//     port: 443
	//     service: my.olly-backend.com
	//     resourceDetectors:
	//     environment: {}
	//
	// ```
	ResourceDetectors *MeshConfigExtensionProviderResourceDetectors `json:"resourceDetectors,omitempty"`

	// The Dynatrace adaptive traffic management (ATM) sampler.
	//
	// Example configuration:
	//
	// ```yaml
	//   - name: otel-tracing
	//     opentelemetry:
	//     port: 443
	//     service: "{your-environment-id}.live.dynatrace.com"
	//     http:
	//     path: "/api/v2/otlp/v1/traces"
	//     timeout: 10s
	//     headers:
	//   - name: "Authorization"
	//     value: "Api-Token dt0c01."
	//     resourceDetectors:
	//     dynatrace: {}
	//     dynatraceSampler:
	//     tenant: "{your-environment-id}"
	//     clusterId: 1234
	DynatraceSampler *MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSampler `json:"dynatraceSampler,omitempty"`
}

// Defines configuration for an HTTP service that can be used by an Extension Provider.
// that does communication via HTTP.
type MeshConfigExtensionProviderHttpService struct {
	// REQUIRED. Specifies the path on the service.
	// +kubebuilder:validation:Required
	Path *string `json:"path"`
	// Optional. Specifies the timeout for the HTTP request.
	// If not specified, the default is 3s.
	Timeout *metav1.Duration `json:"timeout,omitempty"`
	// Optional. Allows specifying custom HTTP headers that will be added
	// to each HTTP request sent.
	Headers []*MeshConfigExtensionProviderHttpHeader `json:"headers,omitempty"`
}

// +kubebuilder:validation:XValidation:message="At most one of [value envName] should be set",rule="(has(self.value)?1:0) + (has(self.envName)?1:0) <= 1"
type MeshConfigExtensionProviderHttpHeader struct {
	// REQUIRED. The HTTP header name.
	// +kubebuilder:validation:Required
	Name *string `json:"name"`

	// The HTTP header value.
	Value *string `json:"value,omitempty"`

	// The HTTP header value from the environment variable.
	//
	// Warning:
	// - The environment variable must be set in the istiod pod spec.
	// - This is not a end-to-end secure.
	EnvName *string `json:"envName,omitempty"`
}

type MeshConfigExtensionProviderResourceDetectors struct {
	Environment *MeshConfigExtensionProviderResourceDetectorsEnvironmentResourceDetector `json:"environment,omitempty"`
	Dynatrace   *MeshConfigExtensionProviderResourceDetectorsDynatraceResourceDetector   `json:"dynatrace,omitempty"`
}

// Defines configuration for an GRPC service that can be used by an Extension Provider.
// that does communication via GRPC.
type MeshConfigExtensionProviderGrpcService struct {
	// Optional. Specifies the timeout for the GRPC request.
	Timeout *metav1.Duration `json:"timeout,omitempty"`
	// Optional. Additional metadata to include in streams initiated to the GrpcService. This can be used for
	// scenarios in which additional ad hoc authorization headers (e.g. "x-foo-bar: baz-key") are to
	// be injected.
	InitialMetadata []*MeshConfigExtensionProviderHttpHeader `json:"initialMetadata,omitempty"`
}

type MeshConfigExtensionProviderStackdriverProviderLogging struct {
	// Collection of tag names and tag expressions to include in the log
	// entry. Conflicts are resolved by the tag name by overriding previously
	// supplied values.
	//
	// Example:
	//
	//	labels:
	//	  path: request.url_path
	//	  foo: request.headers['x-foo']
	Labels map[string]string `json:"labels,omitempty"`
}

// +kubebuilder:validation:XValidation:message="At most one of [text labels] should be set",rule="(has(self.text)?1:0) + (has(self.labels)?1:0) <= 1"
type MeshConfigExtensionProviderEnvoyFileAccessLogProviderLogFormat struct {
	// Textual format for the envoy access logs. Envoy [command operators](https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#command-operators) may be
	// used in the format. The [format string documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#config-access-log-format-strings)
	// provides more information.
	//
	// NOTE: Istio will insert a newline ('\n') on all formats (if missing).
	//
	// Example: `text: "%LOCAL_REPLY_BODY%:%RESPONSE_CODE%:path=%REQ(:path)%"`
	Text *string `json:"text,omitempty"`

	// JSON structured format for the envoy access logs. Envoy [command operators](https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#command-operators)
	// can be used as values for fields within the Struct. Values are rendered
	// as strings, numbers, or boolean values, as appropriate
	// (see: [format dictionaries](https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#config-access-log-format-dictionaries)). Nested JSON is
	// supported for some command operators (e.g. `FILTER_STATE` or `DYNAMIC_METADATA`).
	// Use `labels: {}` for default envoy JSON log format.
	//
	// Example:
	// ```
	// labels:
	//
	//	status: "%RESPONSE_CODE%"
	//	message: "%LOCAL_REPLY_BODY%"
	//
	// ```
	Labels map[string]string `json:"labels,omitempty"`
}

type MeshConfigExtensionProviderEnvoyOpenTelemetryLogProviderLogFormat struct {
	// Textual format for the envoy access logs. Envoy [command operators](https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#command-operators) may be
	// used in the format. The [format string documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#config-access-log-format-strings)
	// provides more information.
	// Alias to `body` field in [Open Telemetry](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/access_loggers/open_telemetry/v3/logs_service.proto)
	// Example: `text: "%LOCAL_REPLY_BODY%:%RESPONSE_CODE%:path=%REQ(:path)%"`
	Text *string `json:"text,omitempty"`
	// Optional. Additional attributes that describe the specific event occurrence.
	// Structured format for the envoy access logs. Envoy [command operators](https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#command-operators)
	// can be used as values for fields within the Struct. Values are rendered
	// as strings, numbers, or boolean values, as appropriate
	// (see: [format dictionaries](https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#config-access-log-format-dictionaries)). Nested JSON is
	// supported for some command operators (e.g. FILTER_STATE or DYNAMIC_METADATA).
	// Alias to `attributes` field in [Open Telemetry](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/access_loggers/open_telemetry/v3/logs_service.proto)
	//
	// Example:
	// ```
	// labels:
	//
	//	status: "%RESPONSE_CODE%"
	//	message: "%LOCAL_REPLY_BODY%"
	//
	// ```
	Labels map[string]string `json:"labels,omitempty"`
}

type MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSampler struct {
	// REQUIRED. The Dynatrace customer's tenant identifier.
	//
	// The value can be obtained from the Istio deployment page in Dynatrace.
	// +kubebuilder:validation:Required
	Tenant *string `json:"tenant"`
	// REQUIRED. The identifier of the cluster in the Dynatrace platform.
	// The cluster here is Dynatrace-specific concept and not related to the cluster concept in Istio/Envoy.
	//
	// The value can be obtained from the Istio deployment page in Dynatrace.
	// +kubebuilder:validation:Required
	ClusterId *int32 `json:"clusterId"`
	// Optional. Number of sampled spans per minute to be used
	// when the adaptive value cannot be obtained from the Dynatrace API.
	//
	// A default value of `1000` is used when:
	//
	// - `rootSpansPerMinute` is unset
	// - `rootSpansPerMinute` is set to 0
	RootSpansPerMinute *uint32 `json:"rootSpansPerMinute,omitempty"`
	// Optional. Dynatrace HTTP API to obtain sampling configuration.
	//
	// When not provided, the Dynatrace Sampler will re-use the configuration from the OpenTelemetryTracingProvider HTTP Exporter
	// (`service`, `port` and `http`), including the access token.
	HttpService *MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSamplerDynatraceApi `json:"httpService,omitempty"`
}

type MeshConfigExtensionProviderOpenTelemetryTracingProviderDynatraceSamplerDynatraceApi struct {
	// REQUIRED. Specifies the Dynatrace environment to obtain the sampling configuration.
	// The format is `<Hostname>`, where `<Hostname>` is the fully qualified Dynatrace environment
	// host name defined in the ServiceEntry.
	//
	// Example: "{your-environment-id}.live.dynatrace.com".
	// +kubebuilder:validation:Required
	Service *string `json:"service"`
	// REQUIRED. Specifies the port of the service.
	// +kubebuilder:validation:Required
	Port *uint32 `json:"port"`
	// REQUIRED. Specifies sampling configuration URI.
	// +kubebuilder:validation:Required
	Http *MeshConfigExtensionProviderHttpService `json:"http"`
}

// OpenTelemetry Environment Resource Detector.
// The resource detector reads attributes from the environment variable `OTEL_RESOURCE_ATTRIBUTES`
// and adds them to the OpenTelemetry resource.
//
// See: [Resource specification](https://opentelemetry.io/docs/specs/otel/resource/sdk/#specifying-resource-information-via-an-environment-variable)
type MeshConfigExtensionProviderResourceDetectorsEnvironmentResourceDetector struct {
}

// Dynatrace Resource Detector.
// The resource detector reads from the Dynatrace enrichment files
// and adds host/process related attributes to the OpenTelemetry resource.
//
// See: [Enrich ingested data with Dynatrace-specific dimensions](https://docs.dynatrace.com/docs/shortlink/enrichment-files)
type MeshConfigExtensionProviderResourceDetectorsDynatraceResourceDetector struct {
}

const fileMeshV1alpha1ConfigProtoRawDesc = "" +
	"\n" +
	"\x1amesh/v1alpha1/config.proto\x12\x13istio.mesh.v1alpha1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x19mesh/v1alpha1/proxy.proto\x1a*networking/v1alpha3/destination_rule.proto\x1a)networking/v1alpha3/virtual_service.proto\"\xebh\n" +
	"\n" +
	"MeshConfig\x12*\n" +
	"\x11proxy_listen_port\x18\x04 \x01(\x05R\x0fproxyListenPort\x129\n" +
	"\x19proxy_inbound_listen_port\x18A \x01(\x05R\x16proxyInboundListenPort\x12&\n" +
	"\x0fproxy_http_port\x18\x05 \x01(\x05R\rproxyHttpPort\x12B\n" +
	"\x0fconnect_timeout\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\x0econnectTimeout\x12W\n" +
	"\x1aprotocol_detection_timeout\x18* \x01(\v2\x19.google.protobuf.DurationR\x18protocolDetectionTimeout\x12o\n" +
	"\rtcp_keepalive\x18\x1c \x01(\v2J.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepaliveR\ftcpKeepalive\x12#\n" +
	"\ringress_class\x18\a \x01(\tR\fingressClass\x12'\n" +
	"\x0fingress_service\x18\b \x01(\tR\x0eingressService\x12m\n" +
	"\x17ingress_controller_mode\x18\t \x01(\x0e25.istio.mesh.v1alpha1.MeshConfig.IngressControllerModeR\x15ingressControllerMode\x12)\n" +
	"\x10ingress_selector\x184 \x01(\tR\x0fingressSelector\x12%\n" +
	"\x0eenable_tracing\x18\f \x01(\bR\renableTracing\x12&\n" +
	"\x0faccess_log_file\x18\r \x01(\tR\raccessLogFile\x12*\n" +
	"\x11access_log_format\x18\x18 \x01(\tR\x0faccessLogFormat\x12a\n" +
	"\x13access_log_encoding\x18\x1b \x01(\x0e21.istio.mesh.v1alpha1.MeshConfig.AccessLogEncodingR\x11accessLogEncoding\x12D\n" +
	"\x1fenable_envoy_access_log_service\x18( \x01(\bR\x1benableEnvoyAccessLogService\x12;\n" +
	"\x1adisable_envoy_listener_log\x188 \x01(\bR\x17disableEnvoyListenerLog\x12G\n" +
	"\x0edefault_config\x18\x0e \x01(\v2 .istio.mesh.v1alpha1.ProxyConfigR\rdefaultConfig\x12m\n" +
	"\x17outbound_traffic_policy\x18\x11 \x01(\v25.istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicyR\x15outboundTrafficPolicy\x12j\n" +
	"\x16inbound_traffic_policy\x18B \x01(\v24.istio.mesh.v1alpha1.MeshConfig.InboundTrafficPolicyR\x14inboundTrafficPolicy\x12H\n" +
	"\x0econfig_sources\x18\x16 \x03(\v2!.istio.mesh.v1alpha1.ConfigSourceR\rconfigSources\x12D\n" +
	"\x10enable_auto_mtls\x18+ \x01(\v2\x1a.google.protobuf.BoolValueR\x0eenableAutoMtls\x12!\n" +
	"\ftrust_domain\x18\x1a \x01(\tR\vtrustDomain\x120\n" +
	"\x14trust_domain_aliases\x18. \x03(\tR\x12trustDomainAliases\x12X\n" +
	"\x0fca_certificates\x18: \x03(\v2/.istio.mesh.v1alpha1.MeshConfig.CertificateDataR\x0ecaCertificates\x129\n" +
	"\x19default_service_export_to\x18\x1f \x03(\tR\x16defaultServiceExportTo\x12H\n" +
	"!default_virtual_service_export_to\x18  \x03(\tR\x1ddefaultVirtualServiceExportTo\x12J\n" +
	"\"default_destination_rule_export_to\x18! \x03(\tR\x1edefaultDestinationRuleExportTo\x12%\n" +
	"\x0eroot_namespace\x18\" \x01(\tR\rrootNamespace\x12f\n" +
	"\x13locality_lb_setting\x18# \x01(\v26.istio.networking.v1alpha3.LocalityLoadBalancerSettingR\x11localityLbSetting\x12C\n" +
	"\x10dns_refresh_rate\x18$ \x01(\v2\x19.google.protobuf.DurationR\x0ednsRefreshRate\x12[\n" +
	"\x11h2_upgrade_policy\x18) \x01(\x0e2/.istio.mesh.v1alpha1.MeshConfig.H2UpgradePolicyR\x0fh2UpgradePolicy\x129\n" +
	"\x19inbound_cluster_stat_name\x18, \x01(\tR\x16inboundClusterStatName\x12;\n" +
	"\x1aoutbound_cluster_stat_name\x18- \x01(\tR\x17outboundClusterStatName\x12H\n" +
	"\fcertificates\x18/ \x03(\v2 .istio.mesh.v1alpha1.CertificateB\x02\x18\x01R\fcertificates\x12Z\n" +
	"\x10service_settings\x182 \x03(\v2/.istio.mesh.v1alpha1.MeshConfig.ServiceSettingsR\x0fserviceSettings\x12R\n" +
	"\x17enable_prometheus_merge\x183 \x01(\v2\x1a.google.protobuf.BoolValueR\x15enablePrometheusMerge\x12_\n" +
	"\x1cverify_certificate_at_client\x186 \x01(\v2\x1a.google.protobuf.BoolValueB\x02\x18\x01R\x19verifyCertificateAtClient\x122\n" +
	"\x02ca\x187 \x01(\v2\".istio.mesh.v1alpha1.MeshConfig.CAR\x02ca\x12b\n" +
	"\x13extension_providers\x189 \x03(\v21.istio.mesh.v1alpha1.MeshConfig.ExtensionProviderR\x12extensionProviders\x12]\n" +
	"\x11default_providers\x18< \x01(\v20.istio.mesh.v1alpha1.MeshConfig.DefaultProvidersR\x10defaultProviders\x12S\n" +
	"\x13discovery_selectors\x18; \x03(\v2\".istio.mesh.v1alpha1.LabelSelectorR\x12discoverySelectors\x12e\n" +
	"\x12path_normalization\x18= \x01(\v26.istio.mesh.v1alpha1.MeshConfig.ProxyPathNormalizationR\x11pathNormalization\x12_\n" +
	"\x19default_http_retry_policy\x18> \x01(\v2$.istio.networking.v1alpha3.HTTPRetryR\x16defaultHttpRetryPolicy\x12F\n" +
	"\tmesh_mTLS\x18? \x01(\v2).istio.mesh.v1alpha1.MeshConfig.TLSConfigR\bmeshMTLS\x12L\n" +
	"\ftls_defaults\x18@ \x01(\v2).istio.mesh.v1alpha1.MeshConfig.TLSConfigR\vtlsDefaults\x1a\xad\x01\n" +
	"\x15OutboundTrafficPolicy\x12N\n" +
	"\x04mode\x18\x01 \x01(\x0e2:.istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy.ModeR\x04mode\"D\n" +
	"\x04Mode\x12\x11\n" +
	"\rREGISTRY_ONLY\x10\x00\x12\r\n" +
	"\tALLOW_ANY\x10\x01\"\x04\b\x02\x10\x02*\x14VIRTUAL_SERVICE_ONLY\x1a\x8d\x01\n" +
	"\x14InboundTrafficPolicy\x12M\n" +
	"\x04mode\x18\x01 \x01(\x0e29.istio.mesh.v1alpha1.MeshConfig.InboundTrafficPolicy.ModeR\x04mode\"&\n" +
	"\x04Mode\x12\x0f\n" +
	"\vPASSTHROUGH\x10\x00\x12\r\n" +
	"\tLOCALHOST\x10\x01\x1a\xaf\x01\n" +
	"\x0fCertificateData\x12\x12\n" +
	"\x03pem\x18\x01 \x01(\tH\x00R\x03pem\x12,\n" +
	"\x11spiffe_bundle_url\x18\x02 \x01(\tH\x00R\x0fspiffeBundleUrl\x12!\n" +
	"\fcert_signers\x18\x03 \x03(\tR\vcertSigners\x12#\n" +
	"\rtrust_domains\x18\x04 \x03(\tR\ftrustDomainsB\x12\n" +
	"\x10certificate_data\x1a\xae\x01\n" +
	"\x0fServiceSettings\x12T\n" +
	"\bsettings\x18\x01 \x01(\v28.istio.mesh.v1alpha1.MeshConfig.ServiceSettings.SettingsR\bsettings\x12\x14\n" +
	"\x05hosts\x18\x02 \x03(\tR\x05hosts\x1a/\n" +
	"\bSettings\x12#\n" +
	"\rcluster_local\x18\x01 \x01(\bR\fclusterLocal\x1a\xd4\x01\n" +
	"\x02CA\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12O\n" +
	"\ftls_settings\x18\x02 \x01(\v2,.istio.networking.v1alpha3.ClientTLSSettingsR\vtlsSettings\x12B\n" +
	"\x0frequest_timeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x0erequestTimeout\x12\x1f\n" +
	"\vistiod_side\x18\x04 \x01(\bR\n" +
	"istiodSide\x1a\xcc=\n" +
	"\x11ExtensionProvider\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x8b\x01\n" +
	"\x14envoy_ext_authz_http\x18\x02 \x01(\v2X.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationHttpProviderH\x00R\x11envoyExtAuthzHttp\x12\x8b\x01\n" +
	"\x14envoy_ext_authz_grpc\x18\x03 \x01(\v2X.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationGrpcProviderH\x00R\x11envoyExtAuthzGrpc\x12a\n" +
	"\x06zipkin\x18\x04 \x01(\v2G.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.ZipkinTracingProviderH\x00R\x06zipkin\x12n\n" +
	"\tlightstep\x18\x05 \x01(\v2J.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.LightstepTracingProviderB\x02\x18\x01H\x00R\tlightstep\x12d\n" +
	"\adatadog\x18\x06 \x01(\v2H.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.DatadogTracingProviderH\x00R\adatadog\x12i\n" +
	"\vstackdriver\x18\a \x01(\v2E.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.StackdriverProviderH\x00R\vstackdriver\x12v\n" +
	"\n" +
	"opencensus\x18\b \x01(\v2P.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenCensusAgentTracingProviderB\x02\x18\x01H\x00R\n" +
	"opencensus\x12m\n" +
	"\n" +
	"skywalking\x18\t \x01(\v2K.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.SkyWalkingTracingProviderH\x00R\n" +
	"skywalking\x12v\n" +
	"\ropentelemetry\x18\x0f \x01(\v2N.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenTelemetryTracingProviderH\x00R\ropentelemetry\x12m\n" +
	"\n" +
	"prometheus\x18\n" +
	" \x01(\v2K.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.PrometheusMetricsProviderH\x00R\n" +
	"prometheus\x12\x81\x01\n" +
	"\x15envoy_file_access_log\x18\v \x01(\v2L.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyFileAccessLogProviderH\x00R\x12envoyFileAccessLog\x12t\n" +
	"\x0eenvoy_http_als\x18\f \x01(\v2L.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyHttpGrpcV3LogProviderH\x00R\fenvoyHttpAls\x12q\n" +
	"\renvoy_tcp_als\x18\r \x01(\v2K.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyTcpGrpcV3LogProviderH\x00R\venvoyTcpAls\x12w\n" +
	"\x0eenvoy_otel_als\x18\x0e \x01(\v2O.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyOpenTelemetryLogProviderH\x00R\fenvoyOtelAls\x1a\xab\x01\n" +
	"%EnvoyExternalAuthorizationRequestBody\x12*\n" +
	"\x11max_request_bytes\x18\x01 \x01(\rR\x0fmaxRequestBytes\x122\n" +
	"\x15allow_partial_message\x18\x02 \x01(\bR\x13allowPartialMessage\x12\"\n" +
	"\rpack_as_bytes\x18\x03 \x01(\bR\vpackAsBytes\x1a\xa6\b\n" +
	"&EnvoyExternalAuthorizationHttpProvider\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x123\n" +
	"\atimeout\x18\t \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12\x1f\n" +
	"\vpath_prefix\x18\x03 \x01(\tR\n" +
	"pathPrefix\x12\x1b\n" +
	"\tfail_open\x18\x04 \x01(\bR\bfailOpen\x12*\n" +
	"\x11clear_route_cache\x18\x0e \x01(\bR\x0fclearRouteCache\x12&\n" +
	"\x0fstatus_on_error\x18\x05 \x01(\tR\rstatusOnError\x12;\n" +
	"\x18include_headers_in_check\x18\x06 \x03(\tB\x02\x18\x01R\x15includeHeadersInCheck\x12F\n" +
	" include_request_headers_in_check\x18\n" +
	" \x03(\tR\x1cincludeRequestHeadersInCheck\x12\xcb\x01\n" +
	"#include_additional_headers_in_check\x18\v \x03(\v2}.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationHttpProvider.IncludeAdditionalHeadersInCheckEntryR\x1fincludeAdditionalHeadersInCheck\x12\x99\x01\n" +
	"\x1dinclude_request_body_in_check\x18\f \x01(\v2W.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationRequestBodyR\x19includeRequestBodyInCheck\x12>\n" +
	"\x1cheaders_to_upstream_on_allow\x18\a \x03(\tR\x18headersToUpstreamOnAllow\x12@\n" +
	"\x1dheaders_to_downstream_on_deny\x18\b \x03(\tR\x19headersToDownstreamOnDeny\x12B\n" +
	"\x1eheaders_to_downstream_on_allow\x18\r \x03(\tR\x1aheadersToDownstreamOnAllow\x1aR\n" +
	"$IncludeAdditionalHeadersInCheckEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\x98\x03\n" +
	"&EnvoyExternalAuthorizationGrpcProvider\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x123\n" +
	"\atimeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12\x1b\n" +
	"\tfail_open\x18\x03 \x01(\bR\bfailOpen\x12*\n" +
	"\x11clear_route_cache\x18\a \x01(\bR\x0fclearRouteCache\x12&\n" +
	"\x0fstatus_on_error\x18\x04 \x01(\tR\rstatusOnError\x12\x99\x01\n" +
	"\x1dinclude_request_body_in_check\x18\x06 \x01(\v2W.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyExternalAuthorizationRequestBodyR\x19includeRequestBodyInCheck\x1a\xb2\x01\n" +
	"\x15ZipkinTracingProvider\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12$\n" +
	"\x0emax_tag_length\x18\x03 \x01(\rR\fmaxTagLength\x121\n" +
	"\x15enable_64bit_trace_id\x18\x04 \x01(\bR\x12enable64bitTraceId\x12\x12\n" +
	"\x04path\x18\x05 \x01(\tR\x04path\x1a\x91\x01\n" +
	"\x18LightstepTracingProvider\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12!\n" +
	"\faccess_token\x18\x03 \x01(\tR\vaccessToken\x12$\n" +
	"\x0emax_tag_length\x18\x04 \x01(\rR\fmaxTagLength\x1al\n" +
	"\x16DatadogTracingProvider\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12$\n" +
	"\x0emax_tag_length\x18\x03 \x01(\rR\fmaxTagLength\x1al\n" +
	"\x19SkyWalkingTracingProvider\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12!\n" +
	"\faccess_token\x18\x03 \x01(\tR\vaccessToken\x1a\x8f\x05\n" +
	"\x13StackdriverProvider\x12\x18\n" +
	"\x05debug\x18\x01 \x01(\bB\x02\x18\x01R\x05debug\x12X\n" +
	"\x18max_number_of_attributes\x18\x02 \x01(\v2\x1b.google.protobuf.Int64ValueB\x02\x18\x01R\x15maxNumberOfAttributes\x12Z\n" +
	"\x19max_number_of_annotations\x18\x03 \x01(\v2\x1b.google.protobuf.Int64ValueB\x02\x18\x01R\x16maxNumberOfAnnotations\x12_\n" +
	"\x1cmax_number_of_message_events\x18\x04 \x01(\v2\x1b.google.protobuf.Int64ValueB\x02\x18\x01R\x18maxNumberOfMessageEvents\x12$\n" +
	"\x0emax_tag_length\x18\x05 \x01(\rR\fmaxTagLength\x12g\n" +
	"\alogging\x18\x06 \x01(\v2M.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.StackdriverProvider.LoggingR\alogging\x1a\xb7\x01\n" +
	"\aLogging\x12q\n" +
	"\x06labels\x18\x01 \x03(\v2Y.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.StackdriverProvider.Logging.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\xd4\x02\n" +
	"\x1eOpenCensusAgentTracingProvider\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12w\n" +
	"\acontext\x18\x03 \x03(\x0e2].istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenCensusAgentTracingProvider.TraceContextR\acontext\x12$\n" +
	"\x0emax_tag_length\x18\x04 \x01(\rR\fmaxTagLength\"e\n" +
	"\fTraceContext\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11W3C_TRACE_CONTEXT\x10\x01\x12\f\n" +
	"\bGRPC_BIN\x10\x02\x12\x17\n" +
	"\x13CLOUD_TRACE_CONTEXT\x10\x03\x12\x06\n" +
	"\x02B3\x10\x04\x1a\x1b\n" +
	"\x19PrometheusMetricsProvider\x1a\xb7\x02\n" +
	"\x1aEnvoyFileAccessLogProvider\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12u\n" +
	"\n" +
	"log_format\x18\x02 \x01(\v2V.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyFileAccessLogProvider.LogFormatR\tlogFormat\x12*\n" +
	"\x11omit_empty_values\x18\x03 \x01(\bR\x0fomitEmptyValues\x1ab\n" +
	"\tLogFormat\x12\x14\n" +
	"\x04text\x18\x01 \x01(\tH\x00R\x04text\x121\n" +
	"\x06labels\x18\x02 \x01(\v2\x17.google.protobuf.StructH\x00R\x06labelsB\f\n" +
	"\n" +
	"log_format\x1a\x87\x03\n" +
	"\x1aEnvoyHttpGrpcV3LogProvider\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x19\n" +
	"\blog_name\x18\x03 \x01(\tR\alogName\x12<\n" +
	"\x1bfilter_state_objects_to_log\x18\x04 \x03(\tR\x17filterStateObjectsToLog\x12H\n" +
	"!additional_request_headers_to_log\x18\x05 \x03(\tR\x1dadditionalRequestHeadersToLog\x12J\n" +
	"\"additional_response_headers_to_log\x18\x06 \x03(\tR\x1eadditionalResponseHeadersToLog\x12L\n" +
	"#additional_response_trailers_to_log\x18\a \x03(\tR\x1fadditionalResponseTrailersToLog\x1a\xa2\x01\n" +
	"\x19EnvoyTcpGrpcV3LogProvider\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x19\n" +
	"\blog_name\x18\x03 \x01(\tR\alogName\x12<\n" +
	"\x1bfilter_state_objects_to_log\x18\x04 \x03(\tR\x17filterStateObjectsToLog\x1a\xb4\x02\n" +
	"\x1dEnvoyOpenTelemetryLogProvider\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x19\n" +
	"\blog_name\x18\x03 \x01(\tR\alogName\x12x\n" +
	"\n" +
	"log_format\x18\x04 \x01(\v2Y.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.EnvoyOpenTelemetryLogProvider.LogFormatR\tlogFormat\x1aP\n" +
	"\tLogFormat\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12/\n" +
	"\x06labels\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06labels\x1a\xcc\a\n" +
	"\x1cOpenTelemetryTracingProvider\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12$\n" +
	"\x0emax_tag_length\x18\x03 \x01(\rR\fmaxTagLength\x12Q\n" +
	"\x04http\x18\x04 \x01(\v2=.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.HttpServiceR\x04http\x12Q\n" +
	"\x04grpc\x18\a \x01(\v2=.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.GrpcServiceR\x04grpc\x12r\n" +
	"\x12resource_detectors\x18\x05 \x01(\v2C.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.ResourceDetectorsR\x11resourceDetectors\x12\x8e\x01\n" +
	"\x11dynatrace_sampler\x18\x06 \x01(\v2_.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenTelemetryTracingProvider.DynatraceSamplerH\x00R\x10dynatraceSampler\x1a\xa0\x03\n" +
	"\x10DynatraceSampler\x12\x16\n" +
	"\x06tenant\x18\x01 \x01(\tR\x06tenant\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\x05R\tclusterId\x121\n" +
	"\x15root_spans_per_minute\x18\x03 \x01(\rR\x12rootSpansPerMinute\x12\x8f\x01\n" +
	"\fhttp_service\x18\x04 \x01(\v2l.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.OpenTelemetryTracingProvider.DynatraceSampler.DynatraceApiR\vhttpService\x1a\x8f\x01\n" +
	"\fDynatraceApi\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12Q\n" +
	"\x04http\x18\x03 \x01(\v2=.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.HttpServiceR\x04httpB\n" +
	"\n" +
	"\bsampling\x1a\xae\x01\n" +
	"\vHttpService\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x123\n" +
	"\atimeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12V\n" +
	"\aheaders\x18\x03 \x03(\v2<.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.HttpHeaderR\aheaders\x1ae\n" +
	"\n" +
	"HttpHeader\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x05value\x18\x02 \x01(\tH\x00R\x05value\x12\x1b\n" +
	"\benv_name\x18\x03 \x01(\tH\x00R\aenvNameB\x0e\n" +
	"\fheader_value\x1a\xd0\x02\n" +
	"\x11ResourceDetectors\x12\x81\x01\n" +
	"\venvironment\x18\x01 \x01(\v2_.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.ResourceDetectors.EnvironmentResourceDetectorR\venvironment\x12{\n" +
	"\tdynatrace\x18\x02 \x01(\v2].istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.ResourceDetectors.DynatraceResourceDetectorR\tdynatrace\x1a\x1d\n" +
	"\x1bEnvironmentResourceDetector\x1a\x1b\n" +
	"\x19DynatraceResourceDetector\x1a\xab\x01\n" +
	"\vGrpcService\x123\n" +
	"\atimeout\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12g\n" +
	"\x10initial_metadata\x18\x02 \x03(\v2<.istio.mesh.v1alpha1.MeshConfig.ExtensionProvider.HttpHeaderR\x0finitialMetadataB\n" +
	"\n" +
	"\bprovider\x1am\n" +
	"\x10DefaultProviders\x12\x18\n" +
	"\atracing\x18\x01 \x03(\tR\atracing\x12\x18\n" +
	"\ametrics\x18\x02 \x03(\tR\ametrics\x12%\n" +
	"\x0eaccess_logging\x18\x03 \x03(\tR\raccessLogging\x1a\xef\x01\n" +
	"\x16ProxyPathNormalization\x12n\n" +
	"\rnormalization\x18\x01 \x01(\x0e2H.istio.mesh.v1alpha1.MeshConfig.ProxyPathNormalization.NormalizationTypeR\rnormalization\"e\n" +
	"\x11NormalizationType\x12\v\n" +
	"\aDEFAULT\x10\x00\x12\b\n" +
	"\x04NONE\x10\x01\x12\b\n" +
	"\x04BASE\x10\x02\x12\x11\n" +
	"\rMERGE_SLASHES\x10\x03\x12\x1c\n" +
	"\x18DECODE_AND_MERGE_SLASHES\x10\x04\x1a\xf1\x01\n" +
	"\tTLSConfig\x12g\n" +
	"\x14min_protocol_version\x18\x01 \x01(\x0e25.istio.mesh.v1alpha1.MeshConfig.TLSConfig.TLSProtocolR\x12minProtocolVersion\x12\x1f\n" +
	"\vecdh_curves\x18\x02 \x03(\tR\n" +
	"ecdhCurves\x12#\n" +
	"\rcipher_suites\x18\x03 \x03(\tR\fcipherSuites\"5\n" +
	"\vTLSProtocol\x12\f\n" +
	"\bTLS_AUTO\x10\x00\x12\v\n" +
	"\aTLSV1_2\x10\x01\x12\v\n" +
	"\aTLSV1_3\x10\x02\"J\n" +
	"\x15IngressControllerMode\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\a\n" +
	"\x03OFF\x10\x01\x12\v\n" +
	"\aDEFAULT\x10\x02\x12\n" +
	"\n" +
	"\x06STRICT\x10\x03\"&\n" +
	"\n" +
	"AuthPolicy\x12\b\n" +
	"\x04NONE\x10\x00\x12\x0e\n" +
	"\n" +
	"MUTUAL_TLS\x10\x01\"'\n" +
	"\x11AccessLogEncoding\x12\b\n" +
	"\x04TEXT\x10\x00\x12\b\n" +
	"\x04JSON\x10\x01\"2\n" +
	"\x0fH2UpgradePolicy\x12\x12\n" +
	"\x0eDO_NOT_UPGRADE\x10\x00\x12\v\n" +
	"\aUPGRADE\x10\x01J\x04\b1\x102J\x04\b\x01\x10\x02J\x04\b\x02\x10\x03J\x04\b\x03\x10\x04J\x04\b0\x101J\x04\b\x19\x10\x1aJ\x04\b\x1e\x10\x1fJ\x04\b\n" +
	"\x10\vJ\x04\b\v\x10\fJ\x04\b\x0f\x10\x10J\x04\b\x10\x10\x11J\x04\b\x12\x10\x13J\x04\b\x13\x10\x14J\x04\b\x14\x10\x15J\x04\b\x15\x10\x16J\x04\b\x17\x10\x18J\x04\b\x1d\x10\x1eJ\x04\b5\x106J\x04\b%\x10&J\x04\b&\x10'J\x04\b'\x10(R\rthrift_configR\x12mixer_check_serverR\x13mixer_report_serverR\x15disable_policy_checksR\x1adisable_mixer_http_reportsR\x16policy_check_fail_openR%sidecar_to_telemetry_session_affinityR\vauth_policyR\x11rds_refresh_delayR\rmixer_addressR\x1fenable_client_side_policy_checkR\fsds_uds_pathR\x11sds_refresh_delayR\x16enable_sds_token_mountR\x12sds_use_k8s_sa_jwtR\x1atermination_drain_durationR\x14disable_report_batchR\x18report_batch_max_entriesR\x15report_batch_max_time\"\x81\x02\n" +
	"\rLabelSelector\x12U\n" +
	"\vmatchLabels\x18\x01 \x03(\v23.istio.mesh.v1alpha1.LabelSelector.MatchLabelsEntryR\vmatchLabels\x12Y\n" +
	"\x10matchExpressions\x18\x02 \x03(\v2-.istio.mesh.v1alpha1.LabelSelectorRequirementR\x10matchExpressions\x1a>\n" +
	"\x10MatchLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"`\n" +
	"\x18LabelSelectorRequirement\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1a\n" +
	"\boperator\x18\x02 \x01(\tR\boperator\x12\x16\n" +
	"\x06values\x18\x03 \x03(\tR\x06values\"\xcb\x01\n" +
	"\fConfigSource\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12O\n" +
	"\ftls_settings\x18\x02 \x01(\v2,.istio.networking.v1alpha3.ClientTLSSettingsR\vtlsSettings\x12P\n" +
	"\x14subscribed_resources\x18\x03 \x03(\x0e2\x1d.istio.mesh.v1alpha1.ResourceR\x13subscribedResources\"K\n" +
	"\vCertificate\x12\x1f\n" +
	"\vsecret_name\x18\x01 \x01(\tR\n" +
	"secretName\x12\x1b\n" +
	"\tdns_names\x18\x02 \x03(\tR\bdnsNames* \n" +
	"\bResource\x12\x14\n" +
	"\x10SERVICE_REGISTRY\x10\x00B\x1cZ\x1aistio.io/api/mesh/v1alpha1b\x06proto3"

	// Network provides information about the endpoints in a routable L3
// network. A single routable L3 network can have one or more service
// registries. Note that the network has no relation to the locality of the
// endpoint. The endpoint locality will be obtained from the service
// registry.
type Network struct {
	// The list of endpoints in the network (obtained through the
	// constituent service registries or from CIDR ranges). All endpoints in
	// the network are directly accessible to one another.
	Endpoints []*NetworkNetworkEndpoints `json:"endpoints,omitempty"`
	// Set of gateways associated with the network.
	Gateways []*NetworkIstioNetworkGateway `json:"gateways,omitempty"`
}

// MeshNetworks (config map) provides information about the set of networks
// inside a mesh and how to route to endpoints in each network. For example
//
// MeshNetworks(file/config map):
//
// ```yaml
// networks:
//
//	network1:
//	  endpoints:
//	  - fromRegistry: registry1 #must match kubeconfig name in Kubernetes secret
//	  - fromCidr: 192.168.100.0/22 #a VM network for example
//	  gateways:
//	  - registryServiceName: istio-ingressgateway.istio-system.svc.cluster.local
//	    port: 15443
//	    locality: us-east-1a
//	  - address: 192.168.100.1
//	    port: 15443
//	    locality: us-east-1a
//
// ```
//
// If `ENABLE_HCM_INTERNAL_NETWORKS` is set to true, MeshNetworks can be used to
// to explicitly define the networks in Envoy's internal address configuration.
// Envoy uses the IPs in the `internalAddressConfig` to decide whether or not to sanitize
// Envoy headers. If the IP address is listed an internal, the Envoy headers are not
// sanitized. As of Envoy 1.33, the default value for `internalAddressConfig` is set to
// an empty set. Previously, the default value was the set of all private IPs. Setting
// the `internalAddressConfig` to all private IPs (via Envoy's previous default behavior
// or via the MeshNetworks) will leave users with an Istio Ingress Gateway potentially
// vulnerable to `x-envoy` header manipulation by external sources. More information about
// this vulnerability can be found here:
// https://github.com/envoyproxy/envoy/security/advisories/GHSA-ffhv-fvxq-r6mf
// To preserve headers, you must explicitly configure MeshNetworks and set
// `ENABLE_HCM_INTERNAL_NETWORKS` to true. Envoy's `internalAddressConfig` will be set to
// the endpointed specified by `fromCidr`.
type MeshNetworks struct {
	// The set of networks inside this mesh. Each network should
	// have a unique name and information about how to infer the endpoints in
	// the network as well as the gateways associated with the network.
	Networks map[string]*Network `json:"networks,omitempty"`
}

// NetworkEndpoints describes how the network associated with an endpoint
// should be inferred. An endpoint will be assigned to a network based on
// the following rules:
//
// 1. Implicitly: If the registry explicitly provides information about
// the network to which the endpoint belongs to. In some cases, its
// possible to indicate the network associated with the endpoint by
// adding the `ISTIO_META_NETWORK` environment variable to the sidecar.
//
// 2. Explicitly:
//
//	a. By matching the registry name with one of the "fromRegistry"
//	in the mesh config. A "fromRegistry" can only be assigned to a
//	single network.
//
//	b. By matching the IP against one of the CIDR ranges in a mesh
//	config network. The CIDR ranges must not overlap and be assigned to
//	a single network.
//
// (2) will override (1) if both are present.
// +kubebuilder:validation:XValidation:message="At most one of [fromCidr fromRegistry] should be set",rule="(has(self.fromCidr)?1:0) + (has(self.fromRegistry)?1:0) <= 1"
type NetworkNetworkEndpoints struct {
	// A CIDR range for the set of endpoints in this network. The CIDR
	// ranges for endpoints from different networks must not overlap.
	FromCidr *string `json:"fromCidr,omitempty"`

	// Add all endpoints from the specified registry into this network.
	// The names of the registries should correspond to the kubeconfig file name
	// inside the secret that was used to configure the registry (Kubernetes
	// multicluster) or supplied by MCP server.
	FromRegistry *string `json:"fromRegistry,omitempty"`
}

// The gateway associated with this network. Traffic from remote networks
// will arrive at the specified gateway:port. All incoming traffic must
// use mTLS.
// +kubebuilder:validation:XValidation:message="At most one of [registryServiceName address] should be set",rule="(has(self.registryServiceName)?1:0) + (has(self.address)?1:0) <= 1"
type NetworkIstioNetworkGateway struct {
	// A fully qualified domain name of the gateway service.  istiod will
	// lookup the service from the service registries in the network and
	// obtain the endpoint IPs of the gateway from the service
	// registry. Note that while the service name is a fully qualified
	// domain name, it need not be resolvable outside the orchestration
	// platform for the registry. e.g., this could be
	// istio-ingressgateway.istio-system.svc.cluster.local.
	RegistryServiceName *string `json:"registryServiceName,omitempty"`

	// IP address or externally resolvable DNS address associated with the gateway.
	Address *string `json:"address,omitempty"` // The port associated with the gateway.
	Port    *uint32 `json:"port,omitempty"`
	// The locality associated with an explicitly specified gateway (i.e. ip)
	Locality *string `json:"locality,omitempty"`
}

const fileMeshV1alpha1NetworkProtoRawDesc = "" +
	"\n" +
	"\x1bmesh/v1alpha1/network.proto\x12\x13istio.mesh.v1alpha1\x1a\x1fgoogle/api/field_behavior.proto\"\xb6\x03\n" +
	"\aNetwork\x12Q\n" +
	"\tendpoints\x18\x02 \x03(\v2-.istio.mesh.v1alpha1.Network.NetworkEndpointsB\x04\xe2A\x01\x02R\tendpoints\x12R\n" +
	"\bgateways\x18\x03 \x03(\v20.istio.mesh.v1alpha1.Network.IstioNetworkGatewayB\x04\xe2A\x01\x02R\bgateways\x1a^\n" +
	"\x10NetworkEndpoints\x12\x1d\n" +
	"\tfrom_cidr\x18\x01 \x01(\tH\x00R\bfromCidr\x12%\n" +
	"\rfrom_registry\x18\x02 \x01(\tH\x00R\ffromRegistryB\x04\n" +
	"\x02ne\x1a\xa3\x01\n" +
	"\x13IstioNetworkGateway\x124\n" +
	"\x15registry_service_name\x18\x01 \x01(\tH\x00R\x13registryServiceName\x12\x1a\n" +
	"\aaddress\x18\x02 \x01(\tH\x00R\aaddress\x12\x18\n" +
	"\x04port\x18\x03 \x01(\rB\x04\xe2A\x01\x02R\x04port\x12\x1a\n" +
	"\blocality\x18\x04 \x01(\tR\blocalityB\x04\n" +
	"\x02gw\"\xbc\x01\n" +
	"\fMeshNetworks\x12Q\n" +
	"\bnetworks\x18\x01 \x03(\v2/.istio.mesh.v1alpha1.MeshNetworks.NetworksEntryB\x04\xe2A\x01\x02R\bnetworks\x1aY\n" +
	"\rNetworksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.istio.mesh.v1alpha1.NetworkR\x05value:\x028\x01B\x1cZ\x1aistio.io/api/mesh/v1alpha1b\x06proto3"

	// AuthenticationPolicy defines how the proxy is authenticated when it connects to the control plane.
// It can be set for two different scopes, mesh-wide or set on a per-pod basis using the ProxyConfig annotation.
// Mesh policy cannot be INHERIT.
// +kubebuilder:validation:Enum=NONE;MUTUAL_TLS;INHERIT
type AuthenticationPolicy string

const (
	// Do not encrypt proxy to control plane traffic.
	AuthenticationPolicyNone AuthenticationPolicy = "NONE"
	// Proxy to control plane traffic is wrapped into mutual TLS connections.
	AuthenticationPolicyMutualTls AuthenticationPolicy = "MUTUAL_TLS"
	// Use the policy defined by the parent scope. Should not be used for mesh
	// policy.
	AuthenticationPolicyInherit AuthenticationPolicy = "INHERIT"
)

// ForwardClientCertDetails controls how the x-forwarded-client-cert (XFCC)
// header is handled by a proxy.
// See [Envoy XFCC](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto.html#enum-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-forwardclientcertdetails)
// header handling for more details.
// +kubebuilder:validation:Enum=UNDEFINED;SANITIZE;FORWARD_ONLY;APPEND_FORWARD;SANITIZE_SET;ALWAYS_FORWARD_ONLY
type ForwardClientCertDetails string

const (
	// Field is not set
	ForwardClientCertDetailsUndefined ForwardClientCertDetails = "UNDEFINED"
	// Do not send the XFCC header to the next hop.
	ForwardClientCertDetailsSanitize ForwardClientCertDetails = "SANITIZE"
	// When the client connection is mTLS (Mutual TLS), forward the XFCC header
	// in the request.
	ForwardClientCertDetailsForwardOnly ForwardClientCertDetails = "FORWARD_ONLY"
	// When the client connection is mTLS, append the client certificate
	// information to the request’s XFCC header and forward it. This is the default value for sidecar proxies.
	ForwardClientCertDetailsAppendForward ForwardClientCertDetails = "APPEND_FORWARD"
	// When the client connection is mTLS, reset the XFCC header with the client
	// certificate information and send it to the next hop. This is the default value for gateway proxies.
	ForwardClientCertDetailsSanitizeSet ForwardClientCertDetails = "SANITIZE_SET"
	// Always forward the XFCC header in the request, regardless of whether the
	// client connection is mTLS.
	ForwardClientCertDetailsAlwaysForwardOnly ForwardClientCertDetails = "ALWAYS_FORWARD_ONLY"
)

// TraceContext selects the context propagation headers used for
// distributed tracing.
// +kubebuilder:validation:Enum=UNSPECIFIED;W3C_TRACE_CONTEXT;GRPC_BIN;CLOUD_TRACE_CONTEXT;B3
type TracingOpenCensusAgentTraceContext string

const (
	// +hidefromdoc
	// Unspecified context. Should not be used for now, but added to reserve
	// the 0 enum value if TraceContext is used outside of a repeated field.
	TracingOpenCensusAgentTraceContextUnspecified TracingOpenCensusAgentTraceContext = "UNSPECIFIED"
	// Use W3C Trace Context propagation using the `traceparent` HTTP header.
	// See the
	// [Trace Context documentation](https://www.w3.org/TR/trace-context/) for details.
	TracingOpenCensusAgentTraceContextW3cTraceContext TracingOpenCensusAgentTraceContext = "W3C_TRACE_CONTEXT"
	// Use gRPC binary context propagation using the `grpc-trace-bin` http header.
	TracingOpenCensusAgentTraceContextGrpcBin TracingOpenCensusAgentTraceContext = "GRPC_BIN"
	// Use Cloud Trace context propagation using the
	// `X-Cloud-Trace-Context` http header.
	TracingOpenCensusAgentTraceContextCloudTraceContext TracingOpenCensusAgentTraceContext = "CLOUD_TRACE_CONTEXT"
	// Use multi-header B3 context propagation using the `X-B3-TraceId`,
	// `X-B3-SpanId`, and `X-B3-Sampled` HTTP headers. See
	// [B3 header propagation README](https://github.com/openzipkin/b3-propagation)
	// for details.
	TracingOpenCensusAgentTraceContextB3 TracingOpenCensusAgentTraceContext = "B3"
)

// Allows specification of various Istio-supported naming schemes for the
// Envoy `service_cluster` value. The `service_cluster` value is primarily used
// by Envoys to provide service names for tracing spans.
// +kubebuilder:validation:Enum=APP_LABEL_AND_NAMESPACE;CANONICAL_NAME_ONLY;CANONICAL_NAME_AND_NAMESPACE
type ProxyConfigTracingServiceName string

const (
	// Default scheme. Uses the `app` label and workload namespace to construct
	// a cluster name. If the `app` label does not exist `istio-proxy` is used.
	ProxyConfigTracingServiceNameAppLabelAndNamespace ProxyConfigTracingServiceName = "APP_LABEL_AND_NAMESPACE"
	// Uses the canonical name for a workload (*excluding namespace*).
	ProxyConfigTracingServiceNameCanonicalNameOnly ProxyConfigTracingServiceName = "CANONICAL_NAME_ONLY"
	// Uses the canonical name and namespace for a workload.
	ProxyConfigTracingServiceNameCanonicalNameAndNamespace ProxyConfigTracingServiceName = "CANONICAL_NAME_AND_NAMESPACE"
)

// The mode used to redirect inbound traffic to Envoy.
// This setting has no effect on outbound traffic: iptables `REDIRECT` is always used for
// outbound connections.
// +kubebuilder:validation:Enum=REDIRECT;TPROXY;NONE
type ProxyConfigInboundInterceptionMode string

const (
	// The `REDIRECT` mode uses iptables `REDIRECT` to `NAT` and redirect to Envoy. This mode loses
	// source IP addresses during redirection. This is the default redirection mode.
	ProxyConfigInboundInterceptionModeRedirect ProxyConfigInboundInterceptionMode = "REDIRECT"
	// The `TPROXY` mode uses iptables `TPROXY` to redirect to Envoy. This mode preserves both the
	// source and destination IP addresses and ports, so that they can be used for advanced
	// filtering and manipulation. This mode also configures the sidecar to run with the
	// `CAP_NET_ADMIN` capability, which is required to use `TPROXY`.
	ProxyConfigInboundInterceptionModeTproxy ProxyConfigInboundInterceptionMode = "TPROXY"
	// The `NONE` mode does not configure redirect to Envoy at all. This is an advanced
	// configuration that typically requires changes to user applications.
	ProxyConfigInboundInterceptionModeNone ProxyConfigInboundInterceptionMode = "NONE"
)

// +kubebuilder:validation:Enum=UNDEFINED;IN_MESH
type ProxyConfigProxyHeadersMetadataExchangeMode string

const (
	// Existing Istio behavior for the metadata exchange headers is unchanged.
	ProxyConfigProxyHeadersMetadataExchangeModeUndefined ProxyConfigProxyHeadersMetadataExchangeMode = "UNDEFINED"
	// Only append the istio metadata exchange headers for services considered in-mesh.
	// Traffic is considered in-mesh if it is secured with Istio mutual TLS. This means that `MESH_EXTERNAL` services, unmatched passthrough traffic, and requests to workloads without Istio enabled will be considered out of mesh.
	ProxyConfigProxyHeadersMetadataExchangeModeInMesh ProxyConfigProxyHeadersMetadataExchangeMode = "IN_MESH"
)

// Tracing defines configuration for the tracing performed by Envoy instances.
// +kubebuilder:validation:XValidation:message="At most one of [zipkin lightstep datadog stackdriver openCensusAgent] should be set",rule="(has(self.zipkin)?1:0) + (has(self.lightstep)?1:0) + (has(self.datadog)?1:0) + (has(self.stackdriver)?1:0) + (has(self.openCensusAgent)?1:0) <= 1"
type Tracing struct {
	// Use a Zipkin tracer.
	Zipkin *TracingZipkin `json:"zipkin,omitempty"`

	// Use a Lightstep tracer.
	// NOTE: For Istio 1.15+, this configuration option will result
	// in using OpenTelemetry-based Lightstep integration.
	// +hidefromdoc
	Lightstep *TracingLightstep `json:"lightstep,omitempty"`

	// Use a Datadog tracer.
	Datadog *TracingDatadog `json:"datadog,omitempty"`

	// Use a Stackdriver tracer.
	// +hidefromdoc
	Stackdriver *TracingStackdriver `json:"stackdriver,omitempty"`

	// Use an OpenCensus tracer exporting to an OpenCensus agent.
	// +hidefromdoc
	OpenCensusAgent *TracingOpenCensusAgent `json:"openCensusAgent,omitempty"` // Configures the custom tags to be added to active span by all proxies (i.e. sidecars
	// and gateways).
	// The key represents the name of the tag.
	// Ex:
	// ```yaml
	// custom_tags:
	//
	//	new_tag_name:
	//	  header:
	//	    name: custom-http-header-name
	//	    default_value: defaulted-value-from-custom-header
	//
	// ```
	// +hidefromdoc
	CustomTags map[string]*TracingCustomTag `json:"customTags,omitempty"`
	// Configures the maximum length of the request path to extract and include in the
	// HttpUrl tag. Used to truncate length request paths to meet the needs of tracing
	// backend. If not set, then a length of 256 will be used.
	// +hidefromdoc
	MaxPathTagLength *uint32 `json:"maxPathTagLength,omitempty"`
	// The percentage of requests (0.0 - 100.0) that will be randomly selected for trace generation,
	// if not requested by the client or not forced. Default is 1.0.
	Sampling *float64 `json:"sampling,omitempty"`
	// Use the tlsSettings to specify the tls mode to use. If the remote tracing service
	// uses Istio mutual TLS and shares the root CA with istiod, specify the TLS
	// mode as `ISTIO_MUTUAL`.
	TlsSettings *ClientTLSSettings `json:"tlsSettings,omitempty"`
	// Determines whether or not trace spans generated by Envoy will include Istio specific tags.
	// By default Istio specific tags are included in the trace spans.
	EnableIstioTags *bool `json:"enableIstioTags,omitempty"`
}

// SDS defines secret discovery service(SDS) configuration to be used by the proxy.
// For workload, its values are set in sidecar injector(passed as arguments to istio-proxy container).
// For pilot/mixer, it's passed as arguments to istio-proxy container in pilot/mixer deployment yaml files directly.
// +hidefromdoc
type SDS struct {
	// True if SDS is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Path of k8s service account JWT path.
	K8SSaJwtPath *string `json:"k8sSaJwtPath,omitempty"`
}

// Topology describes the configuration for relative location of a proxy with
// respect to intermediate trusted proxies and the client. These settings
// control how the client attributes are retrieved from the incoming traffic by
// the gateway proxy and propagated to the upstream services in the cluster.
type Topology struct {
	// Number of trusted proxies deployed in front of the Istio gateway proxy.
	// When this option is set to value N greater than zero, the trusted client
	// address is assumed to be the Nth address from the right end of the
	// X-Forwarded-For (XFF) header from the incoming request. If the
	// X-Forwarded-For (XFF) header is missing or has fewer than N addresses, the
	// gateway proxy falls back to using the immediate downstream connection's
	// source address as the trusted client address.
	// Note that the gateway proxy will append the downstream connection's source
	// address to the X-Forwarded-For (XFF) address and set the
	// X-Envoy-External-Address header to the trusted client address before
	// forwarding it to the upstream services in the cluster.
	// The default value of numTrustedProxies is 0.
	// See [Envoy XFF](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#config-http-conn-man-headers-x-forwarded-for)
	// header handling for more details.
	NumTrustedProxies *uint32 `json:"numTrustedProxies,omitempty"`
	// Configures how the gateway proxy handles x-forwarded-client-cert (XFCC)
	// header in the incoming request.
	ForwardClientCertDetails ForwardClientCertDetails `json:"forwardClientCertDetails,omitempty"`
	// Enables [PROXY protocol](http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt) for
	// downstream connections on a gateway.
	ProxyProtocol *TopologyProxyProtocolConfiguration `json:"proxyProtocol,omitempty"`
}

// PrivateKeyProvider defines private key configuration for gateways and sidecars. This can be configured
// mesh-wide or individual per-workload basis.
// +kubebuilder:validation:XValidation:message="At most one of [cryptomb qat] should be set",rule="(has(self.cryptomb)?1:0) + (has(self.qat)?1:0) <= 1"
type PrivateKeyProvider struct {
	// Use CryptoMb private key provider
	Cryptomb *PrivateKeyProviderCryptoMb `json:"cryptomb,omitempty"`

	// Use QAT private key provider
	Qat *PrivateKeyProviderQAT `json:"qat,omitempty"`
}

// ProxyConfig defines variables for individual Envoy instances. This can be configured on a per-workload basis
// as well as by the mesh-wide defaults.
// To set the mesh-wide defaults, configure the `defaultConfig` section of `meshConfig`. For example:
//
// ```
// meshConfig:
//
//	defaultConfig:
//	  discoveryAddress: istiod:15012
//
// ```
//
// This can also be configured on a per-workload basis by configuring the `proxy.istio.io/config` annotation on the pod. For example:
//
// ```
// annotations:
//
//	proxy.istio.io/config: |
//	  discoveryAddress: istiod:15012
//
// ```
//
// If both are configured, the two are merged with per field semantics; the field set in annotation will fully replace the field from mesh config defaults.
// This is different than a deep merge provided by protobuf.
// For example, `"tracing": { "sampling": 5 }` would completely override a setting configuring a tracing provider
// such as `"tracing": { "zipkin": { "address": "..." } }`.
//
// Note: fields in ProxyConfig are not dynamically configured; changes will require restart of workloads to take effect.
// +kubebuilder:validation:XValidation:message="At most one of [serviceCluster tracingServiceName] should be set",rule="(has(self.serviceCluster)?1:0) + (has(self.tracingServiceName)?1:0) <= 1"
type MeshConfigProxyConfig struct {
	// Path to the generated configuration file directory.
	// Proxy agent generates the actual configuration and stores it in this directory.
	ConfigPath *string `json:"configPath,omitempty"`
	// Path to the proxy binary
	BinaryPath *string `json:"binaryPath,omitempty"`

	// Service cluster defines the name for the `service_cluster` that is
	// shared by all Envoy instances. This setting corresponds to
	// `--service-cluster` flag in Envoy.  In a typical Envoy deployment, the
	// `service-cluster` flag is used to identify the caller, for
	// source-based routing scenarios.
	//
	// Since Istio does not assign a local `service/service` version to each
	// Envoy instance, the name is same for all of them.  However, the
	// source/caller's identity (e.g., IP address) is encoded in the
	// `--service-node` flag when launching Envoy.  When the RDS service
	// receives API calls from Envoy, it uses the value of the `service-node`
	// flag to compute routes that are relative to the service instances
	// located at that IP address.
	ServiceCluster *string `json:"serviceCluster,omitempty"`

	// Used by Envoy proxies to assign the values for the service names in trace
	// spans.
	TracingServiceName ProxyConfigTracingServiceName `json:"tracingServiceName,omitempty"` // The time in seconds that Envoy will drain connections during a hot
	// restart. MUST be >=1s (e.g., _1s/1m/1h_)
	// Default drain duration is `45s`.
	DrainDuration *metav1.Duration `json:"drainDuration,omitempty"`
	// Address of the discovery service exposing xDS with mTLS connection.
	// The inject configuration may override this value.
	DiscoveryAddress *string `json:"discoveryAddress,omitempty"`
	// +hidefromdoc
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/proxy.proto.
	DiscoveryRefreshDelay *metav1.Duration `json:"discoveryRefreshDelay,omitempty"`
	// Address of the Zipkin service (e.g. _zipkin:9411_).
	// DEPRECATED: Use [tracing][istio.mesh.v1alpha1.ProxyConfig.tracing] instead.
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/proxy.proto.
	ZipkinAddress *string `json:"zipkinAddress,omitempty"`
	// IP Address and Port of a statsd UDP listener (e.g. `10.75.241.127:9125`).
	StatsdUdpAddress *string `json:"statsdUdpAddress,omitempty"`
	// +hidefromdoc
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/proxy.proto.
	EnvoyMetricsServiceAddress *string `json:"envoyMetricsServiceAddress,omitempty"`
	// Port on which Envoy should listen for administrative commands.
	// Default port is `15000`.
	ProxyAdminPort *int32 `json:"proxyAdminPort,omitempty"`
	// +hidefromdoc
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/proxy.proto.
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	// AuthenticationPolicy defines how the proxy is authenticated when it connects to the control plane.
	// Default is set to `MUTUAL_TLS`.
	ControlPlaneAuthPolicy AuthenticationPolicy `json:"controlPlaneAuthPolicy,omitempty"`
	// File path of custom proxy configuration, currently used by proxies
	// in front of istiod.
	CustomConfigFile *string `json:"customConfigFile,omitempty"`
	// Maximum length of name field in Envoy's metrics. The length of the name field
	// is determined by the length of a name field in a service and the set of labels that
	// comprise a particular version of the service. The default value is set to 189 characters.
	// Envoy's internal metrics take up 67 characters, for a total of 256 character name per metric.
	// Increase the value of this field if you find that the metrics from Envoys are truncated.
	StatNameLength *int32 `json:"statNameLength,omitempty"`
	// The number of worker threads to run.
	// If unset, which is recommended, this will be automatically determined based on CPU requests/limits.
	// If set to 0, all cores on the machine will be used, ignoring CPU requests or limits. This can lead to major performance
	// issues if CPU limits are also set.
	Concurrency *int32 `json:"concurrency,omitempty"`
	// Path to the proxy bootstrap template file
	ProxyBootstrapTemplatePath *string `json:"proxyBootstrapTemplatePath,omitempty"`
	// The mode used to redirect inbound traffic to Envoy.
	InterceptionMode ProxyConfigInboundInterceptionMode `json:"interceptionMode,omitempty"`
	// Tracing configuration to be used by the proxy.
	Tracing *Tracing `json:"tracing,omitempty"`
	// Secret Discovery Service(SDS) configuration to be used by the proxy.
	// +hidefromdoc
	//
	// Deprecated: Marked as deprecated in mesh/v1alpha1/proxy.proto.
	Sds *SDS `json:"sds,omitempty"`
	// Address of the service to which access logs from Envoys should be
	// sent. (e.g. `accesslog-service:15000`). See [Access Log
	// Service](https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/accesslog/v2/als.proto)
	// for details about Envoy's gRPC Access Log Service API.
	EnvoyAccessLogService *RemoteService `json:"envoyAccessLogService,omitempty"`
	// Address of the Envoy Metrics Service implementation (e.g. `metrics-service:15000`).
	// See [Metric Service](https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/metrics/v2/metrics_service.proto)
	// for details about Envoy's Metrics Service API.
	EnvoyMetricsService *RemoteService `json:"envoyMetricsService,omitempty"`
	// Additional environment variables for the proxy.
	// Names starting with `ISTIO_META_` will be included in the generated bootstrap and sent to the XDS server.
	ProxyMetadata map[string]string `json:"proxyMetadata,omitempty"`
	// Envoy [runtime configuration](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/operations/runtime) to set during bootstrapping.
	// This enables setting experimental, unsafe, unsupported, and deprecated features that should be used with extreme caution.
	RuntimeValues map[string]string `json:"runtimeValues,omitempty"`
	// Port on which the agent should listen for administrative commands such as readiness probe.
	// Default is set to port `15020`.
	StatusPort *int32 `json:"statusPort,omitempty"`
	// An additional list of tags to extract from the in-proxy Istio telemetry. These extra tags can be
	// added by configuring the telemetry extension. Each additional tag needs to be present in this list.
	// Extra tags emitted by the telemetry extensions must be listed here so that they can be processed
	// and exposed as Prometheus metrics.
	// Deprecated: `istio.stats` is a native filter now, this field is no longer needed.
	ExtraStatTags []string `json:"extraStatTags,omitempty"`
	// Topology encapsulates the configuration which describes where the proxy is
	// located i.e. behind a (or N) trusted proxy (proxies) or directly exposed
	// to the internet. This configuration only effects gateways and is applied
	// to all the gateways in the cluster unless overridden via annotations of the
	// gateway workloads.
	GatewayTopology *Topology `json:"gatewayTopology,omitempty"`
	// The amount of time allowed for connections to complete on proxy shutdown.
	// On receiving `SIGTERM` or `SIGINT`, `istio-agent` tells the active Envoy to start gracefully draining,
	// discouraging any new connections and allowing existing connections to complete. It then
	// sleeps for the `terminationDrainDuration` and then kills any remaining active Envoy processes.
	// If not set, a default of `5s` will be applied.
	TerminationDrainDuration *metav1.Duration `json:"terminationDrainDuration,omitempty"`
	// The unique identifier for the [service mesh](https://istio.io/docs/reference/glossary/#service-mesh)
	// All control planes running in the same service mesh should specify the same mesh ID.
	// Mesh ID is used to label telemetry reports for cases where telemetry from multiple meshes is mixed together.
	MeshId *string `json:"meshId,omitempty"`
	// VM Health Checking readiness probe. This health check config exactly mirrors the
	// kubernetes readiness probe configuration both in schema and logic.
	// Only one health check method of 3 can be set at a time.
	ReadinessProbe *k8sv1.Probe `json:"readinessProbe,omitempty"`
	// Proxy stats matcher defines configuration for reporting custom Envoy stats.
	// To reduce memory and CPU overhead from Envoy stats system, Istio proxies by
	// default create and expose only a subset of Envoy stats. This option is to
	// control creation of additional Envoy stats with prefix, suffix, and regex
	// expressions match on the name of the stats. This replaces the stats
	// inclusion annotations
	// (`sidecar.istio.io/statsInclusionPrefixes`,
	// `sidecar.istio.io/statsInclusionRegexps`, and
	// `sidecar.istio.io/statsInclusionSuffixes`). For example, to enable stats
	// for circuit breakers, request retries, upstream connections, and request timeouts,
	// you can specify stats matcher as follows:
	// ```yaml
	// proxyStatsMatcher:
	//
	//	inclusionRegexps:
	//	  - .*outlier_detection.*
	//	  - .*upstream_rq_retry.*
	//	  - .*upstream_cx_.*
	//	inclusionSuffixes:
	//	  - upstream_rq_timeout
	//
	// ```
	// Note including more Envoy stats might increase number of time series
	// collected by prometheus significantly. Care needs to be taken on Prometheus
	// resource provision and configuration to reduce cardinality.
	ProxyStatsMatcher *ProxyConfigProxyStatsMatcher `json:"proxyStatsMatcher,omitempty"`
	// Boolean flag for enabling/disabling the holdApplicationUntilProxyStarts behavior.
	// This feature adds hooks to delay application startup until the pod proxy
	// is ready to accept traffic, mitigating some startup race conditions.
	// Default value is 'false'.
	HoldApplicationUntilProxyStarts *bool `json:"holdApplicationUntilProxyStarts,omitempty"`
	// The PEM data of the extra root certificates for workload-to-workload communication.
	// This includes the certificates defined in MeshConfig and any other certificates that Istiod uses as CA.
	// The plugin certificates (the 'cacerts' secret), self-signed certificates (the 'istio-ca-secret' secret)
	// are added automatically by Istiod.
	CaCertificatesPem []string `json:"caCertificatesPem,omitempty"`
	// Specifies the details of the proxy image.
	Image *ProxyImage `json:"image,omitempty"`
	// Specifies the details of the Private Key Provider configuration for gateway and sidecar proxies.
	PrivateKeyProvider *PrivateKeyProvider `json:"privateKeyProvider,omitempty"`
	// Define the set of headers to add/modify for HTTP request/responses.
	//
	// To enable an optional header, simply set the field. If no specific configuration is required, an empty object (`{}`) will enable it.
	// Note: currently all headers are enabled by default.
	//
	// Below shows an example of customizing the `server` header and disabling the `X-Envoy-Attempt-Count` header:
	//
	// ```yaml
	// proxyHeaders:
	//
	//	server:
	//	  value: "my-custom-server"
	//	# Explicitly enable Request IDs.
	//	# As this is the default, this has no effect.
	//	requestId: {}
	//	attemptCount:
	//	  disabled: true
	//
	// ```
	//
	// # Below shows an example of preserving the header case for HTTP 1.x requests
	//
	// ```yaml
	// proxyHeaders:
	//
	//	perserveHttp1HeaderCase: true
	//
	// ```
	//
	// Some headers are enabled by default, and require explicitly disabling. See below for an example of disabling all default-enabled headers:
	//
	// ```yaml
	// proxyHeaders:
	//
	//	forwardedClientCert: SANITIZE
	//	server:
	//	  disabled: true
	//	requestId:
	//	  disabled: true
	//	attemptCount:
	//	  disabled: true
	//	envoyDebugHeaders:
	//	  disabled: true
	//	metadataExchangeHeaders:
	//	  mode: IN_MESH
	//
	// ```
	ProxyHeaders *ProxyConfigProxyHeaders `json:"proxyHeaders,omitempty"`
}

type RemoteService struct {
	// Address of a remove service used for various purposes (access log
	// receiver, metrics receiver, etc.). Can be IP address or a fully
	// qualified DNS name.
	Address *string `json:"address,omitempty"`
	// Use the `tlsSettings` to specify the tls mode to use. If the remote service
	// uses Istio mutual TLS and shares the root CA with istiod, specify the TLS
	// mode as `ISTIO_MUTUAL`.
	TlsSettings *ClientTLSSettings `json:"tlsSettings,omitempty"`
	// If set then set `SO_KEEPALIVE` on the socket to enable TCP Keepalives.
	TcpKeepalive *ConnectionPoolSettingsTCPSettingsTcpKeepalive `json:"tcpKeepalive,omitempty"`
}

// Zipkin defines configuration for a Zipkin tracer.
type TracingZipkin struct {
	// Address of the Zipkin service (e.g. _zipkin:9411_).
	Address *string `json:"address,omitempty"`
}

// +hidefromdoc
// Defines configuration for a Lightstep tracer.
type TracingLightstep struct {
	// Address of the Lightstep Satellite pool.
	Address *string `json:"address,omitempty"`
	// The Lightstep access token.
	AccessToken *string `json:"accessToken,omitempty"`
}

// Datadog defines configuration for a Datadog tracer.
type TracingDatadog struct {
	// Address of the Datadog Agent.
	Address *string `json:"address,omitempty"`
}

// Stackdriver defines configuration for a Stackdriver tracer.
// See [Envoy's OpenCensus trace configuration](https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/trace/v3/opencensus.proto)
// and
// [OpenCensus trace config](https://github.com/census-instrumentation/opencensus-proto/blob/master/src/opencensus/proto/trace/v1/trace_config.proto) for details.
type TracingStackdriver struct {
	// debug enables trace output to stdout.
	// +hidefromdoc
	Debug *bool `json:"debug,omitempty"`
	// The global default max number of attributes per span.
	// default is 200.
	// +hidefromdoc
	MaxNumberOfAttributes *int64 `json:"maxNumberOfAttributes,omitempty"`
	// The global default max number of annotation events per span.
	// default is 200.
	// +hidefromdoc
	MaxNumberOfAnnotations *int64 `json:"maxNumberOfAnnotations,omitempty"`
	// The global default max number of message events per span.
	// default is 200.
	// +hidefromdoc
	MaxNumberOfMessageEvents *int64 `json:"maxNumberOfMessageEvents,omitempty"`
}

// OpenCensusAgent defines configuration for an OpenCensus tracer writing to
// an OpenCensus agent backend. See
// [Envoy's OpenCensus trace configuration](https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/trace/v3/opencensus.proto)
// and
// [OpenCensus trace config](https://github.com/census-instrumentation/opencensus-proto/blob/master/src/opencensus/proto/trace/v1/trace_config.proto)
// for details.
type TracingOpenCensusAgent struct {
	// gRPC address for the OpenCensus agent (e.g. dns://authority/host:port or
	// unix:path). See [gRPC naming
	// docs](https://github.com/grpc/grpc/blob/master/doc/naming.md) for
	// details.
	Address *string `json:"address,omitempty"`
	// Specifies the set of context propagation headers used for distributed
	// tracing. Default is `["W3C_TRACE_CONTEXT"]`. If multiple values are specified,
	// the proxy will attempt to read each header for each request and will
	// write all headers.
	Context []TracingOpenCensusAgentTraceContext `json:"context,omitempty"`
}

// Configure custom tags that will be added to any active span.
// Tags can be generated via literals, environment variables or an incoming request header.
// +hidefromdoc
// +kubebuilder:validation:XValidation:message="At most one of [literal environment header] should be set",rule="(has(self.literal)?1:0) + (has(self.environment)?1:0) + (has(self.header)?1:0) <= 1"
type TracingCustomTag struct {
	// The custom tag's value is the specified literal.
	Literal *TracingLiteral `json:"literal,omitempty"`

	// The custom tag's value should be populated from an environmental
	// variable
	Environment *TracingEnvironment `json:"environment,omitempty"`

	// The custom tag's value is populated by an http header from
	// an incoming request.
	Header *TracingRequestHeader `json:"header,omitempty"`
}

// Literal type represents a static value.
// +hidefromdoc
type TracingLiteral struct {
	// Static literal value used to populate the tag value.
	Value *string `json:"value,omitempty"`
}

// Environment is the proxy's environment variable to be used for populating the custom span tag.
// +hidefromdoc
type TracingEnvironment struct {
	// Name of the environment variable used to populate the tag's value
	Name *string `json:"name,omitempty"`
	// When the environment variable is not found,
	// the tag's value will be populated with this default value if specified,
	// otherwise the tag will not be populated.
	DefaultValue *string `json:"defaultValue,omitempty"`
}

// RequestHeader is the HTTP request header which will be used to populate the span tag.
// A default value can be configured if the header does not exist.
// +hidefromdoc
type TracingRequestHeader struct {
	// HTTP header name used to obtain the value from to populate the tag value.
	Name *string `json:"name,omitempty"`
	// Default value to be used for the tag when the named HTTP header does not exist.
	// The tag will be skipped if no default value is provided.
	DefaultValue *string `json:"defaultValue,omitempty"`
}

// PROXY protocol configuration.
type TopologyProxyProtocolConfiguration struct {
}

// CryptoMb PrivateKeyProvider configuration
type PrivateKeyProviderCryptoMb struct {
	// How long to wait until the per-thread processing queue should be processed. If the processing queue
	// gets full (eight sign or decrypt requests are received) it is processed immediately.
	// However, if the queue is not filled before the delay has expired, the requests already in the queue
	// are processed, even if the queue is not full.
	// In effect, this value controls the balance between latency and throughput.
	// The duration needs to be set to a value greater than or equal to 1 millisecond.
	PollDelay *metav1.Duration `json:"pollDelay,omitempty"`
	// If the private key provider isn’t available (eg. the required hardware capability doesn’t existed)
	// Envoy will fallback to the BoringSSL default implementation when the fallback is true.
	// The default value is false.
	Fallback *bool `json:"fallback,omitempty"`
}

// QAT (QuickAssist Technology) PrivateKeyProvider configuration
type PrivateKeyProviderQAT struct {
	// How long to wait before polling the hardware accelerator after a request has been submitted there.
	// Having a small value leads to quicker answers from the hardware but causes more polling loop spins,
	// leading to potentially larger CPU usage.
	// The duration needs to be set to a value greater than or equal to 1 millisecond.
	PollDelay *metav1.Duration `json:"pollDelay,omitempty"`
	// If the private key provider isn’t available (eg. the required hardware capability doesn’t existed)
	// Envoy will fallback to the BoringSSL default implementation when the fallback is true.
	// The default value is false.
	Fallback *bool `json:"fallback,omitempty"`
}

// Proxy stats name matchers for stats creation. Note this is in addition to
// the minimum Envoy stats that Istio generates by default.
type ProxyConfigProxyStatsMatcher struct {
	// Proxy stats name prefix matcher for inclusion.
	InclusionPrefixes []string `json:"inclusionPrefixes,omitempty"`
	// Proxy stats name suffix matcher for inclusion.
	InclusionSuffixes []string `json:"inclusionSuffixes,omitempty"`
	// Proxy stats name regexps matcher for inclusion.
	InclusionRegexps []string `json:"inclusionRegexps,omitempty"`
}

type ProxyConfigProxyHeaders struct {
	// Controls the `X-Forwarded-Client-Cert` header for inbound sidecar requests. To set this on gateways, use the `Topology` setting.
	// To disable the header, configure either `SANITIZE` (to always remove the header, if present) or `FORWARD_ONLY` (to leave the header as-is).
	// By default, `APPEND_FORWARD` will be used.
	ForwardedClientCert ForwardClientCertDetails `json:"forwardedClientCert,omitempty"`
	// This field is valid only when forward_client_cert_details is APPEND_FORWARD or SANITIZE_SET
	// and the client connection is mTLS. It specifies the fields in
	// the client certificate to be forwarded. Note that `Hash` is always set, and
	// `By` is always set when the client certificate presents the URI type Subject Alternative Name value.
	SetCurrentClientCertDetails *ProxyConfigProxyHeadersSetCurrentClientCertDetails `json:"setCurrentClientCertDetails,omitempty"`
	// Controls the `X-Request-Id` header. If enabled, a request ID is generated for each request if one is not already set.
	// This applies to all types of traffic (inbound, outbound, and gateways).
	// If disabled, no request ID will be generate for the request. If it is already present, it will be preserved.
	// Warning: request IDs are a critical component to mesh tracing and logging, so disabling this is not recommended.
	// This header is enabled by default if not configured.
	RequestId *ProxyConfigProxyHeadersRequestId `json:"requestId,omitempty"`
	// Controls the `server` header. If enabled, the `Server: istio-envoy` header is set in response headers for inbound traffic (including gateways).
	// If disabled, the `Server` header is not modified. If it is already present, it will be preserved.
	Server *ProxyConfigProxyHeadersServer `json:"server,omitempty"`
	// Controls the `X-Envoy-Attempt-Count` header.
	// If enabled, this header will be added on outbound request headers (including gateways) that have retries configured.
	// If disabled, this header will not be set. If it is already present, it will be preserved.
	// This header is enabled by default if not configured.
	AttemptCount *ProxyConfigProxyHeadersAttemptCount `json:"attemptCount,omitempty"`
	// Controls various `X-Envoy-*` headers, such as `X-Envoy-Overloaded` and `X-Envoy-Upstream-Service-Time`. If enabled,
	// these headers will be included.
	// If disabled, these headers will not be set. If they are already present, they will be preserved.
	// See the [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/router/v3/router.proto#envoy-v3-api-field-extensions-filters-http-router-v3-router-suppress-envoy-headers) for more details.
	// These headers are enabled by default if not configured.
	EnvoyDebugHeaders *ProxyConfigProxyHeadersEnvoyDebugHeaders `json:"envoyDebugHeaders,omitempty"`
	// Controls Istio metadata exchange headers `X-Envoy-Peer-Metadata` and `X-Envoy-Peer-Metadata-Id`.
	// By default, the behavior is unspecified.
	// If IN_MESH, these headers will not be appended to outbound requests from sidecars to services not in-mesh.
	MetadataExchangeHeaders *ProxyConfigProxyHeadersMetadataExchangeHeaders `json:"metadataExchangeHeaders,omitempty"`
	// When true, the original case of HTTP/1.x headers will be preserved
	// as they pass through the proxy, rather than normalizing them to lowercase.
	// This field is particularly useful for applications that require case-sensitive
	// headers for interoperability with downstream systems or APIs that expect specific
	// casing.
	// The preserve_http1_header_case option only applies to HTTP/1.x traffic, as HTTP/2 requires all headers
	// to be lowercase per the protocol specification. Envoy will ignore this field for HTTP/2
	// requests and automatically normalize headers to lowercase, ensuring compliance with HTTP/2
	// standards.
	PreserveHttp1HeaderCase *bool `json:"preserveHttp1HeaderCase,omitempty"`
}

type ProxyConfigProxyHeadersServer struct {
	Disabled *bool `json:"disabled,omitempty"`
	// If set, and the server header is enabled, this value will be set as the server header. By default, `istio-envoy` will be used.
	Value *string `json:"value,omitempty"`
}

type ProxyConfigProxyHeadersRequestId struct {
	Disabled *bool `json:"disabled,omitempty"`
}

type ProxyConfigProxyHeadersAttemptCount struct {
	Disabled *bool `json:"disabled,omitempty"`
}

type ProxyConfigProxyHeadersEnvoyDebugHeaders struct {
	Disabled *bool `json:"disabled,omitempty"`
}

type ProxyConfigProxyHeadersMetadataExchangeHeaders struct {
	Mode ProxyConfigProxyHeadersMetadataExchangeMode `json:"mode,omitempty"`
}

type ProxyConfigProxyHeadersSetCurrentClientCertDetails struct {
	// Whether to forward the subject of the client cert. Defaults to true.
	Subject *bool `json:"subject,omitempty"`
	// Whether to forward the entire client cert in URL encoded PEM format. This will appear in the
	// XFCC header comma separated from other values with the value Cert="PEM".
	// Defaults to false.
	Cert *bool `json:"cert,omitempty"`
	// Whether to forward the entire client cert chain (including the leaf cert) in URL encoded PEM
	// format. This will appear in the XFCC header comma separated from other values with the value
	// Chain="PEM".
	// Defaults to false.
	Chain *bool `json:"chain,omitempty"`
	// Whether to forward the DNS type Subject Alternative Names of the client cert.
	// Defaults to true.
	Dns *bool `json:"dns,omitempty"`
	// Whether to forward the URI type Subject Alternative Name of the client cert. Defaults to
	// true.
	Uri *bool `json:"uri,omitempty"`
}

const fileMeshV1alpha1ProxyProtoRawDesc = "" +
	"\n" +
	"\x19mesh/v1alpha1/proxy.proto\x12\x13istio.mesh.v1alpha1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a*networking/v1alpha3/destination_rule.proto\x1a(networking/v1alpha3/workload_group.proto\x1a%networking/v1beta1/proxy_config.proto\"\xed\x0e\n" +
	"\aTracing\x12=\n" +
	"\x06zipkin\x18\x01 \x01(\v2#.istio.mesh.v1alpha1.Tracing.ZipkinH\x00R\x06zipkin\x12F\n" +
	"\tlightstep\x18\x02 \x01(\v2&.istio.mesh.v1alpha1.Tracing.LightstepH\x00R\tlightstep\x12@\n" +
	"\adatadog\x18\x03 \x01(\v2$.istio.mesh.v1alpha1.Tracing.DatadogH\x00R\adatadog\x12L\n" +
	"\vstackdriver\x18\x04 \x01(\v2(.istio.mesh.v1alpha1.Tracing.StackdriverH\x00R\vstackdriver\x12Z\n" +
	"\x11open_census_agent\x18\t \x01(\v2,.istio.mesh.v1alpha1.Tracing.OpenCensusAgentH\x00R\x0fopenCensusAgent\x12M\n" +
	"\vcustom_tags\x18\x05 \x03(\v2,.istio.mesh.v1alpha1.Tracing.CustomTagsEntryR\n" +
	"customTags\x12-\n" +
	"\x13max_path_tag_length\x18\x06 \x01(\rR\x10maxPathTagLength\x12\x1a\n" +
	"\bsampling\x18\a \x01(\x01R\bsampling\x12O\n" +
	"\ftls_settings\x18\b \x01(\v2,.istio.networking.v1alpha3.ClientTLSSettingsR\vtlsSettings\x12F\n" +
	"\x11enable_istio_tags\x18\n" +
	" \x01(\v2\x1a.google.protobuf.BoolValueR\x0fenableIstioTags\x1a\"\n" +
	"\x06Zipkin\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x1aH\n" +
	"\tLightstep\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12!\n" +
	"\faccess_token\x18\x02 \x01(\tR\vaccessToken\x1a#\n" +
	"\aDatadog\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x1a\xae\x02\n" +
	"\vStackdriver\x12\x14\n" +
	"\x05debug\x18\x01 \x01(\bR\x05debug\x12T\n" +
	"\x18max_number_of_attributes\x18\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x15maxNumberOfAttributes\x12V\n" +
	"\x19max_number_of_annotations\x18\x03 \x01(\v2\x1b.google.protobuf.Int64ValueR\x16maxNumberOfAnnotations\x12[\n" +
	"\x1cmax_number_of_message_events\x18\x04 \x01(\v2\x1b.google.protobuf.Int64ValueR\x18maxNumberOfMessageEvents\x1a\xe7\x01\n" +
	"\x0fOpenCensusAgent\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12S\n" +
	"\acontext\x18\x02 \x03(\x0e29.istio.mesh.v1alpha1.Tracing.OpenCensusAgent.TraceContextR\acontext\"e\n" +
	"\fTraceContext\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11W3C_TRACE_CONTEXT\x10\x01\x12\f\n" +
	"\bGRPC_BIN\x10\x02\x12\x17\n" +
	"\x13CLOUD_TRACE_CONTEXT\x10\x03\x12\x06\n" +
	"\x02B3\x10\x04\x1a\xe9\x01\n" +
	"\tCustomTag\x12@\n" +
	"\aliteral\x18\x01 \x01(\v2$.istio.mesh.v1alpha1.Tracing.LiteralH\x00R\aliteral\x12L\n" +
	"\venvironment\x18\x02 \x01(\v2(.istio.mesh.v1alpha1.Tracing.EnvironmentH\x00R\venvironment\x12D\n" +
	"\x06header\x18\x03 \x01(\v2*.istio.mesh.v1alpha1.Tracing.RequestHeaderH\x00R\x06headerB\x06\n" +
	"\x04type\x1a\x1f\n" +
	"\aLiteral\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x1aF\n" +
	"\vEnvironment\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rdefault_value\x18\x02 \x01(\tR\fdefaultValue\x1aH\n" +
	"\rRequestHeader\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rdefault_value\x18\x02 \x01(\tR\fdefaultValue\x1ae\n" +
	"\x0fCustomTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12<\n" +
	"\x05value\x18\x02 \x01(\v2&.istio.mesh.v1alpha1.Tracing.CustomTagR\x05value:\x028\x01B\b\n" +
	"\x06tracer\"F\n" +
	"\x03SDS\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12%\n" +
	"\x0fk8s_sa_jwt_path\x18\x02 \x01(\tR\fk8sSaJwtPath\"\xa7\x02\n" +
	"\bTopology\x12.\n" +
	"\x13num_trusted_proxies\x18\x01 \x01(\rR\x11numTrustedProxies\x12l\n" +
	"\x1bforward_client_cert_details\x18\x02 \x01(\x0e2-.istio.mesh.v1alpha1.ForwardClientCertDetailsR\x18forwardClientCertDetails\x12_\n" +
	"\x0eproxy_protocol\x18\x03 \x01(\v28.istio.mesh.v1alpha1.Topology.ProxyProtocolConfigurationR\rproxyProtocol\x1a\x1c\n" +
	"\x1aProxyProtocolConfiguration\"\xa8\x03\n" +
	"\x12PrivateKeyProvider\x12N\n" +
	"\bcryptomb\x18\x02 \x01(\v20.istio.mesh.v1alpha1.PrivateKeyProvider.CryptoMbH\x00R\bcryptomb\x12?\n" +
	"\x03qat\x18\x03 \x01(\v2+.istio.mesh.v1alpha1.PrivateKeyProvider.QATH\x00R\x03qat\x1a|\n" +
	"\bCryptoMb\x128\n" +
	"\n" +
	"poll_delay\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\tpollDelay\x126\n" +
	"\bfallback\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\bfallback\x1aw\n" +
	"\x03QAT\x128\n" +
	"\n" +
	"poll_delay\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\tpollDelay\x126\n" +
	"\bfallback\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\bfallbackB\n" +
	"\n" +
	"\bprovider\"\xc3#\n" +
	"\vProxyConfig\x12\x1f\n" +
	"\vconfig_path\x18\x01 \x01(\tR\n" +
	"configPath\x12\x1f\n" +
	"\vbinary_path\x18\x02 \x01(\tR\n" +
	"binaryPath\x12)\n" +
	"\x0fservice_cluster\x18\x03 \x01(\tH\x00R\x0eserviceCluster\x12g\n" +
	"\x14tracing_service_name\x18$ \x01(\x0e23.istio.mesh.v1alpha1.ProxyConfig.TracingServiceNameH\x00R\x12tracingServiceName\x12@\n" +
	"\x0edrain_duration\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\rdrainDuration\x12+\n" +
	"\x11discovery_address\x18\x06 \x01(\tR\x10discoveryAddress\x12U\n" +
	"\x17discovery_refresh_delay\x18\a \x01(\v2\x19.google.protobuf.DurationB\x02\x18\x01R\x15discoveryRefreshDelay\x12)\n" +
	"\x0ezipkin_address\x18\b \x01(\tB\x02\x18\x01R\rzipkinAddress\x12,\n" +
	"\x12statsd_udp_address\x18\n" +
	" \x01(\tR\x10statsdUdpAddress\x12E\n" +
	"\x1denvoy_metrics_service_address\x18\x14 \x01(\tB\x02\x18\x01R\x1aenvoyMetricsServiceAddress\x12(\n" +
	"\x10proxy_admin_port\x18\v \x01(\x05R\x0eproxyAdminPort\x12/\n" +
	"\x11availability_zone\x18\f \x01(\tB\x02\x18\x01R\x10availabilityZone\x12d\n" +
	"\x19control_plane_auth_policy\x18\r \x01(\x0e2).istio.mesh.v1alpha1.AuthenticationPolicyR\x16controlPlaneAuthPolicy\x12,\n" +
	"\x12custom_config_file\x18\x0e \x01(\tR\x10customConfigFile\x12(\n" +
	"\x10stat_name_length\x18\x0f \x01(\x05R\x0estatNameLength\x12=\n" +
	"\vconcurrency\x18\x10 \x01(\v2\x1b.google.protobuf.Int32ValueR\vconcurrency\x12A\n" +
	"\x1dproxy_bootstrap_template_path\x18\x11 \x01(\tR\x1aproxyBootstrapTemplatePath\x12e\n" +
	"\x11interception_mode\x18\x12 \x01(\x0e28.istio.mesh.v1alpha1.ProxyConfig.InboundInterceptionModeR\x10interceptionMode\x126\n" +
	"\atracing\x18\x13 \x01(\v2\x1c.istio.mesh.v1alpha1.TracingR\atracing\x12.\n" +
	"\x03sds\x18\x15 \x01(\v2\x18.istio.mesh.v1alpha1.SDSB\x02\x18\x01R\x03sds\x12[\n" +
	"\x18envoy_access_log_service\x18\x16 \x01(\v2\".istio.mesh.v1alpha1.RemoteServiceR\x15envoyAccessLogService\x12V\n" +
	"\x15envoy_metrics_service\x18\x17 \x01(\v2\".istio.mesh.v1alpha1.RemoteServiceR\x13envoyMetricsService\x12Z\n" +
	"\x0eproxy_metadata\x18\x18 \x03(\v23.istio.mesh.v1alpha1.ProxyConfig.ProxyMetadataEntryR\rproxyMetadata\x12Z\n" +
	"\x0eruntime_values\x18% \x03(\v23.istio.mesh.v1alpha1.ProxyConfig.RuntimeValuesEntryR\rruntimeValues\x12\x1f\n" +
	"\vstatus_port\x18\x1a \x01(\x05R\n" +
	"statusPort\x12&\n" +
	"\x0fextra_stat_tags\x18\x1b \x03(\tR\rextraStatTags\x12H\n" +
	"\x10gateway_topology\x18\x1c \x01(\v2\x1d.istio.mesh.v1alpha1.TopologyR\x0fgatewayTopology\x12W\n" +
	"\x1atermination_drain_duration\x18\x1d \x01(\v2\x19.google.protobuf.DurationR\x18terminationDrainDuration\x12\x17\n" +
	"\amesh_id\x18\x1e \x01(\tR\x06meshId\x12R\n" +
	"\x0freadiness_probe\x18\x1f \x01(\v2).istio.networking.v1alpha3.ReadinessProbeR\x0ereadinessProbe\x12b\n" +
	"\x13proxy_stats_matcher\x18  \x01(\v22.istio.mesh.v1alpha1.ProxyConfig.ProxyStatsMatcherR\x11proxyStatsMatcher\x12h\n" +
	"#hold_application_until_proxy_starts\x18! \x01(\v2\x1a.google.protobuf.BoolValueR\x1fholdApplicationUntilProxyStarts\x12.\n" +
	"\x13ca_certificates_pem\x18\" \x03(\tR\x11caCertificatesPem\x12:\n" +
	"\x05image\x18# \x01(\v2$.istio.networking.v1beta1.ProxyImageR\x05image\x12Y\n" +
	"\x14private_key_provider\x18& \x01(\v2'.istio.mesh.v1alpha1.PrivateKeyProviderR\x12privateKeyProvider\x12R\n" +
	"\rproxy_headers\x18' \x01(\v2-.istio.mesh.v1alpha1.ProxyConfig.ProxyHeadersR\fproxyHeaders\x1a@\n" +
	"\x12ProxyMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a@\n" +
	"\x12RuntimeValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\x9e\x01\n" +
	"\x11ProxyStatsMatcher\x12-\n" +
	"\x12inclusion_prefixes\x18\x01 \x03(\tR\x11inclusionPrefixes\x12-\n" +
	"\x12inclusion_suffixes\x18\x02 \x03(\tR\x11inclusionSuffixes\x12+\n" +
	"\x11inclusion_regexps\x18\x03 \x03(\tR\x10inclusionRegexps\x1a\xc5\f\n" +
	"\fProxyHeaders\x12a\n" +
	"\x15forwarded_client_cert\x18\x01 \x01(\x0e2-.istio.mesh.v1alpha1.ForwardClientCertDetailsR\x13forwardedClientCert\x12\x8f\x01\n" +
	"\x1fset_current_client_cert_details\x18\a \x01(\v2I.istio.mesh.v1alpha1.ProxyConfig.ProxyHeaders.SetCurrentClientCertDetailsR\x1bsetCurrentClientCertDetails\x12V\n" +
	"\n" +
	"request_id\x18\x03 \x01(\v27.istio.mesh.v1alpha1.ProxyConfig.ProxyHeaders.RequestIdR\trequestId\x12L\n" +
	"\x06server\x18\x02 \x01(\v24.istio.mesh.v1alpha1.ProxyConfig.ProxyHeaders.ServerR\x06server\x12_\n" +
	"\rattempt_count\x18\x04 \x01(\v2:.istio.mesh.v1alpha1.ProxyConfig.ProxyHeaders.AttemptCountR\fattemptCount\x12o\n" +
	"\x13envoy_debug_headers\x18\x05 \x01(\v2?.istio.mesh.v1alpha1.ProxyConfig.ProxyHeaders.EnvoyDebugHeadersR\x11envoyDebugHeaders\x12\x81\x01\n" +
	"\x19metadata_exchange_headers\x18\x06 \x01(\v2E.istio.mesh.v1alpha1.ProxyConfig.ProxyHeaders.MetadataExchangeHeadersR\x17metadataExchangeHeaders\x12W\n" +
	"\x1apreserve_http1_header_case\x18( \x01(\v2\x1a.google.protobuf.BoolValueR\x17preserveHttp1HeaderCase\x1aV\n" +
	"\x06Server\x126\n" +
	"\bdisabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\bdisabled\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x1aC\n" +
	"\tRequestId\x126\n" +
	"\bdisabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\bdisabled\x1aF\n" +
	"\fAttemptCount\x126\n" +
	"\bdisabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\bdisabled\x1aK\n" +
	"\x11EnvoyDebugHeaders\x126\n" +
	"\bdisabled\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\bdisabled\x1aq\n" +
	"\x17MetadataExchangeHeaders\x12V\n" +
	"\x04mode\x18\x01 \x01(\x0e2B.istio.mesh.v1alpha1.ProxyConfig.ProxyHeaders.MetadataExchangeModeR\x04mode\x1a\x91\x02\n" +
	"\x1bSetCurrentClientCertDetails\x124\n" +
	"\asubject\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\asubject\x12.\n" +
	"\x04cert\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\x04cert\x120\n" +
	"\x05chain\x18\x03 \x01(\v2\x1a.google.protobuf.BoolValueR\x05chain\x12,\n" +
	"\x03dns\x18\x04 \x01(\v2\x1a.google.protobuf.BoolValueR\x03dns\x12,\n" +
	"\x03uri\x18\x05 \x01(\v2\x1a.google.protobuf.BoolValueR\x03uri\"2\n" +
	"\x14MetadataExchangeMode\x12\r\n" +
	"\tUNDEFINED\x10\x00\x12\v\n" +
	"\aIN_MESH\x10\x01\"l\n" +
	"\x12TracingServiceName\x12\x1b\n" +
	"\x17APP_LABEL_AND_NAMESPACE\x10\x00\x12\x17\n" +
	"\x13CANONICAL_NAME_ONLY\x10\x01\x12 \n" +
	"\x1cCANONICAL_NAME_AND_NAMESPACE\x10\x02\"=\n" +
	"\x17InboundInterceptionMode\x12\f\n" +
	"\bREDIRECT\x10\x00\x12\n" +
	"\n" +
	"\x06TPROXY\x10\x01\x12\b\n" +
	"\x04NONE\x10\x02B\x0e\n" +
	"\fcluster_nameJ\x04\b\x05\x10\x06J\x04\b\t\x10\n" +
	"R\x18parent_shutdown_durationR\x0fconnect_timeout\"\xeb\x01\n" +
	"\rRemoteService\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12O\n" +
	"\ftls_settings\x18\x02 \x01(\v2,.istio.networking.v1alpha3.ClientTLSSettingsR\vtlsSettings\x12o\n" +
	"\rtcp_keepalive\x18\x03 \x01(\v2J.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepaliveR\ftcpKeepalive*>\n" +
	"\x14AuthenticationPolicy\x12\b\n" +
	"\x04NONE\x10\x00\x12\x0e\n" +
	"\n" +
	"MUTUAL_TLS\x10\x01\x12\f\n" +
	"\aINHERIT\x10\xe8\a*\x88\x01\n" +
	"\x18ForwardClientCertDetails\x12\r\n" +
	"\tUNDEFINED\x10\x00\x12\f\n" +
	"\bSANITIZE\x10\x01\x12\x10\n" +
	"\fFORWARD_ONLY\x10\x02\x12\x12\n" +
	"\x0eAPPEND_FORWARD\x10\x03\x12\x10\n" +
	"\fSANITIZE_SET\x10\x04\x12\x17\n" +
	"\x13ALWAYS_FORWARD_ONLY\x10\x05B\x1cZ\x1aistio.io/api/mesh/v1alpha1b\x06proto3"

	// The following values are used to construct proxy image url.
// format: `${hub}/${image_name}/${tag}-${image_type}`,
// example: `docker.io/istio/proxyv2:1.11.1` or `docker.io/istio/proxyv2:1.11.1-distroless`.
// This information was previously part of the Values API.
type ProxyImage struct {
	// The image type of the image.
	// Istio publishes default, debug, and distroless images.
	// Other values are allowed if those image types (example: centos) are published to the specified hub.
	// supported values: default, debug, distroless.
	ImageType *string `json:"imageType,omitempty"`
}

// WorkloadMode allows selection of the role of the underlying workload in
// network traffic. A workload is considered as acting as a SERVER if it is
// the destination of the traffic (that is, traffic direction, from the
// perspective of the workload is *inbound*). If the workload is the source of
// the network traffic, it is considered to be in CLIENT mode (traffic is
// *outbound* from the workload).
// +kubebuilder:validation:Enum=UNDEFINED;CLIENT;SERVER;CLIENT_AND_SERVER
type WorkloadMode string

const (
	// Default value, which will be interpreted by its own usage.
	WorkloadModeUndefined WorkloadMode = "UNDEFINED"
	// Selects for scenarios when the workload is the
	// source of the network traffic. In addition,
	// if the workload is a gateway, selects this.
	WorkloadModeClient WorkloadMode = "CLIENT"
	// Selects for scenarios when the workload is the
	// destination of the network traffic.
	WorkloadModeServer WorkloadMode = "SERVER"
	// Selects for scenarios when the workload is either the
	// source or destination of the network traffic.
	WorkloadModeClientAndServer WorkloadMode = "CLIENT_AND_SERVER"
)

// WorkloadSelector specifies the criteria used to determine if a policy can be applied
// to a proxy. The matching criteria includes the metadata associated with a proxy,
// workload instance info such as labels attached to the pod/VM, or any other info
// that the proxy provides to Istio during the initial handshake. If multiple conditions are
// specified, all conditions need to match in order for the workload instance to be
// selected. Currently, only label based selection mechanism is supported.
type WorkloadSelector struct {
	// One or more labels that indicate a specific set of pods/VMs
	// on which a policy should be applied. The scope of label search is restricted to
	// the configuration namespace in which the resource is present.
	// +kubebuilder:validation:XValidation:message="wildcard not allowed in label key match",rule="self.all(key, !key.contains('*'))"
	// +kubebuilder:validation:XValidation:message="key must not be empty",rule="self.all(key, key.size() != 0)"
	// +protoc-gen-crd:map-value-validation:XValidation:message="wildcard not allowed in label value match",rule="!self.contains('*')"
	// +protoc-gen-crd:map-value-validation:MaxLength=63
	// +kubebuilder:validation:MaxProperties=4096
	MatchLabels map[string]string `json:"matchLabels,omitempty"`
}

// PortSelector is the criteria for specifying if a policy can be applied to
// a listener having a specific port.
type PortSelector struct {
	// Port number
	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Maximum=65535
	Number *uint32 `json:"number,omitempty"`
}

// PolicyTargetReference format as defined by [GEP-2648](https://gateway-api.sigs.k8s.io/geps/gep-2648/#direct-policy-design-rules).
//
// PolicyTargetReference specifies the targeted resource which the policy
// should be applied to. It must only target a single resource at a time, but it
// can be used to target larger resources such as Gateways that may apply to
// multiple child resources. The PolicyTargetReference will be used instead of
// a WorkloadSelector in the RequestAuthentication, AuthorizationPolicy,
// Telemetry, and WasmPlugin CRDs to target a Kubernetes Gateway.
//
// The following is an example of an AuthorizationPolicy bound to a waypoint proxy using
// a PolicyTargetReference. The example sets `action` to `DENY` to create a deny policy.
// It denies all the requests with `POST` method on port `8080` directed through the
// `waypoint` Gateway in the `foo` namespace.
//
// ```yaml
// apiVersion: security.istio.io/v1
// kind: AuthorizationPolicy
// metadata:
//
//	name: httpbin
//	namespace: foo
//
// spec:
//
//	targetRefs:
//	- name: waypoint
//	  kind: Gateway
//	  group: gateway.networking.k8s.io
//	action: DENY
//	rules:
//	- to:
//	  - operation:
//	      methods: ["POST"]
//	      ports: ["8080"]
//
// ```
//
// When binding to a GatewayClass resource using PolicyTargetReference, your policy must be in the root namespace.
type PolicyTargetReference struct {
	// group is the group of the target resource.
	// +kubebuilder:validation:MaxLength=253
	// +kubebuilder:validation:Pattern=`^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$`
	Group *string `json:"group,omitempty"`
	// kind is kind of the target resource.
	// +kubebuilder:validation:MinLength=1
	// +kubebuilder:validation:MaxLength=63
	// +kubebuilder:validation:Pattern=`^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$`
	Kind *string `json:"kind,omitempty"`
	// name is the name of the target resource.
	// +kubebuilder:validation:MinLength=1
	// +kubebuilder:validation:MaxLength=253
	Name *string `json:"name,omitempty"`
	// namespace is the namespace of the referent. When unspecified, the local
	// namespace is inferred.
	// +kubebuilder:validation:XValidation:message="cross namespace referencing is not currently supported",rule="self.size() == 0"
	Namespace *string `json:"namespace,omitempty"`
}

const fileTypeV1beta1SelectorProtoRawDesc = "" +
	"\n" +
	"\x1btype/v1beta1/selector.proto\x12\x12istio.type.v1beta1\x1a\x1fgoogle/api/field_behavior.proto\"\xac\x01\n" +
	"\x10WorkloadSelector\x12X\n" +
	"\fmatch_labels\x18\x01 \x03(\v25.istio.type.v1beta1.WorkloadSelector.MatchLabelsEntryR\vmatchLabels\x1a>\n" +
	"\x10MatchLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\",\n" +
	"\fPortSelector\x12\x1c\n" +
	"\x06number\x18\x01 \x01(\rB\x04\xe2A\x01\x02R\x06number\"\x7f\n" +
	"\x15PolicyTargetReference\x12\x14\n" +
	"\x05group\x18\x01 \x01(\tR\x05group\x12\x18\n" +
	"\x04kind\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\x04kind\x12\x18\n" +
	"\x04name\x18\x03 \x01(\tB\x04\xe2A\x01\x02R\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace*L\n" +
	"\fWorkloadMode\x12\r\n" +
	"\tUNDEFINED\x10\x00\x12\n" +
	"\n" +
	"\x06CLIENT\x10\x01\x12\n" +
	"\n" +
	"\x06SERVER\x10\x02\x12\x15\n" +
	"\x11CLIENT_AND_SERVER\x10\x03B\x1bZ\x19istio.io/api/type/v1beta1b\x06proto3"

	// TLS connection mode
	// +kubebuilder:validation:Enum=DISABLE;SIMPLE;MUTUAL;ISTIO_MUTUAL
type ClientTLSSettingsTLSmode string

const (
	// Do not setup a TLS connection to the upstream endpoint.
	ClientTLSSettingsTLSmodeDisable ClientTLSSettingsTLSmode = "DISABLE"
	// Originate a TLS connection to the upstream endpoint.
	ClientTLSSettingsTLSmodeSimple ClientTLSSettingsTLSmode = "SIMPLE"
	// Secure connections to the upstream using mutual TLS by presenting
	// client certificates for authentication.
	ClientTLSSettingsTLSmodeMutual ClientTLSSettingsTLSmode = "MUTUAL"
	// Secure connections to the upstream using mutual TLS by presenting
	// client certificates for authentication.
	// Compared to Mutual mode, this mode uses certificates generated
	// automatically by Istio for mTLS authentication. When this mode is
	// used, all other fields in `ClientTLSSettings` should be empty.
	ClientTLSSettingsTLSmodeIstioMutual ClientTLSSettingsTLSmode = "ISTIO_MUTUAL"
)

// SSL/TLS related settings for upstream connections. See Envoy's [TLS
// context](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto.html#common-tls-configuration)
// for more details. These settings are common to both HTTP and TCP upstreams.
//
// For example, the following rule configures a client to use mutual TLS
// for connections to upstream database cluster.
//
// ```yaml
// apiVersion: networking.istio.io/v1
// kind: DestinationRule
// metadata:
//
//	name: db-mtls
//
// spec:
//
//	host: mydbserver.prod.svc.cluster.local
//	trafficPolicy:
//	  tls:
//	    mode: MUTUAL
//	    clientCertificate: /etc/certs/myclientcert.pem
//	    privateKey: /etc/certs/client_private_key.pem
//	    caCertificates: /etc/certs/rootcacerts.pem
//
// ```
//
// The following rule configures a client to use TLS when talking to a
// foreign service whose domain matches *.foo.com.
//
// ```yaml
// apiVersion: networking.istio.io/v1
// kind: DestinationRule
// metadata:
//
//	name: tls-foo
//
// spec:
//
//	host: "*.foo.com"
//	trafficPolicy:
//	  tls:
//	    mode: SIMPLE
//
// ```
//
// The following rule configures a client to use Istio mutual TLS when talking
// to rating services.
//
// ```yaml
// apiVersion: networking.istio.io/v1
// kind: DestinationRule
// metadata:
//
//	name: ratings-istio-mtls
//
// spec:
//
//	host: ratings.prod.svc.cluster.local
//	trafficPolicy:
//	  tls:
//	    mode: ISTIO_MUTUAL
//
// ```
type ClientTLSSettings struct {
	// Indicates whether connections to this port should be secured
	// using TLS. The value of this field determines how TLS is enforced.
	Mode ClientTLSSettingsTLSmode `json:"mode,omitempty"`
	// REQUIRED if mode is `MUTUAL`. The path to the file holding the
	// client-side TLS certificate to use.
	// Should be empty if mode is `ISTIO_MUTUAL`.
	ClientCertificate *string `json:"clientCertificate,omitempty"`
	// REQUIRED if mode is `MUTUAL`. The path to the file holding the
	// client's private key.
	// Should be empty if mode is `ISTIO_MUTUAL`.
	PrivateKey *string `json:"privateKey,omitempty"`
	// OPTIONAL: The path to the file containing certificate authority
	// certificates to use in verifying a presented server certificate. If
	// omitted, the proxy will verify the server's certificate using
	// the OS CA certificates.
	// Should be empty if mode is `ISTIO_MUTUAL`.
	CaCertificates *string `json:"caCertificates,omitempty"`
	// The name of the secret that holds the TLS certs for the
	// client including the CA certificates. This secret must exist in
	// the namespace of the proxy using the certificates.
	// An Opaque secret should contain the following keys and values:
	// `key: <privateKey>`, `cert: <clientCert>`, `cacert: <CACertificate>`,
	// `crl: <certificateRevocationList>`
	// Here CACertificate is used to verify the server certificate.
	// For mutual TLS, `cacert: <CACertificate>` can be provided in the
	// same secret or a separate secret named `<secret>-cacert`.
	// A TLS secret for client certificates with an additional
	// `ca.crt` key for CA certificates and `ca.crl` key for
	// certificate revocation list(CRL) is also supported.
	// Only one of client certificates and CA certificate
	// or credentialName can be specified.
	//
	// **NOTE:** This field is applicable at sidecars only if
	// `DestinationRule` has a `workloadSelector` specified.
	// Otherwise the field will be applicable only at gateways, and
	// sidecars will continue to use the certificate paths.
	CredentialName *string `json:"credentialName,omitempty"`
	// A list of alternate names to verify the subject identity in the
	// certificate. If specified, the proxy will verify that the server
	// certificate's subject alt name matches one of the specified values.
	// If specified, this list overrides the value of `subjectAltNames`
	// from the `ServiceEntry`. If unspecified, automatic validation of upstream
	// presented certificate for new upstream connections will be done based on the
	// downstream HTTP host/authority header.
	SubjectAltNames []string `json:"subjectAltNames,omitempty"`
	// SNI string to present to the server during TLS handshake.
	// If unspecified, SNI will be automatically set based on downstream HTTP
	// host/authority header for SIMPLE and MUTUAL TLS modes.
	Sni *string `json:"sni,omitempty"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the
	// CA signature and SAN for the server certificate corresponding to the host.
	// The default value of this field is false.
	InsecureSkipVerify *bool `json:"insecureSkipVerify,omitempty"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL)
	// to use in verifying a presented server certificate. `CRL` is a list of certificates
	// that have been revoked by the CA (Certificate Authority) before their scheduled expiration date.
	// If specified, the proxy will verify if the presented certificate is part of the revoked list of certificates.
	// If omitted, the proxy will not verify the certificate against the `crl`. Note that if `credentialName` is set,
	// `CRL` cannot be specified using `caCrl`, rather it has to be specified inside the credential.
	CaCrl *string `json:"caCrl,omitempty"`
}

// Locality-weighted load balancing allows administrators to control the
// distribution of traffic to endpoints based on the localities of where the
// traffic originates and where it will terminate. These localities are
// specified using arbitrary labels that designate a hierarchy of localities in
// {region}/{zone}/{sub-zone} form. For additional detail refer to
// [Locality Weight](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
// The following example shows how to setup locality weights mesh-wide.
//
// Given a mesh with workloads and their service deployed to "us-west/zone1/\*"
// and "us-west/zone2/\*". This example specifies that when traffic accessing a
// service originates from workloads in "us-west/zone1/\*", 80% of the traffic
// will be sent to endpoints in "us-west/zone1/\*", i.e the same zone, and the
// remaining 20% will go to endpoints in "us-west/zone2/\*". This setup is
// intended to favor routing traffic to endpoints in the same locality.
// A similar setting is specified for traffic originating in "us-west/zone2/\*".
//
// ```yaml
//
//	distribute:
//	  - from: us-west/zone1/*
//	    to:
//	      "us-west/zone1/*": 80
//	      "us-west/zone2/*": 20
//	  - from: us-west/zone2/*
//	    to:
//	      "us-west/zone1/*": 20
//	      "us-west/zone2/*": 80
//
// ```
//
// If the goal of the operator is not to distribute load across zones and
// regions but rather to restrict the regionality of failover to meet other
// operational requirements an operator can set a 'failover' policy instead of
// a 'distribute' policy.
//
// The following example sets up a locality failover policy for regions.
// Assume a service resides in zones within us-east, us-west & eu-west
// this example specifies that when endpoints within us-east become unhealthy
// traffic should failover to endpoints in any zone or sub-zone within eu-west
// and similarly us-west should failover to us-east.
//
// ```yaml
//
//	failover:
//	  - from: us-east
//	    to: eu-west
//	  - from: us-west
//	    to: us-east
//
// ```
type LocalityLoadBalancerSetting struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	// Explicitly specify loadbalancing weight across different zones and geographical locations.
	// Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
	// If empty, the locality weight is set according to the endpoints number within it.
	Distribute []*LocalityLoadBalancerSettingDistribute `json:"distribute,omitempty"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	// Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
	// Should be used together with OutlierDetection to detect unhealthy endpoints.
	// Note: if no OutlierDetection specified, this will not take effect.
	Failover []*LocalityLoadBalancerSettingFailover `json:"failover,omitempty"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	// This is to support traffic failover across different groups of endpoints.
	// Two kinds of labels can be specified:
	//
	//   - Specify only label keys `[key1, key2, key3]`, istio would compare the label values of client with endpoints.
	//     Suppose there are total N label keys `[key1, key2, key3, ...keyN]` specified:
	//
	//     1. Endpoints matching all N labels with the client proxy have priority P(0) i.e. the highest priority.
	//     2. Endpoints matching the first N-1 labels with the client proxy have priority P(1) i.e. second highest priority.
	//     3. By extension of this logic, endpoints matching only the first label with the client proxy has priority P(N-1) i.e. second lowest priority.
	//     4. All the other endpoints have priority P(N) i.e. lowest priority.
	//
	//   - Specify labels with key and value `[key1=value1, key2=value2, key3=value3]`, istio would compare the labels with endpoints.
	//     Suppose there are total N labels `[key1=value1, key2=value2, key3=value3, ...keyN=valueN]` specified:
	//
	//     1. Endpoints matching all N labels have priority P(0) i.e. the highest priority.
	//     2. Endpoints matching the first N-1 labels have priority P(1) i.e. second highest priority.
	//     3. By extension of this logic, endpoints matching only the first label has priority P(N-1) i.e. second lowest priority.
	//     4. All the other endpoints have priority P(N) i.e. lowest priority.
	//
	// Note: For a label to be considered for match, the previous labels must match, i.e. nth label would be considered matched only if first n-1 labels match.
	//
	// It can be any label specified on both client and server workloads.
	// The following labels which have special semantic meaning are also supported:
	//
	//   - `topology.istio.io/network` is used to match the network metadata of an endpoint, which can be specified by pod/namespace label `topology.istio.io/network`, sidecar env `ISTIO_META_NETWORK` or MeshNetworks.
	//   - `topology.istio.io/cluster` is used to match the clusterID of an endpoint, which can be specified by pod label `topology.istio.io/cluster` or pod env `ISTIO_META_CLUSTER_ID`.
	//   - `topology.kubernetes.io/region` is used to match the region metadata of an endpoint, which maps to Kubernetes node label `topology.kubernetes.io/region` or the deprecated label `failure-domain.beta.kubernetes.io/region`.
	//   - `topology.kubernetes.io/zone` is used to match the zone metadata of an endpoint, which maps to Kubernetes node label `topology.kubernetes.io/zone` or the deprecated label `failure-domain.beta.kubernetes.io/zone`.
	//   - `topology.istio.io/subzone` is used to match the subzone metadata of an endpoint, which maps to Istio node label `topology.istio.io/subzone`.
	//   - `kubernetes.io/hostname` is used to match the current node of an endpoint, which maps to Kubernetes node label `kubernetes.io/hostname`.
	//
	// The below topology config indicates the following priority levels:
	//
	// ```yaml
	// failoverPriority:
	// - "topology.istio.io/network"
	// - "topology.kubernetes.io/region"
	// - "topology.kubernetes.io/zone"
	// - "topology.istio.io/subzone"
	// ```
	//
	// 1. endpoints match same [network, region, zone, subzone] label with the client proxy have the highest priority.
	// 2. endpoints have same [network, region, zone] label but different [subzone] label with the client proxy have the second highest priority.
	// 3. endpoints have same [network, region] label but different [zone] label with the client proxy have the third highest priority.
	// 4. endpoints have same [network] but different [region] labels with the client proxy have the fourth highest priority.
	// 5. all the other endpoints have the same lowest priority.
	//
	// Suppose a service associated endpoints reside in multi clusters, the below example represents:
	// 1. endpoints in `clusterA` and has `version=v1` label have P(0) priority.
	// 2. endpoints not in `clusterA` but has `version=v1` label have P(1) priority.
	// 2. all the other endpoints have P(2) priority.
	//
	// ```yaml
	// failoverPriority:
	// - "version=v1"
	// - "topology.istio.io/cluster=clusterA"
	// ```
	//
	// Optional: only one of distribute, failover or failoverPriority can be set.
	// And it should be used together with `OutlierDetection` to detect unhealthy endpoints, otherwise has no effect.
	FailoverPriority []string `json:"failoverPriority,omitempty"`
	// Enable locality load balancing. This is DestinationRule-level and will override mesh-wide settings in entirety.
	// e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh-wide settings is.
	Enabled *bool `json:"enabled,omitempty"`
}

// TCP keepalive.
type ConnectionPoolSettingsTCPSettingsTcpKeepalive struct {
	// Maximum number of keepalive probes to send without response before
	// deciding the connection is dead. Default is to use the OS level configuration
	// (unless overridden, Linux defaults to 9.)
	Probes *uint32 `json:"probes,omitempty"`
	// The time duration a connection needs to be idle before keep-alive
	// probes start being sent. Default is to use the OS level configuration
	// (unless overridden, Linux defaults to 7200s (ie 2 hours.)
	Time *metav1.Duration `json:"time,omitempty"`
	// The time duration between keep-alive probes.
	// Default is to use the OS level configuration
	// (unless overridden, Linux defaults to 75s.)
	Interval *metav1.Duration `json:"interval,omitempty"`
}

// Describes how traffic originating in the 'from' zone or sub-zone is
// distributed over a set of 'to' zones. Syntax for specifying a zone is
// {region}/{zone}/{sub-zone} and terminal wildcards are allowed on any
// segment of the specification. Examples:
//
// `*` - matches all localities
//
// `us-west/*` - all zones and sub-zones within the us-west region
//
// `us-west/zone-1/*` - all sub-zones within us-west/zone-1
type LocalityLoadBalancerSettingDistribute struct {
	// Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
	From *string `json:"from,omitempty"`
	// Map of upstream localities to traffic distribution weights. The sum of
	// all weights should be 100. Any locality not present will
	// receive no traffic.
	To map[string]uint32 `json:"to,omitempty"`
}

// Specify the traffic failover policy across regions. Since zone and sub-zone
// failover is supported by default this only needs to be specified for
// regions when the operator needs to constrain traffic failover so that
// the default behavior of failing over to any endpoint globally does not
// apply. This is useful when failing over traffic across regions would not
// improve service health or may need to be restricted for other reasons
// like regulatory controls.
type LocalityLoadBalancerSettingFailover struct {
	// Originating region.
	From *string `json:"from,omitempty"`
	// Destination region the traffic will fail over to when endpoints in
	// the 'from' region becomes unhealthy.
	To *string `json:"to,omitempty"`
}

// Describes the retry policy to use when a HTTP request fails. For
// example, the following rule sets the maximum number of retries to 3 when
// calling ratings:v1 service, with a 2s timeout per retry attempt.
// A retry will be attempted if there is a connect-failure, refused_stream
// or when the upstream server responds with Service Unavailable(503).
//
// ```yaml
// apiVersion: networking.istio.io/v1
// kind: VirtualService
// metadata:
//
//	name: ratings-route
//
// spec:
//
//	hosts:
//	- ratings.prod.svc.cluster.local
//	http:
//	- route:
//	  - destination:
//	      host: ratings.prod.svc.cluster.local
//	      subset: v1
//	  retries:
//	    attempts: 3
//	    perTryTimeout: 2s
//	    retryOn: gateway-error,connect-failure,refused-stream
//
// ```
type HTTPRetry struct {
	// Number of retries to be allowed for a given request. The interval
	// between retries will be determined automatically (25ms+). When request
	// `timeout` of the [HTTP route](https://istio.io/docs/reference/config/networking/virtual-service/#HTTPRoute)
	// or `per_try_timeout` is configured, the actual number of retries attempted also depends on
	// the specified request `timeout` and `per_try_timeout` values. MUST be >= 0. If `0`, retries will be disabled.
	// The maximum possible number of requests made will be 1 + `attempts`.
	Attempts *int32 `json:"attempts,omitempty"`
	// Timeout per attempt for a given request, including the initial call and any retries. Format: 1h/1m/1s/1ms. MUST be >=1ms.
	// Default is same value as request
	// `timeout` of the [HTTP route](https://istio.io/docs/reference/config/networking/virtual-service/#HTTPRoute),
	// which means no timeout.
	PerTryTimeout *metav1.Duration `json:"perTryTimeout,omitempty"`
	// Specifies the conditions under which retry takes place.
	// One or more policies can be specified using a ‘,’ delimited list.
	// See the [retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on)
	// and [gRPC retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on) for more details.
	//
	// In addition to the policies specified above, a list of HTTP status codes can be passed, such as `retryOn: "503,reset"`.
	// Note these status codes refer to the actual responses received from the destination.
	// For example, if a connection is reset, Istio will translate this to 503 for it's response.
	// However, the destination did not return a 503 error, so this would not match `"503"` (it would, however, match `"reset"`).
	//
	// If not specified, this defaults to `connect-failure,refused-stream,unavailable,cancelled`.
	RetryOn *string `json:"retryOn,omitempty"`
	// Flag to specify whether the retries should retry to other localities.
	// See the [retry plugin configuration](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/http_connection_management#retry-plugin-configuration) for more details.
	RetryRemoteLocalities *bool `json:"retryRemoteLocalities,omitempty"`
	// Flag to specify whether the retries should ignore previously tried hosts during retry.
	// Defaults to true.
	RetryIgnorePreviousHosts *bool `json:"retryIgnorePreviousHosts,omitempty"`
	// Specifies the minimum duration between retry attempts.
	// If unset, default minimum duration of 25ms is used as base interval for exponetial backoff.
	// This has an impact on the total number of retries that will be attempted based on the `attempts` field
	// and route timeout. For example, with attempts is set to 3, backoff to 2s and timeout to 3s, the request will
	// be retried only once.
	Backoff *metav1.Duration `json:"backoff,omitempty"`
}

outputFile: api/v1alpha1/values_types.gen.go
headerFile: common/scripts/copyright-banner-go.txt
package: v1alpha1

globalTransformations:
  removeImports:
  - github.com/golang/protobuf/ptypes/duration
  - github.com/golang/protobuf/ptypes/wrappers
  - github.com/golang/protobuf/ptypes/struct
  - google.golang.org/protobuf/types/known/wrapperspb
  - google.golang.org/protobuf/types/known/structpb
  - google.golang.org/protobuf/types/known/durationpb
  - google.golang.org/protobuf/types/known/anypb
  - google.golang.org/genproto/googleapis/api/annotations
  - google.golang.org/protobuf/reflect/protoreflect
  - google.golang.org/protobuf/runtime/protoimpl
  - reflect
  - sync
  - istio.io/api/type/v1beta1
  - istio.io/api/networking/v1alpha3
  - istio.io/api/networking/v1beta1
  - k8s.io/apimachinery/pkg/apis/meta/v1
  - k8s.io/api/core/v1
  addImports:
    metav1: k8s.io/apimachinery/pkg/apis/meta/v1
    k8sv1: k8s.io/api/core/v1
    autoscalingv2: k8s.io/api/autoscaling/v2
    intstr: k8s.io/apimachinery/pkg/util/intstr
  removeFields:
  - "*.state"         # protobuf-specific field
  - "*.sizeCache"     # protobuf-specific field
  - "*.unknownFields" # protobuf-specific field
  removeFunctions:
  - "*.*"   # remove all functions for now (these are only getters, which we don't need (yet?))
  replaceTypes:
    "*wrappers.BoolValue": "*bool"
    "*wrappers.Int32Value": "*int32"
    "*wrappers.Int64Value": "*int64"
    "*wrappers.UInt32Value": "*uint32"
    "*duration.Duration": "*metav1.Duration"

inputFiles:
- module: istio.io/istio
  path: /operator/pkg/apis/istio/v1alpha1/values_types.pb.go
  transformations:
    removeTypes:
    - EgressGatewayConfig
    - IngressGatewayConfig
    - IngressGatewayZvpnConfig
    - PilotIngressConfig
    - GatewaysConfig
    - ServiceAccount
    - Resources
    - DefaultResourcesConfig
    - IntOrString
    removeFields:
    - Values.Cni                           # moved to IstioCNIValues
    - Values.IstioCni                      # deprecated; replaced with Pilot.CNI
    - Values.Gateways                      # operator doesn't support deployment of ingress/egress gateways
    - Values.OwnerName                     # operator sets this internally
    - Values.Ztunnel                       # ambient is not yet supported
    - Values.Experimental                  # unstable/experimental fields that could be removed or changed in the future
    - SidecarInjectorConfig.ObjectSelector # appears to be unused
    - CNIConfig.Enabled                    # CNI is enabled by the mere presence of the IstioCNI resource
    - CNIConfig.LogLevel                   # deprecated and replaced with CNIConfig.logging.level
    - CNIConfig.Ambient                    # we don't support Ambient yet
    - CNIUsageConfig.Chained               # deprecated and unused in upstream
    - BaseConfig.EnableCRDTemplates        # not used, because the operator doesn't deploy CRDs
    - BaseConfig.EnableIstioConfigCRDs     # present in values.yaml, but not used in any chart
    - BaseConfig.ValidateGateway           # not used anywhere
    replaceTypes:
      "*IntOrString": "*intstr.IntOrString"
      "*wrapperspb.BoolValue": "*bool"
      "*durationpb.Duration": "*metav1.Duration"
      "*Resources": "*k8sv1.ResourceRequirements"
    replaceFieldTypes:
      "*.Tag": "string"
      CNIConfig.Affinity: "*k8sv1.Affinity"
      CNIConfig.PodAnnotations: "map[string]string"
      CNIConfig.SeccompProfile: "*k8sv1.SeccompProfile"
      CNIConfig.PullPolicy: "*k8sv1.PullPolicy"
      Values.MeshConfig: "*MeshConfig"
      GlobalConfig.DefaultNodeSelector: "map[string]string"
      GlobalConfig.DefaultResources: "*k8sv1.ResourceRequirements"
      GlobalConfig.DefaultTolerations: "[]k8sv1.Toleration"
      GlobalConfig.ImagePullPolicy: "*k8sv1.PullPolicy"
      GlobalConfig.MeshNetworks: "map[string]Network"
      PilotConfig.Affinity: "*k8sv1.Affinity"
      PilotConfig.AutoscaleBehavior: "*autoscalingv2.HorizontalPodAutoscalerBehavior"
      PilotConfig.Env: "map[string]string"
      PilotConfig.ExtraContainerArgs: "[]string"
      PilotConfig.DeploymentLabels: "map[string]string"
      PilotConfig.NodeSelector: "map[string]string"
      PilotConfig.PodAnnotations: "map[string]string"
      PilotConfig.PodLabels: "map[string]string"
      PilotConfig.ServiceAnnotations: "map[string]string"
      PilotConfig.ServiceAccountAnnotations: "map[string]string"
      PilotConfig.SeccompProfile: "*k8sv1.SeccompProfile"
      PilotConfig.Tolerations: "[]k8sv1.Toleration"
      PilotConfig.TopologySpreadConstraints: "[]k8sv1.TopologySpreadConstraint"
      PilotConfig.VolumeMounts: "[]k8sv1.VolumeMount"
      PilotConfig.Volumes: "[]k8sv1.Volume"
      ProxyConfig.Resources: "*k8sv1.ResourceRequirements"
      ProxyConfig.Lifecycle: "*k8sv1.Lifecycle"
      SDSConfig.Token: "*SDSConfigToken"
      SidecarInjectorConfig.NeverInjectSelector: "[]metav1.LabelSelector"
      SidecarInjectorConfig.AlwaysInjectSelector: "[]metav1.LabelSelector"
      SidecarInjectorConfig.InjectedAnnotations: "map[string]string"
      SidecarInjectorConfig.Templates: "map[string]string"
    addTags:
      CNIConfig.PullPolicy: "// +kubebuilder:validation:Enum=Always;Never;IfNotPresent"
      GlobalConfig.ImagePullPolicy: "// +kubebuilder:validation:Enum=Always;Never;IfNotPresent"

- module: istio.io/api
  path: /mesh/v1alpha1/config.pb.go
  transformations:
    renameImports:
      v1: metav1
    replaceFieldTypes:
      MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat_Labels.Labels: "map[string]string"
      MeshConfig_ExtensionProvider_EnvoyOpenTelemetryLogProvider_LogFormat.Labels: "map[string]string"
      MeshConfig.DefaultConfig: "*MeshConfigProxyConfig"
      MeshConfig.TcpKeepalive: "*ConnectionPoolSettingsTCPSettingsTcpKeepalive"
      MeshConfig.LocalityLbSetting: "*LocalityLoadBalancerSetting"
      MeshConfig.DefaultHttpRetryPolicy: "*HTTPRetry"
      MeshConfig.DiscoverySelectors: "[]*metav1.LabelSelector"
      ConfigSource.TlsSettings: "*ClientTLSSettings"
      MeshConfig_CA.TlsSettings: "*ClientTLSSettings"
    removeTypes:
    - LabelSelector
    - LabelSelectorRequirement
    addTags:
      MeshConfig.ExtensionProviders: "// +kubebuilder:validation:MaxItems=1000"  # to prevent CEL cost overruns

- module: istio.io/api
  path: /mesh/v1alpha1/network.pb.go

- module: istio.io/api
  path: /mesh/v1alpha1/proxy.pb.go
  transformations:
    renameTypes:
      ProxyConfig: MeshConfigProxyConfig
    replaceFieldTypes:
      RemoteService.TcpKeepalive: "*ConnectionPoolSettingsTCPSettingsTcpKeepalive"
      RemoteService.TlsSettings: "*ClientTLSSettings"
      Tracing.TlsSettings: "*ClientTLSSettings"
      ProxyConfig.ReadinessProbe: "*k8sv1.Probe"
      ProxyConfig.Image: "*ProxyImage"

- module: istio.io/api
  path: /networking/v1beta1/proxy_config.pb.go
  transformations:
    removeTypes:
    - '*'
    preserveTypes:
    - ProxyImage
    replaceFieldTypes:
      ProxyConfig.Selector: "*WorkloadSelector"

- module: istio.io/api
  path: /type/v1beta1/selector.pb.go

- module: istio.io/api
  path: /networking/v1alpha3/destination_rule.pb.go
  transformations:
    removeTypes:
    - '*'
    preserveTypes:
    - ConnectionPoolSettings_TCPSettings_TcpKeepalive
    - LocalityLoadBalancerSetting
    - LocalityLoadBalancerSetting_Distribute
    - LocalityLoadBalancerSetting_Failover
    - ClientTLSSettings
    - ClientTLSSettings_TLSmode

- module: istio.io/api
  path: /networking/v1alpha3/virtual_service.pb.go
  transformations:
    removeTypes:
    - '*'
    preserveTypes:
    - HTTPRetry
